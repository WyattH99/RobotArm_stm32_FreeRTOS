ARM GAS  /tmp/cc5M3gB6.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"freertos.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.configureTimerForRunTimeStats,"ax",%progbits
  18              		.align	1
  19              		.weak	configureTimerForRunTimeStats
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	configureTimerForRunTimeStats:
  27              	.LFB244:
  28              		.file 1 "Core/Src/freertos.c"
   1:Core/Src/freertos.c **** /* USER CODE BEGIN Header */
   2:Core/Src/freertos.c **** /**
   3:Core/Src/freertos.c ****   ******************************************************************************
   4:Core/Src/freertos.c ****   * File Name          : freertos.c
   5:Core/Src/freertos.c ****   * Description        : Code for freertos applications
   6:Core/Src/freertos.c ****   ******************************************************************************
   7:Core/Src/freertos.c ****   * @attention
   8:Core/Src/freertos.c ****   *
   9:Core/Src/freertos.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/freertos.c ****   * All rights reserved.
  11:Core/Src/freertos.c ****   *
  12:Core/Src/freertos.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/freertos.c ****   * in the root directory of this software component.
  14:Core/Src/freertos.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/freertos.c ****   *
  16:Core/Src/freertos.c ****   ******************************************************************************
  17:Core/Src/freertos.c ****   */
  18:Core/Src/freertos.c **** /* USER CODE END Header */
  19:Core/Src/freertos.c **** 
  20:Core/Src/freertos.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/freertos.c **** #include "FreeRTOS.h"
  22:Core/Src/freertos.c **** #include "task.h"
  23:Core/Src/freertos.c **** #include "main.h"
  24:Core/Src/freertos.c **** 
  25:Core/Src/freertos.c **** /* Private includes ----------------------------------------------------------*/
  26:Core/Src/freertos.c **** /* USER CODE BEGIN Includes */
  27:Core/Src/freertos.c **** 
  28:Core/Src/freertos.c **** /* USER CODE END Includes */
  29:Core/Src/freertos.c **** 
  30:Core/Src/freertos.c **** /* Private typedef -----------------------------------------------------------*/
ARM GAS  /tmp/cc5M3gB6.s 			page 2


  31:Core/Src/freertos.c **** /* USER CODE BEGIN PTD */
  32:Core/Src/freertos.c **** 
  33:Core/Src/freertos.c **** /* USER CODE END PTD */
  34:Core/Src/freertos.c **** 
  35:Core/Src/freertos.c **** /* Private define ------------------------------------------------------------*/
  36:Core/Src/freertos.c **** /* USER CODE BEGIN PD */
  37:Core/Src/freertos.c **** 
  38:Core/Src/freertos.c **** /* USER CODE END PD */
  39:Core/Src/freertos.c **** 
  40:Core/Src/freertos.c **** /* Private macro -------------------------------------------------------------*/
  41:Core/Src/freertos.c **** /* USER CODE BEGIN PM */
  42:Core/Src/freertos.c **** 
  43:Core/Src/freertos.c **** /* USER CODE END PM */
  44:Core/Src/freertos.c **** 
  45:Core/Src/freertos.c **** /* Private variables ---------------------------------------------------------*/
  46:Core/Src/freertos.c **** /* USER CODE BEGIN Variables */
  47:Core/Src/freertos.c **** 
  48:Core/Src/freertos.c **** /* USER CODE END Variables */
  49:Core/Src/freertos.c **** 
  50:Core/Src/freertos.c **** /* Private function prototypes -----------------------------------------------*/
  51:Core/Src/freertos.c **** /* USER CODE BEGIN FunctionPrototypes */
  52:Core/Src/freertos.c **** 
  53:Core/Src/freertos.c **** /* USER CODE END FunctionPrototypes */
  54:Core/Src/freertos.c **** 
  55:Core/Src/freertos.c **** /* GetIdleTaskMemory prototype (linked to static allocation support) */
  56:Core/Src/freertos.c **** void vApplicationGetIdleTaskMemory( StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskS
  57:Core/Src/freertos.c **** 
  58:Core/Src/freertos.c **** /* Hook prototypes */
  59:Core/Src/freertos.c **** void configureTimerForRunTimeStats(void);
  60:Core/Src/freertos.c **** unsigned long getRunTimeCounterValue(void);
  61:Core/Src/freertos.c **** 
  62:Core/Src/freertos.c **** /* USER CODE BEGIN 1 */
  63:Core/Src/freertos.c **** /* Functions needed when configGENERATE_RUN_TIME_STATS is on */
  64:Core/Src/freertos.c **** __weak void configureTimerForRunTimeStats(void)
  65:Core/Src/freertos.c **** {
  29              		.loc 1 65 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  66:Core/Src/freertos.c **** 
  67:Core/Src/freertos.c **** }
  34              		.loc 1 67 1 view .LVU1
  35 0000 7047     		bx	lr
  36              		.cfi_endproc
  37              	.LFE244:
  39              		.section	.text.getRunTimeCounterValue,"ax",%progbits
  40              		.align	1
  41              		.weak	getRunTimeCounterValue
  42              		.syntax unified
  43              		.thumb
  44              		.thumb_func
  45              		.fpu fpv4-sp-d16
  47              	getRunTimeCounterValue:
  48              	.LFB245:
  68:Core/Src/freertos.c **** 
  69:Core/Src/freertos.c **** __weak unsigned long getRunTimeCounterValue(void)
ARM GAS  /tmp/cc5M3gB6.s 			page 3


  70:Core/Src/freertos.c **** {
  49              		.loc 1 70 1 view -0
  50              		.cfi_startproc
  51              		@ args = 0, pretend = 0, frame = 0
  52              		@ frame_needed = 0, uses_anonymous_args = 0
  53              		@ link register save eliminated.
  71:Core/Src/freertos.c **** return 0;
  54              		.loc 1 71 1 view .LVU3
  72:Core/Src/freertos.c **** }
  55              		.loc 1 72 1 is_stmt 0 view .LVU4
  56 0000 0020     		movs	r0, #0
  57 0002 7047     		bx	lr
  58              		.cfi_endproc
  59              	.LFE245:
  61              		.section	.text.vApplicationGetIdleTaskMemory,"ax",%progbits
  62              		.align	1
  63              		.global	vApplicationGetIdleTaskMemory
  64              		.syntax unified
  65              		.thumb
  66              		.thumb_func
  67              		.fpu fpv4-sp-d16
  69              	vApplicationGetIdleTaskMemory:
  70              	.LVL0:
  71              	.LFB246:
  73:Core/Src/freertos.c **** /* USER CODE END 1 */
  74:Core/Src/freertos.c **** 
  75:Core/Src/freertos.c **** /* USER CODE BEGIN GET_IDLE_TASK_MEMORY */
  76:Core/Src/freertos.c **** static StaticTask_t xIdleTaskTCBBuffer;
  77:Core/Src/freertos.c **** static StackType_t xIdleStack[configMINIMAL_STACK_SIZE];
  78:Core/Src/freertos.c **** 
  79:Core/Src/freertos.c **** void vApplicationGetIdleTaskMemory( StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskS
  80:Core/Src/freertos.c **** {
  72              		.loc 1 80 1 is_stmt 1 view -0
  73              		.cfi_startproc
  74              		@ args = 0, pretend = 0, frame = 0
  75              		@ frame_needed = 0, uses_anonymous_args = 0
  76              		@ link register save eliminated.
  81:Core/Src/freertos.c ****   *ppxIdleTaskTCBBuffer = &xIdleTaskTCBBuffer;
  77              		.loc 1 81 3 view .LVU6
  78              		.loc 1 81 25 is_stmt 0 view .LVU7
  79 0000 034B     		ldr	r3, .L4
  80 0002 0360     		str	r3, [r0]
  82:Core/Src/freertos.c ****   *ppxIdleTaskStackBuffer = &xIdleStack[0];
  81              		.loc 1 82 3 is_stmt 1 view .LVU8
  82              		.loc 1 82 27 is_stmt 0 view .LVU9
  83 0004 034B     		ldr	r3, .L4+4
  84 0006 0B60     		str	r3, [r1]
  83:Core/Src/freertos.c ****   *pulIdleTaskStackSize = configMINIMAL_STACK_SIZE;
  85              		.loc 1 83 3 is_stmt 1 view .LVU10
  86              		.loc 1 83 25 is_stmt 0 view .LVU11
  87 0008 8023     		movs	r3, #128
  88 000a 1360     		str	r3, [r2]
  84:Core/Src/freertos.c ****   /* place for user code */
  85:Core/Src/freertos.c **** }
  89              		.loc 1 85 1 view .LVU12
  90 000c 7047     		bx	lr
  91              	.L5:
ARM GAS  /tmp/cc5M3gB6.s 			page 4


  92 000e 00BF     		.align	2
  93              	.L4:
  94 0010 00000000 		.word	.LANCHOR0
  95 0014 00000000 		.word	.LANCHOR1
  96              		.cfi_endproc
  97              	.LFE246:
  99              		.section	.bss.xIdleStack,"aw",%nobits
 100              		.align	2
 101              		.set	.LANCHOR1,. + 0
 104              	xIdleStack:
 105 0000 00000000 		.space	512
 105      00000000 
 105      00000000 
 105      00000000 
 105      00000000 
 106              		.section	.bss.xIdleTaskTCBBuffer,"aw",%nobits
 107              		.align	2
 108              		.set	.LANCHOR0,. + 0
 111              	xIdleTaskTCBBuffer:
 112 0000 00000000 		.space	116
 112      00000000 
 112      00000000 
 112      00000000 
 112      00000000 
 113              		.text
 114              	.Letext0:
 115              		.file 2 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 116              		.file 3 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
 117              		.file 4 "Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h"
ARM GAS  /tmp/cc5M3gB6.s 			page 5


DEFINED SYMBOLS
                            *ABS*:0000000000000000 freertos.c
     /tmp/cc5M3gB6.s:18     .text.configureTimerForRunTimeStats:0000000000000000 $t
     /tmp/cc5M3gB6.s:26     .text.configureTimerForRunTimeStats:0000000000000000 configureTimerForRunTimeStats
     /tmp/cc5M3gB6.s:40     .text.getRunTimeCounterValue:0000000000000000 $t
     /tmp/cc5M3gB6.s:47     .text.getRunTimeCounterValue:0000000000000000 getRunTimeCounterValue
     /tmp/cc5M3gB6.s:62     .text.vApplicationGetIdleTaskMemory:0000000000000000 $t
     /tmp/cc5M3gB6.s:69     .text.vApplicationGetIdleTaskMemory:0000000000000000 vApplicationGetIdleTaskMemory
     /tmp/cc5M3gB6.s:94     .text.vApplicationGetIdleTaskMemory:0000000000000010 $d
     /tmp/cc5M3gB6.s:100    .bss.xIdleStack:0000000000000000 $d
     /tmp/cc5M3gB6.s:104    .bss.xIdleStack:0000000000000000 xIdleStack
     /tmp/cc5M3gB6.s:107    .bss.xIdleTaskTCBBuffer:0000000000000000 $d
     /tmp/cc5M3gB6.s:111    .bss.xIdleTaskTCBBuffer:0000000000000000 xIdleTaskTCBBuffer

NO UNDEFINED SYMBOLS
