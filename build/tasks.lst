ARM GAS  /tmp/cc7Oi1VE.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"tasks.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.prvTaskIsTaskSuspended,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	prvTaskIsTaskSuspended:
  26              	.LVL0:
  27              	.LFB15:
  28              		.file 1 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c"
   1:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * FreeRTOS Kernel V10.3.1
   3:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Copyright (C) 2020 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
   5:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * the Software without restriction, including without limitation the rights to
   8:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * subject to the following conditions:
  11:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
  12:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The above copyright notice and this permission notice shall be included in all
  13:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * copies or substantial portions of the Software.
  14:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
  15:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
  22:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * http://www.FreeRTOS.org
  23:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * http://aws.amazon.com/freertos
  24:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
  25:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * 1 tab == 4 spaces!
  26:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
  27:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  28:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Standard includes. */
  29:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include <stdlib.h>
  30:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include <string.h>
ARM GAS  /tmp/cc7Oi1VE.s 			page 2


  31:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  32:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  33:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** all the API functions to use the MPU wrappers.  That should only be done when
  34:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** task.h is included from an application file. */
  35:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  36:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  37:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* FreeRTOS includes. */
  38:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include "FreeRTOS.h"
  39:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include "task.h"
  40:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include "timers.h"
  41:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include "stack_macros.h"
  42:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  43:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Lint e9021, e961 and e750 are suppressed as a MISRA exception justified
  44:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** because the MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined
  45:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** for the header files above, but not in this file, in order to generate the
  46:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** correct privileged Vs unprivileged linkage and placement. */
  47:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750 !e9021. */
  48:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  49:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Set configUSE_STATS_FORMATTING_FUNCTIONS to 2 to include the stats formatting
  50:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** functions but without including stdio.h here. */
  51:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_STATS_FORMATTING_FUNCTIONS == 1 )
  52:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* At the bottom of this file are two optional functions that can be used
  53:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	to generate human readable text from the raw data generated by the
  54:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uxTaskGetSystemState() function.  Note the formatting functions are provided
  55:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	for convenience only, and are NOT considered part of the kernel. */
  56:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#include <stdio.h>
  57:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_STATS_FORMATTING_FUNCTIONS == 1 ) */
  58:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  59:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_PREEMPTION == 0 )
  60:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* If the cooperative scheduler is being used then a yield should not be
  61:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	performed just because a higher priority task has been woken. */
  62:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskYIELD_IF_USING_PREEMPTION()
  63:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #else
  64:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskYIELD_IF_USING_PREEMPTION() portYIELD_WITHIN_API()
  65:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
  66:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  67:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Values that can be assigned to the ucNotifyState member of the TCB. */
  68:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define taskNOT_WAITING_NOTIFICATION	( ( uint8_t ) 0 )
  69:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define taskWAITING_NOTIFICATION		( ( uint8_t ) 1 )
  70:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define taskNOTIFICATION_RECEIVED		( ( uint8_t ) 2 )
  71:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  72:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
  73:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The value used to fill the stack of a task when the task is created.  This
  74:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * is used purely for checking the high water mark for tasks.
  75:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
  76:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskSTACK_FILL_BYTE	( 0xa5U )
  77:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  78:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Bits used to recored how a task's stack and TCB were allocated. */
  79:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB 		( ( uint8_t ) 0 )
  80:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskSTATICALLY_ALLOCATED_STACK_ONLY 			( ( uint8_t ) 1 )
  81:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskSTATICALLY_ALLOCATED_STACK_AND_TCB		( ( uint8_t ) 2 )
  82:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  83:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* If any of the following are set then task stacks are filled with a known
  84:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** value so the high water mark can be determined.  If none of the following are
  85:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** set then don't fill the stack so there is no unnecessary dependency on memset. */
  86:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( ( configCHECK_FOR_STACK_OVERFLOW > 1 ) || ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTas
  87:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define tskSET_NEW_STACKS_TO_KNOWN_VALUE	1
ARM GAS  /tmp/cc7Oi1VE.s 			page 3


  88:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #else
  89:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define tskSET_NEW_STACKS_TO_KNOWN_VALUE	0
  90:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
  91:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  92:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
  93:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Macros used by vListTask to indicate which state a task is in.
  94:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
  95:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskRUNNING_CHAR		( 'X' )
  96:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskBLOCKED_CHAR		( 'B' )
  97:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskREADY_CHAR		( 'R' )
  98:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskDELETED_CHAR		( 'D' )
  99:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskSUSPENDED_CHAR	( 'S' )
 100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Some kernel aware debuggers require the data the debugger needs access to be
 103:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * global, rather than file scope.
 104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #ifdef portREMOVE_STATIC_QUALIFIER
 106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define static
 107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* The name allocated to the Idle task.  This can be overridden by defining
 110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** configIDLE_TASK_NAME in FreeRTOSConfig.h. */
 111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #ifndef configIDLE_TASK_NAME
 112:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define configIDLE_TASK_NAME "IDLE"
 113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_PORT_OPTIMISED_TASK_SELECTION == 0 )
 116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* If configUSE_PORT_OPTIMISED_TASK_SELECTION is 0 then task selection is
 118:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	performed in a generic way that is not optimised to any particular
 119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	microcontroller architecture. */
 120:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* uxTopReadyPriority holds the priority of the highest priority ready
 122:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	state task. */
 123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskRECORD_READY_PRIORITY( uxPriority )														\
 124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{																									\
 125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( uxPriority ) > uxTopReadyPriority )														\
 126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{																								\
 127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxTopReadyPriority = ( uxPriority );														\
 128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}																								\
 129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /* taskRECORD_READY_PRIORITY */
 130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/*-----------------------------------------------------------*/
 132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskSELECT_HIGHEST_PRIORITY_TASK()															\
 134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{																									\
 135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTopPriority = uxTopReadyPriority;														\
 136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 																										\
 137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Find the highest priority queue that contains ready tasks. */								\
 138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		while( listLIST_IS_EMPTY( &( pxReadyTasksLists[ uxTopPriority ] ) ) )							\
 139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{																								\
 140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( uxTopPriority );																\
 141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			--uxTopPriority;																			\
 142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}																								\
 143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 																										\
 144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* listGET_OWNER_OF_NEXT_ENTRY indexes through the list, so the tasks of						\
ARM GAS  /tmp/cc7Oi1VE.s 			page 4


 145:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the	same priority get an equal share of the processor time. */									\
 146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		listGET_OWNER_OF_NEXT_ENTRY( pxCurrentTCB, &( pxReadyTasksLists[ uxTopPriority ] ) );			\
 147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxTopReadyPriority = uxTopPriority;																\
 148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /* taskSELECT_HIGHEST_PRIORITY_TASK */
 149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/*-----------------------------------------------------------*/
 151:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Define away taskRESET_READY_PRIORITY() and portRESET_READY_PRIORITY() as
 153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	they are only required when a port optimised method of task selection is
 154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	being used. */
 155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskRESET_READY_PRIORITY( uxPriority )
 156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define portRESET_READY_PRIORITY( uxPriority, uxTopReadyPriority )
 157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #else /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* If configUSE_PORT_OPTIMISED_TASK_SELECTION is 1 then task selection is
 161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	performed in a way that is tailored to the particular microcontroller
 162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	architecture being used. */
 163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A port optimised version is provided.  Call the port defined macros. */
 165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskRECORD_READY_PRIORITY( uxPriority )	portRECORD_READY_PRIORITY( uxPriority, uxTopReadyP
 166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 167:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/*-----------------------------------------------------------*/
 168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 169:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskSELECT_HIGHEST_PRIORITY_TASK()														\
 170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{																								\
 171:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTopPriority;																		\
 172:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 																									\
 173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Find the highest priority list that contains ready tasks. */								\
 174:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portGET_HIGHEST_PRIORITY( uxTopPriority, uxTopReadyPriority );								\
 175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ uxTopPriority ] ) ) > 0 );		\
 176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		listGET_OWNER_OF_NEXT_ENTRY( pxCurrentTCB, &( pxReadyTasksLists[ uxTopPriority ] ) );		\
 177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /* taskSELECT_HIGHEST_PRIORITY_TASK() */
 178:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/*-----------------------------------------------------------*/
 180:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A port optimised version is provided, call it only if the TCB being reset
 182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	is being referenced from a ready list.  If it is referenced from a delayed
 183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	or suspended list then it won't be in a ready list. */
 184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskRESET_READY_PRIORITY( uxPriority )														\
 185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{																									\
 186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ ( uxPriority ) ] ) ) == ( UBaseType_t ) 0 )	\
 187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{																								\
 188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			portRESET_READY_PRIORITY( ( uxPriority ), ( uxTopReadyPriority ) );							\
 189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}																								\
 190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 193:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* pxDelayedTaskList and pxOverflowDelayedTaskList are switched when the tick
 197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** count overflows. */
 198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define taskSWITCH_DELAYED_LISTS()																	\
 199:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {																									\
 200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	List_t *pxTemp;																					\
 201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 																									\
ARM GAS  /tmp/cc7Oi1VE.s 			page 5


 202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* The delayed tasks list should be empty when the lists are switched. */						\
 203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( ( listLIST_IS_EMPTY( pxDelayedTaskList ) ) );										\
 204:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 																									\
 205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTemp = pxDelayedTaskList;																		\
 206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxDelayedTaskList = pxOverflowDelayedTaskList;													\
 207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxOverflowDelayedTaskList = pxTemp;																\
 208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xNumOfOverflows++;																				\
 209:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvResetNextTaskUnblockTime();																	\
 210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 213:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Place the task represented by pxTCB into the appropriate ready list for
 216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * the task.  It is inserted at the end of the list.
 217:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define prvAddTaskToReadyList( pxTCB )																\
 219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	traceMOVED_TASK_TO_READY_STATE( pxTCB );														\
 220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskRECORD_READY_PRIORITY( ( pxTCB )->uxPriority );												\
 221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInsertEnd( &( pxReadyTasksLists[ ( pxTCB )->uxPriority ] ), &( ( pxTCB )->xStateListItem ) );
 222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	tracePOST_MOVED_TASK_TO_READY_STATE( pxTCB )
 223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 224:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Several functions take an TaskHandle_t parameter that can optionally be NULL,
 227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * where NULL is used to indicate that the handle of the currently executing
 228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * task should be used in place of the parameter.  This macro simply checks to
 229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * see if the parameter is NULL and returns a pointer to the appropriate TCB.
 230:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define prvGetTCBFromHandle( pxHandle ) ( ( ( pxHandle ) == NULL ) ? pxCurrentTCB : ( pxHandle ) )
 232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* The item value of the event list item is normally used to hold the priority
 234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** of the task to which it belongs (coded to allow it to be held in reverse
 235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** priority order).  However, it is occasionally borrowed for other purposes.  It
 236:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** is important its value is not updated due to a task priority change while it is
 237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** being used for another purpose.  The following bit definition is used to inform
 238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** the scheduler that the value should not be changed - in which case it is the
 239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** responsibility of whichever module is using the value to ensure it gets set back
 240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** to its original value when it is released. */
 241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_16_BIT_TICKS == 1 )
 242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskEVENT_LIST_ITEM_VALUE_IN_USE	0x8000U
 243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #else
 244:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskEVENT_LIST_ITEM_VALUE_IN_USE	0x80000000UL
 245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 246:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 248:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Task control block.  A task control block (TCB) is allocated for each task,
 249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * and stores task state information, including a pointer to the task's context
 250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * (the task's run time environment, including register values)
 251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 252:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** typedef struct tskTaskControlBlock 			/* The old naming convention is used to prevent breaking kern
 253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	volatile StackType_t	*pxTopOfStack;	/*< Points to the location of the last item placed on the task
 255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( portUSING_MPU_WRAPPERS == 1 )
 257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xMPU_SETTINGS	xMPUSettings;		/*< The MPU settings are defined as part of the port layer.  THIS MU
 258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
ARM GAS  /tmp/cc7Oi1VE.s 			page 6


 259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	ListItem_t			xStateListItem;	/*< The list that the state list item of a task is reference from den
 261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	ListItem_t			xEventListItem;		/*< Used to reference a task from an event list. */
 262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t			uxPriority;			/*< The priority of the task.  0 is the lowest priority. */
 263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	StackType_t			*pxStack;			/*< Points to the start of the stack. */
 264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	char				pcTaskName[ configMAX_TASK_NAME_LEN ];/*< Descriptive name given to the task when created.
 265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 266:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( ( portSTACK_GROWTH > 0 ) || ( configRECORD_STACK_HIGH_ADDRESS == 1 ) )
 267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		StackType_t		*pxEndOfStack;		/*< Points to the highest valid address for the stack. */
 268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( portCRITICAL_NESTING_IN_TCB == 1 )
 271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxCriticalNesting;	/*< Holds the critical section nesting depth for ports that do no
 272:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 273:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 274:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_TRACE_FACILITY == 1 )
 275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxTCBNumber;		/*< Stores a number that increments each time a TCB is created.  It al
 276:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxTaskNumber;		/*< Stores a number specifically for use by third party trace code. *
 277:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxBasePriority;		/*< The priority last assigned to the task - used by the priority i
 281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxMutexesHeld;
 282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_APPLICATION_TASK_TAG == 1 )
 285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		TaskHookFunction_t pxTaskTag;
 286:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 287:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 288:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configNUM_THREAD_LOCAL_STORAGE_POINTERS > 0 )
 289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		void			*pvThreadLocalStoragePointers[ configNUM_THREAD_LOCAL_STORAGE_POINTERS ];
 290:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 291:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 292:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configGENERATE_RUN_TIME_STATS == 1 )
 293:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uint32_t		ulRunTimeCounter;	/*< Stores the amount of time the task has spent in the Running state
 294:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 295:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 296:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_NEWLIB_REENTRANT == 1 )
 297:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Allocate a Newlib reent structure that is specific to this task.
 298:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		Note Newlib support has been included by popular demand, but is not
 299:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		used by the FreeRTOS maintainers themselves.  FreeRTOS is not
 300:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		responsible for resulting newlib operation.  User must be familiar with
 301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		newlib and must provide system-wide implementations of the necessary
 302:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		stubs. Be warned that (at the time of writing) the current newlib design
 303:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		implements a system-wide malloc() that must be provided with locks.
 304:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 305:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
 306:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		for additional information. */
 307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		struct	_reent xNewLib_reent;
 308:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 310:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configUSE_TASK_NOTIFICATIONS == 1 )
 311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		volatile uint32_t ulNotifiedValue;
 312:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		volatile uint8_t ucNotifyState;
 313:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 314:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 315:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* See the comments in FreeRTOS.h with the definition of
ARM GAS  /tmp/cc7Oi1VE.s 			page 7


 316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE. */
 317:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consolida
 318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uint8_t	ucStaticallyAllocated; 		/*< Set to pdTRUE if the task is a statically allocated to ensur
 319:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 320:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
 322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uint8_t ucDelayAborted;
 323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 324:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 325:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configUSE_POSIX_ERRNO == 1 )
 326:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		int iTaskErrno;
 327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 329:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** } tskTCB;
 330:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 331:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* The old tskTCB name is maintained above then typedefed to the new TCB_t name
 332:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** below to enable the use of older kernel aware debuggers. */
 333:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** typedef tskTCB TCB_t;
 334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 335:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*lint -save -e956 A manual analysis and inspection has been used to determine
 336:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** which static variables must be declared volatile. */
 337:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA TCB_t * volatile pxCurrentTCB = NULL;
 338:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 339:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Lists for ready and blocked tasks. --------------------
 340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** xDelayedTaskList1 and xDelayedTaskList2 could be move to function scople but
 341:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** doing so breaks some kernel aware debuggers and debuggers that rely on removing
 342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** the static qualifier. */
 343:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t pxReadyTasksLists[ configMAX_PRIORITIES ];/*< Prioritised ready tasks
 344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t xDelayedTaskList1;						/*< Delayed tasks. */
 345:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t xDelayedTaskList2;						/*< Delayed tasks (two lists are used - one f
 346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t * volatile pxDelayedTaskList;				/*< Points to the delayed task list 
 347:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t * volatile pxOverflowDelayedTaskList;		/*< Points to the delayed task
 348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t xPendingReadyList;						/*< Tasks that have been readied while the sc
 349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 350:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( INCLUDE_vTaskDelete == 1 )
 351:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 352:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static List_t xTasksWaitingTermination;				/*< Tasks that have been deleted - but 
 353:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static volatile UBaseType_t uxDeletedTasksWaitingCleanUp = ( UBaseType_t ) 0U;
 354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 355:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 356:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 357:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
 358:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 359:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static List_t xSuspendedTaskList;					/*< Tasks that are currently suspended. */
 360:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 361:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 362:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 363:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Global POSIX errno. Its value is changed upon context switching to match
 364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** the errno of the currently running task. */
 365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_POSIX_ERRNO == 1 )
 366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	int FreeRTOS_errno = 0;
 367:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 368:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 369:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Other file private variables. --------------------------------*/
 370:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxCurrentNumberOfTasks 	= ( UBaseType_t ) 0U;
 371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile TickType_t xTickCount 				= ( TickType_t ) configINITIAL_TICK_COUNT
 372:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxTopReadyPriority 		= tskIDLE_PRIORITY;
ARM GAS  /tmp/cc7Oi1VE.s 			page 8


 373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xSchedulerRunning 		= pdFALSE;
 374:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile TickType_t xPendedTicks 			= ( TickType_t ) 0U;
 375:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xYieldPending 			= pdFALSE;
 376:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xNumOfOverflows 			= ( BaseType_t ) 0;
 377:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static UBaseType_t uxTaskNumber 					= ( UBaseType_t ) 0U;
 378:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile TickType_t xNextTaskUnblockTime		= ( TickType_t ) 0U; /* Initialise
 379:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static TaskHandle_t xIdleTaskHandle					= NULL;			/*< Holds the handle of the idle 
 380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 381:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Context switches are held pending while the scheduler is suspended.  Also,
 382:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** interrupts must not manipulate the xStateListItem of a TCB, or any of the
 383:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** lists the xStateListItem can be referenced from, if the scheduler is suspended.
 384:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** If an interrupt needs to unblock a task while the scheduler is suspended then it
 385:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** moves the task's event list item into the xPendingReadyList, ready for the
 386:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** kernel to move the task from the pending ready list into the real ready list
 387:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** when the scheduler is unsuspended.  The pending ready list itself can only be
 388:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** accessed from a critical section. */
 389:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxSchedulerSuspended	= ( UBaseType_t ) pdFALSE;
 390:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 391:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configGENERATE_RUN_TIME_STATS == 1 )
 392:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Do not move these variables to function scope as doing so prevents the
 394:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	code working with debuggers that need to remove the static qualifier. */
 395:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static uint32_t ulTaskSwitchedInTime = 0UL;	/*< Holds the value of a timer/counter
 396:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static uint32_t ulTotalRunTime = 0UL;		/*< Holds the total amount of execution tim
 397:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 398:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 399:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 400:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*lint -restore */
 401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 402:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 403:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 404:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Callback function prototypes. --------------------------*/
 405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if(  configCHECK_FOR_STACK_OVERFLOW > 0 )
 406:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 407:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	extern void vApplicationStackOverflowHook( TaskHandle_t xTask, char *pcTaskName );
 408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 409:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 410:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 411:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TICK_HOOK > 0 )
 412:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 413:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	extern void vApplicationTickHook( void ); /*lint !e526 Symbol not defined as it is an application 
 414:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 415:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 416:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 417:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 418:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 419:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	extern void vApplicationGetIdleTaskMemory( StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxI
 420:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 422:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* File private functions. --------------------------------*/
 424:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 425:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /**
 426:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Utility task that simply returns pdTRUE if the task referenced by xTask is
 427:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * currently in the Suspended state, or pdFALSE if the task referenced by xTask
 428:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * is in any other state.
 429:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
ARM GAS  /tmp/cc7Oi1VE.s 			page 9


 430:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
 431:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static BaseType_t prvTaskIsTaskSuspended( const TaskHandle_t xTask ) PRIVILEGED_FUNCTION;
 433:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
 435:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 436:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 437:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Utility to ready all the lists used by the scheduler.  This is called
 438:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * automatically upon the creation of the first task.
 439:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 440:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvInitialiseTaskLists( void ) PRIVILEGED_FUNCTION;
 441:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 442:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 443:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The idle task, which as all tasks is implemented as a never ending loop.
 444:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The idle task is automatically created and added to the ready lists upon
 445:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * creation of the first user task.
 446:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The portTASK_FUNCTION_PROTO() macro is used to allow port/compiler specific
 448:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * language extensions.  The equivalent prototype for this function is:
 449:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 450:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * void prvIdleTask( void *pvParameters );
 451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 452:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static portTASK_FUNCTION_PROTO( prvIdleTask, pvParameters );
 454:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 455:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 456:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Utility to free all memory allocated by the scheduler to hold a TCB,
 457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * including the stack pointed to by the TCB.
 458:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 459:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * This does not free memory allocated by the task itself (i.e. memory
 460:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * allocated by calls to pvPortMalloc from within the tasks application code).
 461:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 462:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
 463:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 464:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static void prvDeleteTCB( TCB_t *pxTCB ) PRIVILEGED_FUNCTION;
 465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 467:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 468:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 469:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Used only by the idle task.  This checks to see if anything has been placed
 470:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * in the list of tasks waiting to be deleted.  If so the task is cleaned up
 471:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * and its TCB deleted.
 472:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 473:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvCheckTasksWaitingTermination( void ) PRIVILEGED_FUNCTION;
 474:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 475:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 476:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The currently executing task is entering the Blocked state.  Add the task to
 477:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * either the current or the overflow delayed task list.
 478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockInde
 480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 481:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Fills an TaskStatus_t structure with information on each task that is
 483:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * referenced from the pxList list (which may be a ready list, a delayed list,
 484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * a suspended list, etc.).
 485:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 486:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * THIS FUNCTION IS INTENDED FOR DEBUGGING ONLY, AND SHOULD NOT BE CALLED FROM
ARM GAS  /tmp/cc7Oi1VE.s 			page 10


 487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * NORMAL APPLICATION CODE.
 488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 489:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
 490:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 491:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static UBaseType_t prvListTasksWithinSingleList( TaskStatus_t *pxTaskStatusArray, List_t *pxList, 
 492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 493:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 494:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 495:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Searches pxList for a task with name pcNameToQuery - returning a handle to
 497:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * the task if it is found, or NULL if the task is not found.
 498:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 499:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
 500:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 501:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static TCB_t *prvSearchForNameWithinSingleList( List_t *pxList, const char pcNameToQuery[] ) PRIVI
 502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 504:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 505:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 506:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * When a task is created, the stack of the task is filled with a known value.
 507:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * This function determines the 'high water mark' of the task stack by
 508:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * determining how much of the stack remains at the original preset value.
 509:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 510:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) || ( INCLUD
 511:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 512:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static configSTACK_DEPTH_TYPE prvTaskCheckFreeStackSpace( const uint8_t * pucStackByte ) PRIVILEGE
 513:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 514:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 515:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 516:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 517:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Return the amount of time, in ticks, that will pass before the kernel will
 518:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * next move a task from the Blocked state to the Running state.
 519:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 520:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * This conditional compilation should use inequality to 0, not equality to 1.
 521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * This is to ensure portSUPPRESS_TICKS_AND_SLEEP() can be called when user
 522:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * defined low power mode implementations require configUSE_TICKLESS_IDLE to be
 523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * set to a value other than 1.
 524:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
 526:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static TickType_t prvGetExpectedIdleTime( void ) PRIVILEGED_FUNCTION;
 528:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 529:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 530:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 531:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Set xNextTaskUnblockTime to the time at which the next Blocked state task
 533:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * will exit the Blocked state.
 534:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 535:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvResetNextTaskUnblockTime( void );
 536:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 537:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) )
 538:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 539:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/*
 540:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	 * Helper function used to pad task names with spaces when printing out
 541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	 * human readable tables of task information.
 542:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	 */
 543:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static char *prvWriteNameToBuffer( char *pcBuffer, const char *pcTaskName ) PRIVILEGED_FUNCTION;
ARM GAS  /tmp/cc7Oi1VE.s 			page 11


 544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 547:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 548:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Called after a Task_t structure has been allocated either statically or
 549:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * dynamically to fill in the structure's members.
 550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 551:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 552:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const char * const pcName, 		/*lint !e971 Unqualified char types are allowed for strings a
 553:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const uint32_t ulStackDepth,
 554:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									void * const pvParameters,
 555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									UBaseType_t uxPriority,
 556:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									TaskHandle_t * const pxCreatedTask,
 557:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									TCB_t *pxNewTCB,
 558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const MemoryRegion_t * const xRegions ) PRIVILEGED_FUNCTION;
 559:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 560:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 561:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Called after a new task has been created and initialised to place the task
 562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * under the control of the scheduler.
 563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 564:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB ) PRIVILEGED_FUNCTION;
 565:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 567:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * freertos_tasks_c_additions_init() should only be called if the user definable
 568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * macro FREERTOS_TASKS_C_ADDITIONS_INIT() is defined, as that is the only macro
 569:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * called by the function.
 570:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 571:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #ifdef FREERTOS_TASKS_C_ADDITIONS_INIT
 572:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static void freertos_tasks_c_additions_init( void ) PRIVILEGED_FUNCTION;
 574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 577:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 578:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 581:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xTaskCreateStatic(	TaskFunction_t pxTaskCode,
 582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const char * const pcName,		/*lint !e971 Unqualified char types are allowed for strings an
 583:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const uint32_t ulStackDepth,
 584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									void * const pvParameters,
 585:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									UBaseType_t uxPriority,
 586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									StackType_t * const puxStackBuffer,
 587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									StaticTask_t * const pxTaskBuffer )
 588:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xReturn;
 591:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( puxStackBuffer != NULL );
 593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( configASSERT_DEFINED == 1 )
 596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Sanity check that the size of the structure used to declare a
 598:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			variable of type StaticTask_t equals the size of the real task
 599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			structure. */
 600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			volatile size_t xSize = sizeof( StaticTask_t );
ARM GAS  /tmp/cc7Oi1VE.s 			page 12


 601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( xSize == sizeof( TCB_t ) );
 602:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configASSERT_DEFINED */
 605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 607:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( pxTaskBuffer != NULL ) && ( puxStackBuffer != NULL ) )
 608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The memory used for the task's TCB and stack are passed into this
 610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			function - use them. */
 611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pxTaskBuffer; /*lint !e740 !e9087 Unusual cast is ok as the structures ar
 612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 614:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consoli
 615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Tasks can be created statically or dynamically, so note this
 617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task was created statically in case the task is later deleted. */
 618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif /* tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE */
 621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNe
 623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 625:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
 626:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = NULL;
 628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 629:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 630:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 633:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* SUPPORT_STATIC_ALLOCATION */
 634:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( ( portUSING_MPU_WRAPPERS == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 638:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskCreateRestrictedStatic( const TaskParameters_t * const pxTaskDefinition, TaskHandl
 639:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 640:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 643:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskDefinition->puxStackBuffer != NULL );
 644:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskDefinition->pxTaskBuffer != NULL );
 645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( pxTaskDefinition->puxStackBuffer != NULL ) && ( pxTaskDefinition->pxTaskBuffer != NULL ) )
 647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Allocate space for the TCB.  Where the memory comes from depends
 649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			on the implementation of the port malloc function and whether or
 650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			not static allocation is being used. */
 651:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pxTaskDefinition->pxTaskBuffer;
 652:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 653:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Store the stack location in the TCB. */
 654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pxStack = pxTaskDefinition->puxStackBuffer;
 655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 )
 657:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
ARM GAS  /tmp/cc7Oi1VE.s 			page 13


 658:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Tasks can be created statically or dynamically, so note this
 659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task was created statically in case the task is later deleted. */
 660:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 662:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif /* tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE */
 663:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvInitialiseNewTask(	pxTaskDefinition->pvTaskCode,
 665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									pxTaskDefinition->pcName,
 666:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									( uint32_t ) pxTaskDefinition->usStackDepth,
 667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									pxTaskDefinition->pvParameters,
 668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									pxTaskDefinition->uxPriority,
 669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									pxCreatedTask, pxNewTCB,
 670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									pxTaskDefinition->xRegions );
 671:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdPASS;
 674:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 677:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 678:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( portUSING_MPU_WRAPPERS == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) */
 680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 681:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( ( portUSING_MPU_WRAPPERS == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskCreateRestricted( const TaskParameters_t * const pxTaskDefinition, TaskHandle_t *p
 685:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 686:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskDefinition->puxStackBuffer );
 690:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxTaskDefinition->puxStackBuffer != NULL )
 692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Allocate space for the TCB.  Where the memory comes from depends
 694:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			on the implementation of the port malloc function and whether or
 695:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			not static allocation is being used. */
 696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) );
 697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 698:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxNewTCB != NULL )
 699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Store the stack location in the TCB. */
 701:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->pxStack = pxTaskDefinition->puxStackBuffer;
 702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 703:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 )
 704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Tasks can be created statically or dynamically, so note
 706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					this task had a statically allocated stack in case it is
 707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					later deleted.  The TCB was allocated dynamically. */
 708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_ONLY;
 709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif /* tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE */
 711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvInitialiseNewTask(	pxTaskDefinition->pvTaskCode,
 713:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										pxTaskDefinition->pcName,
 714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										( uint32_t ) pxTaskDefinition->usStackDepth,
ARM GAS  /tmp/cc7Oi1VE.s 			page 14


 715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										pxTaskDefinition->pvParameters,
 716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										pxTaskDefinition->uxPriority,
 717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										pxCreatedTask, pxNewTCB,
 718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										pxTaskDefinition->xRegions );
 719:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddNewTaskToReadyList( pxNewTCB );
 721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdPASS;
 722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 723:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 724:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 726:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* portUSING_MPU_WRAPPERS */
 729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 731:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskCreate(	TaskFunction_t pxTaskCode,
 734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							const char * const pcName,		/*lint !e971 Unqualified char types are allowed for strings and 
 735:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							const configSTACK_DEPTH_TYPE usStackDepth,
 736:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							void * const pvParameters,
 737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							UBaseType_t uxPriority,
 738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							TaskHandle_t * const pxCreatedTask )
 739:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If the stack grows down then allocate the stack then the TCB so the stack
 744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		does not grow into the TCB.  Likewise if the stack grows up then allocate
 745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the TCB then the stack. */
 746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( portSTACK_GROWTH > 0 )
 747:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 748:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Allocate space for the TCB.  Where the memory comes from depends on
 749:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the implementation of the port malloc function and whether or not static
 750:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			allocation is being used. */
 751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) );
 752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 753:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxNewTCB != NULL )
 754:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Allocate space for the stack used by the task being created.
 756:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				The base of the stack memory stored in the TCB so the task can
 757:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				be deleted later if required. */
 758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->pxStack = ( StackType_t * ) pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( Sta
 759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxNewTCB->pxStack == NULL )
 761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Could not allocate the stack.  Delete the allocated TCB. */
 763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vPortFree( pxNewTCB );
 764:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxNewTCB = NULL;
 765:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 766:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else /* portSTACK_GROWTH */
 769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		StackType_t *pxStack;
 771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cc7Oi1VE.s 			page 15


 772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Allocate space for the stack used by the task being created. */
 773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079
 774:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxStack != NULL )
 776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Allocate space for the TCB. */
 778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returne
 779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxNewTCB != NULL )
 781:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Store the stack location in the TCB. */
 783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxNewTCB->pxStack = pxStack;
 784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
 786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 787:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The stack cannot be used as the TCB was not created.  Free
 788:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					it again. */
 789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vPortFree( pxStack );
 790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 792:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
 793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB = NULL;
 795:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 797:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* portSTACK_GROWTH */
 798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxNewTCB != NULL )
 800:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 801:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e9029 !e731 Macro has been consoli
 802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Tasks can be created statically or dynamically, so note this
 804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task was created dynamically in case it is later deleted. */
 805:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif /* tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE */
 808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 809:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, p
 810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdPASS;
 812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 813:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
 814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 816:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 819:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 820:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 821:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 823:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const char * const pcName,		/*lint !e971 Unqualified char types are allowed for strings an
 826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const uint32_t ulStackDepth,
 827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									void * const pvParameters,
 828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									UBaseType_t uxPriority,
ARM GAS  /tmp/cc7Oi1VE.s 			page 16


 829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									TaskHandle_t * const pxCreatedTask,
 830:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									TCB_t *pxNewTCB,
 831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const MemoryRegion_t * const xRegions )
 832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** StackType_t *pxTopOfStack;
 834:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t x;
 835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( portUSING_MPU_WRAPPERS == 1 )
 837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Should the task be created in privileged mode? */
 838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		BaseType_t xRunPrivileged;
 839:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( uxPriority & portPRIVILEGE_BIT ) != 0U )
 840:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 841:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xRunPrivileged = pdTRUE;
 842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
 844:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xRunPrivileged = pdFALSE;
 846:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxPriority &= ~portPRIVILEGE_BIT;
 848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* portUSING_MPU_WRAPPERS == 1 */
 849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Avoid dependency on memset() if it is not required. */
 851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( tskSET_NEW_STACKS_TO_KNOWN_VALUE == 1 )
 852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Fill the stack with a known value to assist debugging. */
 854:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof(
 855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* tskSET_NEW_STACKS_TO_KNOWN_VALUE */
 857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Calculate the top of stack address.  This depends on whether the stack
 859:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	grows from high memory to low (as per the 80x86) or vice versa.
 860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portSTACK_GROWTH is used to make the result positive or negative as required
 861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	by the port. */
 862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( portSTACK_GROWTH < 0 )
 863:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 866:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 867:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Check the alignment of the calculated top of stack is correct. */
 868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack & ( portPOINTER_SIZE_TYPE ) portBYTE_ALI
 869:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( configRECORD_STACK_HIGH_ADDRESS == 1 )
 871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Also record the stack's high address, which may assist
 873:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			debugging. */
 874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pxEndOfStack = pxTopOfStack;
 875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 876:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configRECORD_STACK_HIGH_ADDRESS */
 877:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 878:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#else /* portSTACK_GROWTH */
 879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 880:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = pxNewTCB->pxStack;
 881:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 882:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Check the alignment of the stack buffer is correct. */
 883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( ( ( portPOINTER_SIZE_TYPE ) pxNewTCB->pxStack & ( portPOINTER_SIZE_TYPE ) portBYT
 884:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The other extreme of the stack space is required if stack checking is
ARM GAS  /tmp/cc7Oi1VE.s 			page 17


 886:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		performed. */
 887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->pxEndOfStack = pxNewTCB->pxStack + ( ulStackDepth - ( uint32_t ) 1 );
 888:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* portSTACK_GROWTH */
 890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Store the task name in the TCB. */
 892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( pcName != NULL )
 893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 895:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 897:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Don't copy all configMAX_TASK_NAME_LEN if the string is shorter than
 899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configMAX_TASK_NAME_LEN characters just in case the memory after the
 900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			string is not accessible (extremely unlikely). */
 901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pcName[ x ] == ( char ) 0x00 )
 902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 903:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				break;
 904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 905:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
 906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
 908:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 910:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Ensure the name string is terminated in the case that the string length
 912:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		was greater or equal to configMAX_TASK_NAME_LEN. */
 913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 914:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
 916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The task has not been given a name, so just ensure there is a NULL
 918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		terminator when it is read out. */
 919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 922:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* This is used as an array index so must ensure it's not too large.  First
 923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	remove the privilege bit if one is present. */
 924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 925:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxPriority = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) 1U;
 927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
 929:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
 931:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 932:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxNewTCB->uxPriority = uxPriority;
 934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 935:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->uxBasePriority = uxPriority;
 937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->uxMutexesHeld = 0;
 938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configUSE_MUTEXES */
 940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 941:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
ARM GAS  /tmp/cc7Oi1VE.s 			page 18


 943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Set the pxNewTCB as a link back from the ListItem_t.  This is so we can get
 945:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	back to	the containing TCB from a generic item in a list. */
 946:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 947:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 948:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Event lists are always in priority order. */
 949:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( Ti
 950:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( portCRITICAL_NESTING_IN_TCB == 1 )
 953:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 954:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->uxCriticalNesting = ( UBaseType_t ) 0U;
 955:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 956:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* portCRITICAL_NESTING_IN_TCB */
 957:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_APPLICATION_TASK_TAG == 1 )
 959:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 960:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->pxTaskTag = NULL;
 961:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configUSE_APPLICATION_TASK_TAG */
 963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configGENERATE_RUN_TIME_STATS == 1 )
 965:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 966:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ulRunTimeCounter = 0UL;
 967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 968:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configGENERATE_RUN_TIME_STATS */
 969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 970:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( portUSING_MPU_WRAPPERS == 1 )
 971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vPortStoreTaskMPUSettings( &( pxNewTCB->xMPUSettings ), xRegions, pxNewTCB->pxStack, ulStackDepth
 973:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 974:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#else
 975:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Avoid compiler warning about unreferenced parameter. */
 977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) xRegions;
 978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 980:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 981:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
 982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 983:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		for( x = 0; x < ( UBaseType_t ) configNUM_THREAD_LOCAL_STORAGE_POINTERS; x++ )
 984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 985:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pvThreadLocalStoragePointers[ x ] = NULL;
 986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_TASK_NOTIFICATIONS == 1 )
 991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ulNotifiedValue = 0;
 993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 994:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_NEWLIB_REENTRANT == 1 )
 998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Initialise this task's Newlib reent structure.
ARM GAS  /tmp/cc7Oi1VE.s 			page 19


1000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
1001:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		for additional information. */
1002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
1003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
1005:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
1007:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ucDelayAborted = pdFALSE;
1009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
1011:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Initialize the TCB stack to look as if the task was already running,
1013:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	but had been interrupted by the scheduler.  The return address is set
1014:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	to the start of the task function. Once the stack has been initialised
1015:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the top of stack variable is updated. */
1016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( portUSING_MPU_WRAPPERS == 1 )
1017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1018:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If the port has capability to detect stack overflow,
1019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pass the stack end address to the stack initialization
1020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		function as well. */
1021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( portHAS_STACK_OVERFLOW_CHECKING == 1 )
1022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1023:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( portSTACK_GROWTH < 0 )
1024:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxNewTCB->pxStack, pxTaskCode, pv
1026:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#else /* portSTACK_GROWTH */
1028:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1029:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxNewTCB->pxEndOfStack, pxTaskCod
1030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1031:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif /* portSTACK_GROWTH */
1032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1033:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else /* portHAS_STACK_OVERFLOW_CHECKING */
1034:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1035:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters, xRunPriv
1036:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1037:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* portHAS_STACK_OVERFLOW_CHECKING */
1038:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#else /* portUSING_MPU_WRAPPERS */
1040:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If the port has capability to detect stack overflow,
1042:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pass the stack end address to the stack initialization
1043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		function as well. */
1044:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( portHAS_STACK_OVERFLOW_CHECKING == 1 )
1045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1046:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( portSTACK_GROWTH < 0 )
1047:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1048:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxNewTCB->pxStack, pxTaskCode, pv
1049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#else /* portSTACK_GROWTH */
1051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxNewTCB->pxEndOfStack, pxTaskCod
1053:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1054:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif /* portSTACK_GROWTH */
1055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else /* portHAS_STACK_OVERFLOW_CHECKING */
ARM GAS  /tmp/cc7Oi1VE.s 			page 20


1057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
1059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* portHAS_STACK_OVERFLOW_CHECKING */
1061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1062:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* portUSING_MPU_WRAPPERS */
1063:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( pxCreatedTask != NULL )
1065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Pass the handle out in an anonymous way.  The handle can be used to
1067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		change the created task's priority, delete the created task, etc.*/
1068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
1069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
1071:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
1073:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
1075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1076:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1077:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
1078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
1079:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Ensure interrupts don't access the task lists while the lists are being
1080:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	updated. */
1081:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
1082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxCurrentNumberOfTasks++;
1084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB == NULL )
1085:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1086:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* There are no other tasks, or all the other tasks are in
1087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the suspended state - make this the current task. */
1088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxCurrentTCB = pxNewTCB;
1089:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
1091:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1092:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* This is the first task to be created so do the preliminary
1093:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				initialisation required.  We will not recover if this call
1094:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				fails, but we will report the failure. */
1095:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvInitialiseTaskLists();
1096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1097:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1098:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1099:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1103:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the scheduler is not already running, make this task the
1105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			current task if it is the highest priority task to be created
1106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			so far. */
1107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xSchedulerRunning == pdFALSE )
1108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
1110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxCurrentTCB = pxNewTCB;
1112:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
ARM GAS  /tmp/cc7Oi1VE.s 			page 21


1114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1118:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1120:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1122:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxTaskNumber++;
1125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_TRACE_FACILITY == 1 )
1127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Add a counter into the TCB for tracing only. */
1129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->uxTCBNumber = uxTaskNumber;
1130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_TRACE_FACILITY */
1132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_CREATE( pxNewTCB );
1133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddTaskToReadyList( pxNewTCB );
1135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portSETUP_TCB( pxNewTCB );
1137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskEXIT_CRITICAL();
1139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( xSchedulerRunning != pdFALSE )
1141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If the created task is of a higher priority than the current task
1143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		then it should run now. */
1144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
1145:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskYIELD_IF_USING_PREEMPTION();
1147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1151:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
1154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
1156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
1158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
1161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskDelete( TaskHandle_t xTaskToDelete )
1163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
1165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
1167:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the calling task that is
1169:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			being deleted. */
1170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToDelete );
ARM GAS  /tmp/cc7Oi1VE.s 			page 22


1171:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1172:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Remove task from the ready/delayed list. */
1173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1174:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskRESET_READY_PRIORITY( pxTCB->uxPriority );
1176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1178:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1180:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Is the task waiting on an event also? */
1183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
1184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xEventListItem ) );
1186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Increment the uxTaskNumber also so kernel aware debuggers can
1193:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			detect that the task lists need re-generating.  This is done before
1194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			portPRE_TASK_DELETE_HOOK() as in the Windows port that macro will
1195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			not return. */
1196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxTaskNumber++;
1197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB == pxCurrentTCB )
1199:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* A task is deleting itself.  This cannot complete within the
1201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task itself, as a context switch to another task is required.
1202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				Place the task in the termination list.  The idle task will
1203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				check the termination list and free up any memory allocated by
1204:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the scheduler for the TCB and stack of the deleted task. */
1205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vListInsertEnd( &xTasksWaitingTermination, &( pxTCB->xStateListItem ) );
1206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Increment the ucTasksDeleted variable so the idle task knows
1208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				there is a task that has been deleted and that it should therefore
1209:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				check the xTasksWaitingTermination list. */
1210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				++uxDeletedTasksWaitingCleanUp;
1211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Call the delete hook before portPRE_TASK_DELETE_HOOK() as
1213:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portPRE_TASK_DELETE_HOOK() does not return in the Win32 port. */
1214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				traceTASK_DELETE( pxTCB );
1215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The pre-delete hook is primarily for the Windows simulator,
1217:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				in which Windows specific clean up operations are performed,
1218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				after which it is not possible to yield away from this task -
1219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				hence xYieldPending is used to latch that a context switch is
1220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				required. */
1221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portPRE_TASK_DELETE_HOOK( pxTCB, &xYieldPending );
1222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1224:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				--uxCurrentNumberOfTasks;
1226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				traceTASK_DELETE( pxTCB );
1227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvDeleteTCB( pxTCB );
ARM GAS  /tmp/cc7Oi1VE.s 			page 23


1228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Reset the next expected unblock time in case it referred to
1230:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the task that has just been deleted. */
1231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvResetNextTaskUnblockTime();
1232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
1235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1236:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Force a reschedule if it is the currently running task that has just
1237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		been deleted. */
1238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
1239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB == pxCurrentTCB )
1241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( uxSchedulerSuspended == 0 );
1243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
1244:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1246:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1248:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1252:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskDelete */
1253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelayUntil == 1 )
1256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskDelayUntil( TickType_t * const pxPreviousWakeTime, const TickType_t xTimeIncrement )
1258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TickType_t xTimeToWake;
1260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xAlreadyYielded, xShouldDelay = pdFALSE;
1261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxPreviousWakeTime );
1263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( xTimeIncrement > 0U ) );
1264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( uxSchedulerSuspended == 0 );
1265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1266:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vTaskSuspendAll();
1267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Minor optimisation.  The tick count cannot change in this
1269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			block. */
1270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			const TickType_t xConstTickCount = xTickCount;
1271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1272:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Generate the tick time at which the task wants to wake. */
1273:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTimeToWake = *pxPreviousWakeTime + xTimeIncrement;
1274:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xConstTickCount < *pxPreviousWakeTime )
1276:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1277:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The tick count has overflowed since this function was
1278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				lasted called.  In this case the only time we should ever
1279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				actually delay is if the wake time has also	overflowed,
1280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				and the wake time is greater than the tick time.  When this
1281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				is the case it is as if neither time had overflowed. */
1282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( ( xTimeToWake < *pxPreviousWakeTime ) && ( xTimeToWake > xConstTickCount ) )
1283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xShouldDelay = pdTRUE;
ARM GAS  /tmp/cc7Oi1VE.s 			page 24


1285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1286:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1287:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1288:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1290:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1291:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1292:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1293:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The tick time has not overflowed.  In this case we will
1294:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				delay if either the wake time has overflowed, and/or the
1295:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				tick time is less than the wake time. */
1296:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( ( xTimeToWake < *pxPreviousWakeTime ) || ( xTimeToWake > xConstTickCount ) )
1297:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1298:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xShouldDelay = pdTRUE;
1299:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1300:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1302:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1303:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1304:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1305:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1306:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Update the wake time ready for the next call. */
1307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			*pxPreviousWakeTime = xTimeToWake;
1308:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xShouldDelay != pdFALSE )
1310:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				traceTASK_DELAY_UNTIL( xTimeToWake );
1312:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1313:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* prvAddCurrentTaskToDelayedList() needs the block time, not
1314:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the time to wake, so subtract the current tick count. */
1315:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddCurrentTaskToDelayedList( xTimeToWake - xConstTickCount, pdFALSE );
1316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1317:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1319:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1320:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xAlreadyYielded = xTaskResumeAll();
1323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1324:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Force a reschedule if xTaskResumeAll has not already done so, we may
1325:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		have put ourselves to sleep. */
1326:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xAlreadyYielded == pdFALSE )
1327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			portYIELD_WITHIN_API();
1329:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1330:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1331:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1332:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1333:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1335:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1336:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskDelayUntil */
1337:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1338:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1339:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelay == 1 )
1340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1341:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskDelay( const TickType_t xTicksToDelay )
ARM GAS  /tmp/cc7Oi1VE.s 			page 25


1342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1343:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xAlreadyYielded = pdFALSE;
1344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1345:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* A delay time of zero just forces a reschedule. */
1346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTicksToDelay > ( TickType_t ) 0U )
1347:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( uxSchedulerSuspended == 0 );
1349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
1350:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1351:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				traceTASK_DELAY();
1352:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1353:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* A task that is removed from the event list while the
1354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				scheduler is suspended will not get placed in the ready
1355:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				list or removed from the blocked list until the scheduler
1356:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				is resumed.
1357:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1358:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				This task cannot be in an event list as it is the currently
1359:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				executing task. */
1360:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
1361:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1362:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xAlreadyYielded = xTaskResumeAll();
1363:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1367:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1368:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1369:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Force a reschedule if xTaskResumeAll has not already done so, we may
1370:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		have put ourselves to sleep. */
1371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xAlreadyYielded == pdFALSE )
1372:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			portYIELD_WITHIN_API();
1374:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1375:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1376:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1377:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1378:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1379:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1381:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskDelay */
1382:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1383:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1384:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( ( INCLUDE_eTaskGetState == 1 ) || ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_xTaskAbortDel
1385:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1386:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	eTaskState eTaskGetState( TaskHandle_t xTask )
1387:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1388:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	eTaskState eReturn;
1389:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	List_t const * pxStateList, *pxDelayedList, *pxOverflowedDelayedList;
1390:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = xTask;
1391:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1392:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTCB );
1393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1394:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxTCB == pxCurrentTCB )
1395:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1396:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The task calling this function is querying its own state. */
1397:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			eReturn = eRunning;
1398:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
ARM GAS  /tmp/cc7Oi1VE.s 			page 26


1399:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1400:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskENTER_CRITICAL();
1402:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1403:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxStateList = listLIST_ITEM_CONTAINER( &( pxTCB->xStateListItem ) );
1404:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxDelayedList = pxDelayedTaskList;
1405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxOverflowedDelayedList = pxOverflowDelayedTaskList;
1406:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1407:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskEXIT_CRITICAL();
1408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1409:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ( pxStateList == pxDelayedList ) || ( pxStateList == pxOverflowedDelayedList ) )
1410:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1411:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The task being queried is referenced from one of the Blocked
1412:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				lists. */
1413:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				eReturn = eBlocked;
1414:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1415:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1416:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if ( INCLUDE_vTaskSuspend == 1 )
1417:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else if( pxStateList == &xSuspendedTaskList )
1418:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1419:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task being queried is referenced from the suspended
1420:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					list.  Is it genuinely suspended or is it blocked
1421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					indefinitely? */
1422:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL )
1423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1424:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#if( configUSE_TASK_NOTIFICATIONS == 1 )
1425:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
1426:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							/* The task does not appear on the event list item of
1427:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							and of the RTOS objects, but could still be in the
1428:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							blocked state if it is waiting on its notification
1429:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							rather than waiting on an object. */
1430:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							if( pxTCB->ucNotifyState == taskWAITING_NOTIFICATION )
1431:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
1432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								eReturn = eBlocked;
1433:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
1434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							else
1435:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
1436:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								eReturn = eSuspended;
1437:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
1438:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
1439:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#else
1440:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
1441:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							eReturn = eSuspended;
1442:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
1443:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#endif
1444:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1445:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1446:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						eReturn = eBlocked;
1448:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1449:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1450:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
1451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1452:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if ( INCLUDE_vTaskDelete == 1 )
1453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else if( ( pxStateList == &xTasksWaitingTermination ) || ( pxStateList == NULL ) )
1454:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1455:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task being queried is referenced from the deleted
ARM GAS  /tmp/cc7Oi1VE.s 			page 27


1456:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					tasks list, or it is not referenced from any lists at
1457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					all. */
1458:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					eReturn = eDeleted;
1459:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1460:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
1461:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1462:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else /*lint !e525 Negative indentation is intended to make use of pre-processor clearer. */
1463:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1464:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If the task is not in any other state, it must be in the
1465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				Ready (including pending ready) state. */
1466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				eReturn = eReady;
1467:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1468:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1469:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1470:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return eReturn;
1471:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
1472:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1473:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_eTaskGetState */
1474:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1475:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1476:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_uxTaskPriorityGet == 1 )
1477:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskPriorityGet( const TaskHandle_t xTask )
1479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t const *pxTCB;
1481:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn;
1482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1483:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
1484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1485:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the priority of the task
1486:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			that called uxTaskPriorityGet() that is being queried. */
1487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
1488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
1489:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1490:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
1491:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxReturn;
1493:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1494:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1495:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_uxTaskPriorityGet */
1496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1497:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1498:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_uxTaskPriorityGet == 1 )
1499:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1500:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskPriorityGetFromISR( const TaskHandle_t xTask )
1501:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t const *pxTCB;
1503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn, uxSavedInterruptState;
1504:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1505:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
1506:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
1507:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
1508:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
1509:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
1510:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
1511:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1512:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
ARM GAS  /tmp/cc7Oi1VE.s 			page 28


1513:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		been assigned a priority above the configured maximum system call
1514:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
1515:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
1516:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
1517:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
1518:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
1519:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		provided on the following link:
1520:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		https://www.freertos.org/RTOS-Cortex-M3-M4.html */
1521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1522:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxSavedInterruptState = portSET_INTERRUPT_MASK_FROM_ISR();
1524:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the priority of the calling
1526:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			task that is being queried. */
1527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
1528:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
1529:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1530:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptState );
1531:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxReturn;
1533:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1534:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1535:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_uxTaskPriorityGet */
1536:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1537:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1538:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskPrioritySet == 1 )
1539:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1540:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskPrioritySet( TaskHandle_t xTask, UBaseType_t uxNewPriority )
1541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1542:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
1543:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxCurrentBasePriority, uxPriorityUsedOnEntry;
1544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
1545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( uxNewPriority < configMAX_PRIORITIES ) );
1547:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1548:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Ensure the new priority is valid. */
1549:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( uxNewPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
1550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1551:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxNewPriority = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) 1U;
1552:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1553:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1554:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1556:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1557:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
1559:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1560:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the priority of the calling
1561:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			task that is being changed. */
1562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
1563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1564:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_PRIORITY_SET( pxTCB, uxNewPriority );
1565:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if ( configUSE_MUTEXES == 1 )
1567:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxCurrentBasePriority = pxTCB->uxBasePriority;
1569:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
ARM GAS  /tmp/cc7Oi1VE.s 			page 29


1570:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#else
1571:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1572:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxCurrentBasePriority = pxTCB->uxPriority;
1573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
1575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxCurrentBasePriority != uxNewPriority )
1577:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1578:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The priority change may have readied a task of higher
1579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				priority than the calling task. */
1580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( uxNewPriority > uxCurrentBasePriority )
1581:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB != pxCurrentTCB )
1583:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* The priority of a task other than the currently
1585:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						running task is being raised.  Is the priority being
1586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						raised above that of the running task? */
1587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						if( uxNewPriority >= pxCurrentTCB->uxPriority )
1588:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
1589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							xYieldRequired = pdTRUE;
1590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
1591:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						else
1592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
1593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							mtCOVERAGE_TEST_MARKER();
1594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
1595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1598:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* The priority of the running task is being raised,
1599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						but the running task must already be the highest
1600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						priority task able to run so no yield is required. */
1601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1602:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else if( pxTCB == pxCurrentTCB )
1604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Setting the priority of the running task down means
1606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					there may now be another task of higher priority that
1607:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					is ready to execute. */
1608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xYieldRequired = pdTRUE;
1609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Setting the priority of any other task down does not
1613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					require a yield as the running task must be above the
1614:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					new priority of the task being modified. */
1615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Remember the ready list the task might be referenced from
1618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				before its uxPriority member is changed so the
1619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskRESET_READY_PRIORITY() macro can function correctly. */
1620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxPriorityUsedOnEntry = pxTCB->uxPriority;
1621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if ( configUSE_MUTEXES == 1 )
1623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Only change the priority being used if the task is not
1625:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					currently using an inherited priority. */
1626:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxBasePriority == pxTCB->uxPriority )
ARM GAS  /tmp/cc7Oi1VE.s 			page 30


1627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						pxTCB->uxPriority = uxNewPriority;
1629:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1630:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1633:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1634:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The base priority gets set whatever. */
1636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxBasePriority = uxNewPriority;
1637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1638:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#else
1639:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1640:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxPriority = uxNewPriority;
1641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
1643:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1644:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Only reset the event list item value if the value is not
1645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				being used for anything else. */
1646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE 
1647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( ( TickType_t ) configMAX_PRIORITIES - (
1649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1651:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1652:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1653:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If the task is in the blocked or suspended list we need do
1656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				nothing more than change its priority variable. However, if
1657:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the task is in a ready list it needs to be removed and placed
1658:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				in the list appropriate to its new priority. */
1659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateL
1660:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task is currently in its ready list - remove before
1662:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					adding it to it's new ready list.  As we are in a critical
1663:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					section we can do this even if the scheduler is suspended. */
1664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1666:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* It is known that the task is in its ready list so
1667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						there is no need to check again and the port level
1668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						reset macro can be called directly. */
1669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						portRESET_READY_PRIORITY( uxPriorityUsedOnEntry, uxTopReadyPriority );
1670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1671:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1674:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
1676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1677:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1678:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1681:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xYieldRequired != pdFALSE )
1683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
ARM GAS  /tmp/cc7Oi1VE.s 			page 31


1684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
1685:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1686:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1690:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Remove compiler warning about unused variables when the port
1692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				optimised task selection is not being used. */
1693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxPriorityUsedOnEntry;
1694:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1695:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
1697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1698:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskPrioritySet */
1700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1701:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1703:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskSuspend( TaskHandle_t xTaskToSuspend )
1705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
1707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
1709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the running task that is
1711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			being suspended. */
1712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToSuspend );
1713:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_SUSPEND( pxTCB );
1715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Remove task from the ready/delayed list and place in the
1717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			suspended list. */
1718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1719:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskRESET_READY_PRIORITY( pxTCB->uxPriority );
1721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1723:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1724:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1726:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Is the task waiting on an event also? */
1728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
1729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xEventListItem ) );
1731:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1735:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1736:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vListInsertEnd( &xSuspendedTaskList, &( pxTCB->xStateListItem ) );
1738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1739:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( configUSE_TASK_NOTIFICATIONS == 1 )
1740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
ARM GAS  /tmp/cc7Oi1VE.s 			page 32


1741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->ucNotifyState == taskWAITING_NOTIFICATION )
1742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task was blocked to wait for a notification, but is
1744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					now suspended, so no notification was received. */
1745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
1746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1747:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1748:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
1749:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1750:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
1751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
1753:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1754:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Reset the next expected unblock time in case it referred to the
1755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			task that is now in the Suspended state. */
1756:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskENTER_CRITICAL();
1757:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvResetNextTaskUnblockTime();
1759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskEXIT_CRITICAL();
1761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1764:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1765:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1766:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxTCB == pxCurrentTCB )
1768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xSchedulerRunning != pdFALSE )
1770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The current task has just been suspended. */
1772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( uxSchedulerSuspended == 0 );
1773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
1774:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The scheduler is not running, but the task that was pointed
1778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				to by pxCurrentTCB has just been suspended and pxCurrentTCB
1779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				must be adjusted to point to a different task. */
1780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == uxCurrentNumberOfTasks ) /*lint !e931 Rig
1781:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* No other tasks are ready, so set pxCurrentTCB back to
1783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					NULL so when the next task is created pxCurrentTCB will
1784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					be set to point to it no matter what its relative priority
1785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					is. */
1786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxCurrentTCB = NULL;
1787:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1788:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vTaskSwitchContext();
1791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1792:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1795:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1797:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
ARM GAS  /tmp/cc7Oi1VE.s 			page 33


1798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1800:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1801:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1805:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static BaseType_t prvTaskIsTaskSuspended( const TaskHandle_t xTask )
1806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
  29              		.loc 1 1806 2 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
1807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
  34              		.loc 1 1807 2 view .LVU1
1808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = xTask;
  35              		.loc 1 1808 2 view .LVU2
1809:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Accesses xPendingReadyList so must be called from a critical
1811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		section. */
1812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1813:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* It does not make sense to check if the calling task is suspended. */
1814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTask );
  36              		.loc 1 1814 3 view .LVU3
  37 0000 28B1     		cbz	r0, .L8
  38              		.loc 1 1814 24 discriminator 2 view .LVU4
1815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1816:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Is the task being resumed actually in the suspended list? */
1817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( listIS_CONTAINED_WITHIN( &xSuspendedTaskList, &( pxTCB->xStateListItem ) ) != pdFALSE )
  39              		.loc 1 1817 3 discriminator 2 view .LVU5
  40              		.loc 1 1817 7 is_stmt 0 discriminator 2 view .LVU6
  41 0002 4169     		ldr	r1, [r0, #20]
  42              		.loc 1 1817 5 discriminator 2 view .LVU7
  43 0004 0C4A     		ldr	r2, .L10
  44 0006 9142     		cmp	r1, r2
  45 0008 0AD0     		beq	.L9
1807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = xTask;
  46              		.loc 1 1807 13 view .LVU8
  47 000a 0020     		movs	r0, #0
  48              	.LVL1:
1807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = xTask;
  49              		.loc 1 1807 13 view .LVU9
  50 000c 7047     		bx	lr
  51              	.LVL2:
  52              	.L8:
1814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  53              		.loc 1 1814 3 is_stmt 1 view .LVU10
  54              	.LBB110:
  55              	.LBI110:
  56              		.file 2 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
   1:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * FreeRTOS Kernel V10.3.1
   3:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Copyright (C) 2020 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
   5:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
ARM GAS  /tmp/cc7Oi1VE.s 			page 34


   7:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software without restriction, including without limitation the rights to
   8:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * subject to the following conditions:
  11:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  12:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  13:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * copies or substantial portions of the Software.
  14:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  15:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  22:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * http://www.FreeRTOS.org
  23:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * http://aws.amazon.com/freertos
  24:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  25:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * 1 tab == 4 spaces!
  26:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  */
  27:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  28:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  29:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef PORTMACRO_H
  30:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define PORTMACRO_H
  31:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  32:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifdef __cplusplus
  33:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern "C" {
  34:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
  35:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  36:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------
  37:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Port specific definitions.
  38:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  39:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  40:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * given hardware and compiler.
  41:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  42:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * These settings should not be altered.
  43:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *-----------------------------------------------------------
  44:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  */
  45:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  46:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Type definitions. */
  47:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portCHAR		char
  48:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portFLOAT		float
  49:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portDOUBLE		double
  50:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portLONG		long
  51:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSHORT		short
  52:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSTACK_TYPE	uint32_t
  53:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portBASE_TYPE	long
  54:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  55:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  56:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef long BaseType_t;
  57:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef unsigned long UBaseType_t;
  58:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  59:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
  60:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	typedef uint16_t TickType_t;
  61:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
  62:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #else
  63:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	typedef uint32_t TickType_t;
ARM GAS  /tmp/cc7Oi1VE.s 			page 35


  64:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
  65:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  66:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  67:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	not need to be guarded with a critical section. */
  68:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
  69:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
  70:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  71:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  72:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specifics. */
  73:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSTACK_GROWTH			( -1 )
  74:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  75:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portBYTE_ALIGNMENT			8
  76:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  77:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  78:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Scheduler utilities. */
  79:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portYIELD() 															\
  80:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {																				\
  81:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
  82:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
  83:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 																				\
  84:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
  85:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	within the specified behaviour for the architecture. */						\
  86:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "dsb" ::: "memory" );										\
  87:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "isb" );													\
  88:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
  89:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  90:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
  91:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
  92:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
  93:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
  94:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  95:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  96:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Critical section management. */
  97:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern void vPortEnterCritical( void );
  98:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern void vPortExitCritical( void );
  99:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 100:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 101:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 102:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 103:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 104:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 105:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 106:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 107:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 108:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 109:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 110:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** (which build with all the ports) will build. */
 111:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 112:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 113:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 114:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 115:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Tickless idle/low power functionality. */
 116:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 117:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 118:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 119:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 120:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
ARM GAS  /tmp/cc7Oi1VE.s 			page 36


 121:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 122:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specific optimisations. */
 123:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 124:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
 125:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 126:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 127:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 128:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 129:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Generic helper function. */
 130:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
 131:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 132:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	uint8_t ucReturn;
 133:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 134:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 135:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		return ucReturn;
 136:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 137:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 138:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Check the configuration. */
 139:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
 140:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
 141:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#endif
 142:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 143:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
 144:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
 145:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
 146:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 147:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/*-----------------------------------------------------------*/
 148:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 149:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31UL - ( ui
 150:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 151:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 152:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 153:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 154:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 155:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifdef configASSERT
 156:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 157:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 158:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 159:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 160:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* portNOP() is not required by this port. */
 161:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNOP()
 162:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 163:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portINLINE	__inline
 164:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 165:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef portFORCE_INLINE
 166:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 167:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 168:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 169:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 170:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 171:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulCurrentInterrupt;
 172:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** BaseType_t xReturn;
 173:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 174:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 175:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 176:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 177:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
ARM GAS  /tmp/cc7Oi1VE.s 			page 37


 178:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 179:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		xReturn = pdFALSE;
 180:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 181:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	else
 182:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 183:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		xReturn = pdTRUE;
 184:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 185:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 186:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	return xReturn;
 187:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 188:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 189:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 190:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
  57              		.loc 2 191 30 view .LVU11
  58              	.LBB111:
 192:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulNewBASEPRI;
  59              		.loc 2 193 1 view .LVU12
 194:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
  60              		.loc 2 195 2 view .LVU13
  61              		.syntax unified
  62              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
  63 000e 4FF05003 			mov r3, #80												
  64 0012 83F31188 		msr basepri, r3											
  65 0016 BFF36F8F 		isb														
  66 001a BFF34F8F 		dsb														
  67              	
  68              	@ 0 "" 2
  69              	.LVL3:
  70              		.thumb
  71              		.syntax unified
  72              	.L3:
  73              		.loc 2 195 2 is_stmt 0 view .LVU14
  74              	.LBE111:
  75              	.LBE110:
1814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  76              		.loc 1 1814 3 is_stmt 1 discriminator 1 view .LVU15
1814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  77              		.loc 1 1814 3 discriminator 1 view .LVU16
1814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  78              		.loc 1 1814 3 discriminator 1 view .LVU17
  79 001e FEE7     		b	.L3
  80              	.L9:
1818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1819:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Has the task already been resumed from within an ISR? */
1820:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listIS_CONTAINED_WITHIN( &xPendingReadyList, &( pxTCB->xEventListItem ) ) == pdFALSE )
  81              		.loc 1 1820 4 view .LVU18
  82              		.loc 1 1820 8 is_stmt 0 view .LVU19
  83 0020 836A     		ldr	r3, [r0, #40]
  84              		.loc 1 1820 6 view .LVU20
  85 0022 064A     		ldr	r2, .L10+4
  86 0024 9342     		cmp	r3, r2
  87 0026 02D0     		beq	.L6
1821:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Is it in the suspended list because it is in the	Suspended
ARM GAS  /tmp/cc7Oi1VE.s 			page 38


1823:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				state, or because is is blocked with no timeout? */
1824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( NULL, &( pxTCB->xEventListItem ) ) != pdFALSE ) /*lint !e961.  The
  88              		.loc 1 1824 5 is_stmt 1 view .LVU21
  89              		.loc 1 1824 7 is_stmt 0 view .LVU22
  90 0028 1BB1     		cbz	r3, .L7
1807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = xTask;
  91              		.loc 1 1807 13 view .LVU23
  92 002a 0020     		movs	r0, #0
  93              	.LVL4:
1807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = xTask;
  94              		.loc 1 1807 13 view .LVU24
  95 002c 7047     		bx	lr
  96              	.LVL5:
  97              	.L6:
1807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = xTask;
  98              		.loc 1 1807 13 view .LVU25
  99 002e 0020     		movs	r0, #0
 100              	.LVL6:
1807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = xTask;
 101              		.loc 1 1807 13 view .LVU26
 102 0030 7047     		bx	lr
 103              	.LVL7:
 104              	.L7:
1825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xReturn = pdTRUE;
 105              		.loc 1 1826 14 view .LVU27
 106 0032 0120     		movs	r0, #1
 107              	.LVL8:
1827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1830:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1834:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1839:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1840:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
 108              		.loc 1 1840 28 is_stmt 1 view .LVU28
1841:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 109              		.loc 1 1843 3 view .LVU29
1844:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
 110              		.loc 1 1844 2 is_stmt 0 view .LVU30
 111 0034 7047     		bx	lr
 112              	.L11:
 113 0036 00BF     		.align	2
 114              	.L10:
 115 0038 00000000 		.word	.LANCHOR0
 116 003c 00000000 		.word	.LANCHOR1
 117              		.cfi_endproc
 118              	.LFE15:
ARM GAS  /tmp/cc7Oi1VE.s 			page 39


 120              		.section	.text.prvResetNextTaskUnblockTime,"ax",%progbits
 121              		.align	1
 122              		.syntax unified
 123              		.thumb
 124              		.thumb_func
 125              		.fpu fpv4-sp-d16
 127              	prvResetNextTaskUnblockTime:
 128              	.LFB41:
1845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1846:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskResume( TaskHandle_t xTaskToResume )
1852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = xTaskToResume;
1854:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* It does not make sense to resume the calling task. */
1856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToResume );
1857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The parameter cannot be NULL as it is impossible to resume the
1859:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		currently executing task. */
1860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( pxTCB != pxCurrentTCB ) && ( pxTCB != NULL ) )
1861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskENTER_CRITICAL();
1863:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( prvTaskIsTaskSuspended( pxTCB ) != pdFALSE )
1865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1866:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_RESUME( pxTCB );
1867:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The ready list can be accessed even if the scheduler is
1869:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					suspended because this is inside a critical section. */
1870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove(  &( pxTCB->xStateListItem ) );
1871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
1872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1873:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* A higher priority task may have just been resumed. */
1874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
1875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1876:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* This yield may not cause the task just resumed to run,
1877:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						but will leave the lists in the correct state for the
1878:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						next yield. */
1879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						taskYIELD_IF_USING_PREEMPTION();
1880:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1881:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1882:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1884:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1886:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1888:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskEXIT_CRITICAL();
1892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
ARM GAS  /tmp/cc7Oi1VE.s 			page 40


1894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1895:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1897:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1903:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( INCLUDE_xTaskResumeFromISR == 1 ) && ( INCLUDE_vTaskSuspend == 1 ) )
1904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1905:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskResumeFromISR( TaskHandle_t xTaskToResume )
1906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
1908:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = xTaskToResume;
1909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
1910:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToResume );
1912:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
1914:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
1915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
1916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
1917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
1918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
1919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
1921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		been assigned a priority above the configured maximum system call
1922:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
1923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
1924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
1925:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
1926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
1927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		provided on the following link:
1928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		https://www.freertos.org/RTOS-Cortex-M3-M4.html */
1929:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1931:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1932:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( prvTaskIsTaskSuspended( pxTCB ) != pdFALSE )
1934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1935:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				traceTASK_RESUME_FROM_ISR( pxTCB );
1936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Check the ready lists can be accessed. */
1938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
1939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Ready lists can be accessed so move the task from the
1941:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					suspended list to the ready list directly. */
1942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
1943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xYieldRequired = pdTRUE;
1945:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1946:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1947:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1948:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1949:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1950:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cc7Oi1VE.s 			page 41


1951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
1952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
1953:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1954:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1955:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1956:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The delayed or ready lists cannot be accessed so the task
1957:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					is held in the pending ready list until the scheduler is
1958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					unsuspended. */
1959:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
1960:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1961:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1965:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1966:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1968:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xYieldRequired;
1970:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskResumeFromISR == 1 ) && ( INCLUDE_vTaskSuspend == 1 ) ) */
1973:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1974:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1975:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskStartScheduler( void )
1976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
1977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
1978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Add the idle task at the lowest priority. */
1980:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configSUPPORT_STATIC_ALLOCATION == 1 )
1981:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
1983:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		StackType_t *pxIdleTaskStackBuffer = NULL;
1984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uint32_t ulIdleTaskStackSize;
1985:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The Idle task is created using user provided RAM - obtain the
1987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		address of the RAM then create the idle task. */
1988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize
1989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
1990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												configIDLE_TASK_NAME,
1991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												ulIdleTaskStackSize,
1992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												( void * ) NULL, /*lint !e961.  The cast is not redundant for all compilers. */
1993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												portPRIVILEGE_BIT, /* In effect ( tskIDLE_PRIORITY | portPRIVILEGE_BIT ), but tskIDLE_P
1994:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												pxIdleTaskStackBuffer,
1995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												pxIdleTaskTCBBuffer ); /*lint !e961 MISRA exception, justified as it is not a redundant
1996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xIdleTaskHandle != NULL )
1998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdPASS;
2000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2001:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdFAIL;
2004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2005:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#else
2007:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
ARM GAS  /tmp/cc7Oi1VE.s 			page 42


2008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The Idle task is being created using dynamically allocated RAM. */
2009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = xTaskCreate(	prvIdleTask,
2010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								configIDLE_TASK_NAME,
2011:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								configMINIMAL_STACK_SIZE,
2012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								( void * ) NULL,
2013:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								portPRIVILEGE_BIT, /* In effect ( tskIDLE_PRIORITY | portPRIVILEGE_BIT ), but tskIDLE_PRIOR
2014:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								&xIdleTaskHandle ); /*lint !e961 MISRA exception, justified as it is not a redundant explic
2015:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configSUPPORT_STATIC_ALLOCATION */
2017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2018:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_TIMERS == 1 )
2019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xReturn == pdPASS )
2021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = xTimerCreateTimerTask();
2023:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2024:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2026:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2028:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2029:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configUSE_TIMERS */
2030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2031:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( xReturn == pdPASS )
2032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2033:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* freertos_tasks_c_additions_init() should only be called if the user
2034:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		definable macro FREERTOS_TASKS_C_ADDITIONS_INIT() is defined, as that is
2035:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the only macro called by the function. */
2036:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#ifdef FREERTOS_TASKS_C_ADDITIONS_INIT
2037:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2038:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			freertos_tasks_c_additions_init();
2039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2040:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
2041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2042:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Interrupts are turned off here, to ensure a tick does not occur
2043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		before or during the call to xPortStartScheduler().  The stacks of
2044:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the created tasks contain a status word with interrupts switched on
2045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		so interrupts will automatically get re-enabled when the first task
2046:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		starts to run. */
2047:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portDISABLE_INTERRUPTS();
2048:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
2050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Switch Newlib's _impure_ptr variable to point to the _reent
2052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			structure specific to the task that will run first.
2053:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
2054:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			for additional information. */
2055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
2056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
2058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xNextTaskUnblockTime = portMAX_DELAY;
2060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xSchedulerRunning = pdTRUE;
2061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
2062:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2063:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If configGENERATE_RUN_TIME_STATS is defined then the following
2064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		macro must be defined to configure the timer/counter used to generate
ARM GAS  /tmp/cc7Oi1VE.s 			page 43


2065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the run time counter time base.   NOTE:  If configGENERATE_RUN_TIME_STATS
2066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is set to 0 and the following line fails to build then ensure you do not
2067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		have portCONFIGURE_TIMER_FOR_RUN_TIME_STATS() defined in your
2068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		FreeRTOSConfig.h file. */
2069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCONFIGURE_TIMER_FOR_RUN_TIME_STATS();
2070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2071:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
2072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2073:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Setting up the timer tick is hardware specific and thus in the
2074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portable interface. */
2075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xPortStartScheduler() != pdFALSE )
2076:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2077:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Should not reach here as if the scheduler is running the
2078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			function will not return. */
2079:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2080:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2081:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Should only reach here if a task calls xTaskEndScheduler(). */
2083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2085:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
2086:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This line will only be reached if the kernel could not be started,
2088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		because there was not enough FreeRTOS heap to create the idle task
2089:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		or the timer task. */
2090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
2091:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2092:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2093:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Prevent compiler warnings if INCLUDE_xTaskGetIdleTaskHandle is set to 0,
2094:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	meaning xIdleTaskHandle is not used anywhere else. */
2095:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) xIdleTaskHandle;
2096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2097:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2098:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2099:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskEndScheduler( void )
2100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Stop the scheduler interrupts and call the portable scheduler end
2102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	routine so the original ISRs can be restored if necessary.  The port
2103:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	layer must ensure interrupts enable	bit is left in the correct state. */
2104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portDISABLE_INTERRUPTS();
2105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xSchedulerRunning = pdFALSE;
2106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vPortEndScheduler();
2107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskSuspendAll( void )
2111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2112:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A critical section is not required as the variable is of type
2113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t.  Please read Richard Barry's reply in the following link to a
2114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	post in the FreeRTOS support forum before reporting this as a bug! -
2115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	http://goo.gl/wu4acr */
2116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* portSOFRWARE_BARRIER() is only implemented for emulated/simulated ports that
2118:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	do not otherwise exhibit real time behaviour. */
2119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portSOFTWARE_BARRIER();
2120:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* The scheduler is suspended if uxSchedulerSuspended is non-zero.  An increment
ARM GAS  /tmp/cc7Oi1VE.s 			page 44


2122:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	is used to allow calls to vTaskSuspendAll() to nest. */
2123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	++uxSchedulerSuspended;
2124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Enforces ordering for ports and optimised compilers that may otherwise place
2126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the above increment elsewhere. */
2127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portMEMORY_BARRIER();
2128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
2132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static TickType_t prvGetExpectedIdleTime( void )
2134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TickType_t xReturn;
2136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxHigherPriorityReadyTasks = pdFALSE;
2137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* uxHigherPriorityReadyTasks takes care of the case where
2139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configUSE_PREEMPTION is 0, so there may be tasks above the idle priority
2140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		task that are in the Ready state, even though the idle task is
2141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		running. */
2142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( configUSE_PORT_OPTIMISED_TASK_SELECTION == 0 )
2143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxTopReadyPriority > tskIDLE_PRIORITY )
2145:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxHigherPriorityReadyTasks = pdTRUE;
2147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else
2150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2151:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			const UBaseType_t uxLeastSignificantBit = ( UBaseType_t ) 0x01;
2152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* When port optimised task selection is used the uxTopReadyPriority
2154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			variable is used as a bit map.  If bits other than the least
2155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			significant bit are set then there are tasks that have a priority
2156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			above the idle priority that are in the Ready state.  This takes
2157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			care of the case where the co-operative scheduler is in use. */
2158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxTopReadyPriority > uxLeastSignificantBit )
2159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxHigherPriorityReadyTasks = pdTRUE;
2161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
2164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB->uxPriority > tskIDLE_PRIORITY )
2166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2167:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = 0;
2168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2169:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > 1 )
2170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2171:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* There are other idle priority tasks in the ready state.  If
2172:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			time slicing is used then the very next tick interrupt must be
2173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			processed. */
2174:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = 0;
2175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else if( uxHigherPriorityReadyTasks != pdFALSE )
2177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2178:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* There are tasks in the Ready state that have a priority above the
ARM GAS  /tmp/cc7Oi1VE.s 			page 45


2179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			idle priority.  This path can only be reached if
2180:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configUSE_PREEMPTION is 0. */
2181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = 0;
2182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = xNextTaskUnblockTime - xTickCount;
2186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
2189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
2192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2193:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xTaskResumeAll( void )
2195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxTCB = NULL;
2197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xAlreadyYielded = pdFALSE;
2198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2199:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* If uxSchedulerSuspended is zero then this function does not match a
2200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	previous call to vTaskSuspendAll(). */
2201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( uxSchedulerSuspended );
2202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* It is possible that an ISR caused a task to be removed from an event
2204:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	list while the scheduler was suspended.  If this was the case then the
2205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	removed task will have been added to the xPendingReadyList.  Once the
2206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	scheduler has been resumed it is safe to move all the pending ready
2207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	tasks from this list into their appropriate ready list. */
2208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
2209:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		--uxSchedulerSuspended;
2211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
2213:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
2215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Move any readied tasks from the pending list into the
2217:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				appropriate ready list. */
2218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
2219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as
2221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
2224:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* If the moved task has a priority higher than the current
2226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					task then a yield must be performed. */
2227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
2228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xYieldPending = pdTRUE;
2230:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
ARM GAS  /tmp/cc7Oi1VE.s 			page 46


2236:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB != NULL )
2238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* A task was unblocked while the scheduler was suspended,
2240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					which may have prevented the next unblock time from being
2241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					re-calculated, in which case re-calculate it now.  Mainly
2242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					important for low power tickless implementations, where
2243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					this can prevent an unnecessary exit from low power
2244:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					state. */
2245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvResetNextTaskUnblockTime();
2246:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2248:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If any ticks occurred while the scheduler was suspended then
2249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				they should be processed now.  This ensures the tick count does
2250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				not	slip, and that any delayed tasks are resumed at the correct
2251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				time. */
2252:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
2254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( xPendedCounts > ( TickType_t ) 0U )
2256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						do
2258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
2259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							if( xTaskIncrementTick() != pdFALSE )
2260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
2261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								xYieldPending = pdTRUE;
2262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
2263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							else
2264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
2265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								mtCOVERAGE_TEST_MARKER();
2266:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
2267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							--xPendedCounts;
2268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						} while( xPendedCounts > ( TickType_t ) 0U );
2269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xPendedTicks = 0;
2271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2272:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2273:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2274:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2276:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2277:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xYieldPending != pdFALSE )
2279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					#if( configUSE_PREEMPTION != 0 )
2281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xAlreadyYielded = pdTRUE;
2283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					#endif
2285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
2286:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2287:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
2288:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
2290:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2291:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2292:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
ARM GAS  /tmp/cc7Oi1VE.s 			page 47


2293:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2294:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2295:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2296:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2297:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2298:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskEXIT_CRITICAL();
2299:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2300:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xAlreadyYielded;
2301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2302:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2303:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2304:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xTaskGetTickCount( void )
2305:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2306:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xTicks;
2307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2308:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Critical section required if running on a 16 bit processor. */
2309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portTICK_TYPE_ENTER_CRITICAL();
2310:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTicks = xTickCount;
2312:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2313:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portTICK_TYPE_EXIT_CRITICAL();
2314:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2315:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xTicks;
2316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2317:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2319:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xTaskGetTickCountFromISR( void )
2320:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xReturn;
2322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t uxSavedInterruptStatus;
2323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2324:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
2325:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
2326:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	above the maximum system call priority are kept permanently enabled, even
2327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
2328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
2329:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
2330:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
2331:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	assigned a priority above the configured maximum system call priority.
2332:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
2333:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	that have been assigned a priority at or (logically) below the maximum
2334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
2335:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
2336:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	More information (albeit Cortex-M specific) is provided on the following
2337:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	link: https://www.freertos.org/RTOS-Cortex-M3-M4.html */
2338:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
2339:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uxSavedInterruptStatus = portTICK_TYPE_SET_INTERRUPT_MASK_FROM_ISR();
2341:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = xTickCount;
2343:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portTICK_TYPE_CLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
2345:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xReturn;
2347:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cc7Oi1VE.s 			page 48


2350:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t uxTaskGetNumberOfTasks( void )
2351:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2352:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A critical section is not required because the variables are of type
2353:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t. */
2354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return uxCurrentNumberOfTasks;
2355:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2356:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2357:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2358:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** char *pcTaskGetName( TaskHandle_t xTaskToQuery ) /*lint !e971 Unqualified char types are allowed fo
2359:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2360:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxTCB;
2361:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2362:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* If null is passed in here then the name of the calling task is being
2363:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	queried. */
2364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTCB = prvGetTCBFromHandle( xTaskToQuery );
2365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTCB );
2366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
2367:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2368:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2369:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2370:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
2371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2372:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static TCB_t *prvSearchForNameWithinSingleList( List_t *pxList, const char pcNameToQuery[] )
2373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2374:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNextTCB, *pxFirstTCB, *pxReturn = NULL;
2375:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t x;
2376:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	char cNextChar;
2377:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xBreakLoop;
2378:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2379:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This function is called with the scheduler suspended. */
2380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2381:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_t ) 0 )
2382:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2383:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList );  /*lint !e9079 void * is used as this macro i
2384:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2385:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			do
2386:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2387:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList ); /*lint !e9079 void * is used as this macro is
2388:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2389:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Check each character in the name looking for a match or
2390:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mismatch. */
2391:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xBreakLoop = pdFALSE;
2392:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
2393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2394:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					cNextChar = pxNextTCB->pcTaskName[ x ];
2395:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2396:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( cNextChar != pcNameToQuery[ x ] )
2397:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2398:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* Characters didn't match. */
2399:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xBreakLoop = pdTRUE;
2400:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else if( cNextChar == ( char ) 0x00 )
2402:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2403:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* Both strings terminated, a match must have been
2404:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						found. */
2405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						pxReturn = pxNextTCB;
2406:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xBreakLoop = pdTRUE;
ARM GAS  /tmp/cc7Oi1VE.s 			page 49


2407:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2409:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2410:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2411:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2412:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2413:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( xBreakLoop != pdFALSE )
2414:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2415:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						break;
2416:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2417:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2418:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2419:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxReturn != NULL )
2420:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The handle has been found. */
2422:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
2423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2424:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2425:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			} while( pxNextTCB != pxFirstTCB );
2426:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2427:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2428:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2429:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2430:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2431:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return pxReturn;
2433:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2435:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_xTaskGetHandle */
2436:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2437:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2438:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
2439:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2440:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xTaskGetHandle( const char *pcNameToQuery ) /*lint !e971 Unqualified char types are a
2441:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2442:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxQueue = configMAX_PRIORITIES;
2443:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t* pxTCB;
2444:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2445:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Task names will be truncated to configMAX_TASK_NAME_LEN - 1 bytes. */
2446:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( strlen( pcNameToQuery ) < configMAX_TASK_NAME_LEN );
2447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2448:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vTaskSuspendAll();
2449:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2450:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Search the ready lists. */
2451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			do
2452:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxQueue--;
2454:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) &( pxReadyTasksLists[ uxQueue ] ), pcNam
2455:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2456:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB != NULL )
2457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2458:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Found the handle. */
2459:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
2460:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2461:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2462:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			} while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception as the casts
2463:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cc7Oi1VE.s 			page 50


2464:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Search the delayed lists. */
2465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB == NULL )
2466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2467:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) pxDelayedTaskList, pcNameToQuery );
2468:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2469:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2470:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB == NULL )
2471:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2472:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) pxOverflowDelayedTaskList, pcNameToQuery
2473:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2474:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2475:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if ( INCLUDE_vTaskSuspend == 1 )
2476:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2477:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB == NULL )
2478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Search the suspended list. */
2480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB = prvSearchForNameWithinSingleList( &xSuspendedTaskList, pcNameToQuery );
2481:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2483:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
2484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2485:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( INCLUDE_vTaskDelete == 1 )
2486:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB == NULL )
2488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2489:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Search the deleted list. */
2490:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB = prvSearchForNameWithinSingleList( &xTasksWaitingTermination, pcNameToQuery );
2491:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2493:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
2494:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2495:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) xTaskResumeAll();
2496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2497:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return pxTCB;
2498:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2499:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2500:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_xTaskGetHandle */
2501:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
2504:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2505:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskGetSystemState( TaskStatus_t * const pxTaskStatusArray, const UBaseType_t uxArra
2506:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2507:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTask = 0, uxQueue = configMAX_PRIORITIES;
2508:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2509:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vTaskSuspendAll();
2510:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2511:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Is there a space in the array for each task in the system? */
2512:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxArraySize >= uxCurrentNumberOfTasks )
2513:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2514:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Fill in an TaskStatus_t structure with information on each
2515:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task in the Ready state. */
2516:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				do
2517:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2518:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxQueue--;
2519:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &( pxReadyTasksLists
2520:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cc7Oi1VE.s 			page 51


2521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				} while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception as the cast
2522:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Fill in an TaskStatus_t structure with information on each
2524:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task in the Blocked state. */
2525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t * ) pxDelaye
2526:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t * ) pxOverfl
2527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2528:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if( INCLUDE_vTaskDelete == 1 )
2529:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2530:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Fill in an TaskStatus_t structure with information on
2531:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					each task that has been deleted but not yet cleaned up. */
2532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &xTasksWaitingTermin
2533:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2534:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
2535:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2536:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if ( INCLUDE_vTaskSuspend == 1 )
2537:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2538:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Fill in an TaskStatus_t structure with information on
2539:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					each task in the Suspended state. */
2540:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &xSuspendedTaskList,
2541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2542:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
2543:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if ( configGENERATE_RUN_TIME_STATS == 1)
2545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pulTotalRunTime != NULL )
2547:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2548:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#ifdef portALT_GET_RUN_TIME_COUNTER_VALUE
2549:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							portALT_GET_RUN_TIME_COUNTER_VALUE( ( *pulTotalRunTime ) );
2550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#else
2551:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							*pulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
2552:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#endif
2553:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2554:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#else
2556:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2557:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pulTotalRunTime != NULL )
2558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2559:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						*pulTotalRunTime = 0;
2560:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2561:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
2563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2564:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
2565:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2567:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2569:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) xTaskResumeAll();
2570:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2571:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxTask;
2572:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
2575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2577:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskGetIdleTaskHandle == 1 )
ARM GAS  /tmp/cc7Oi1VE.s 			page 52


2578:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xTaskGetIdleTaskHandle( void )
2580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2581:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xTaskGetIdleTaskHandle() is called before the scheduler has been
2582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		started, then xIdleTaskHandle will be NULL. */
2583:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( xIdleTaskHandle != NULL ) );
2584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xIdleTaskHandle;
2585:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_xTaskGetIdleTaskHandle */
2588:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* This conditional compilation should use inequality to 0, not equality to 1.
2591:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** This is to ensure vTaskStepTick() is available when user defined low power mode
2592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** implementations require configUSE_TICKLESS_IDLE to be set to a value other than
2593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 1. */
2594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
2595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskStepTick( const TickType_t xTicksToJump )
2597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2598:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Correct the tick count value after a period during which the tick
2599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		was suppressed.  Note this does *not* call the tick hook function for
2600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		each stepped tick. */
2601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( xTickCount + xTicksToJump ) <= xNextTaskUnblockTime );
2602:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTickCount += xTicksToJump;
2603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceINCREASE_TICK_COUNT( xTicksToJump );
2604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
2607:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xTaskCatchUpTicks( TickType_t xTicksToCatchUp )
2610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xYieldRequired = pdFALSE;
2612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Must not be called with the scheduler suspended as the implementation
2614:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	relies on xPendedTicks being wound down to 0 in xTaskResumeAll(). */
2615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( uxSchedulerSuspended == 0 );
2616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Use xPendedTicks to mimic xTicksToCatchUp number of ticks occurring when
2618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the scheduler is suspended so the ticks are executed in xTaskResumeAll(). */
2619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vTaskSuspendAll();
2620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xPendedTicks += xTicksToCatchUp;
2621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xYieldRequired = xTaskResumeAll();
2622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xYieldRequired;
2624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2625:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2626:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskAbortDelay == 1 )
2628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2629:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskAbortDelay( TaskHandle_t xTask )
2630:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB = xTask;
2632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
2633:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2634:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTCB );
ARM GAS  /tmp/cc7Oi1VE.s 			page 53


2635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vTaskSuspendAll();
2637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2638:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* A task can only be prematurely removed from the Blocked state if
2639:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			it is actually in the Blocked state. */
2640:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( eTaskGetState( xTask ) == eBlocked )
2641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdPASS;
2643:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2644:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Remove the reference to the task from the blocked list.  An
2645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				interrupt won't touch the xStateListItem because the
2646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				scheduler is suspended. */
2647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Is the task waiting on an event also?  If so remove it from
2650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the event list too.  Interrupts can touch the event list item,
2651:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				even though the scheduler is suspended, so a critical section
2652:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				is used. */
2653:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskENTER_CRITICAL();
2654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
2656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2657:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2658:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* This lets the task know it was forcibly removed from the
2660:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						blocked state so it should not re-evaluate its block time and
2661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						then block again. */
2662:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						pxTCB->ucDelayAborted = pdTRUE;
2663:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2666:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskEXIT_CRITICAL();
2670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2671:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Place the unblocked task into the appropriate ready list. */
2672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
2673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2674:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* A task being unblocked cannot cause an immediate context
2675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				switch if preemption is turned off. */
2676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if (  configUSE_PREEMPTION == 1 )
2677:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2678:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Preemption is on, but a context switch should only be
2679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					performed if the unblocked task has a priority that is
2680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					equal to or higher than the currently executing task. */
2681:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
2682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* Pend the yield to be performed when the scheduler
2684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						is unsuspended. */
2685:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xYieldPending = pdTRUE;
2686:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2690:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
ARM GAS  /tmp/cc7Oi1VE.s 			page 54


2692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif /* configUSE_PREEMPTION */
2693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2694:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
2695:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdFAIL;
2697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2698:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) xTaskResumeAll();
2700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2701:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
2702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2703:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_xTaskAbortDelay */
2705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xTaskIncrementTick( void )
2708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t * pxTCB;
2710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xItemValue;
2711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xSwitchRequired = pdFALSE;
2712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2713:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Called by the portable layer each time a tick interrupt occurs.
2714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	Increments the tick then checks to see if the new tick value will cause any
2715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	tasks to be unblocked. */
2716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	traceTASK_INCREMENT_TICK( xTickCount );
2717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
2718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2719:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Minor optimisation.  The tick count cannot change in this
2720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		block. */
2721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
2722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2723:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Increment the RTOS tick, switching the delayed and overflowed
2724:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		delayed lists if it wraps to 0. */
2725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTickCount = xConstTickCount;
2726:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as
2728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskSWITCH_DELAYED_LISTS();
2730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2731:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2735:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2736:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* See if this tick has made a timeout expire.  Tasks are stored in
2737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the	queue in the order of their wake time - meaning once one task
2738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		has been found whose block time has not expired there is no need to
2739:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		look any further down the list. */
2740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xConstTickCount >= xNextTaskUnblockTime )
2741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			for( ;; )
2743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
2745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The delayed list is empty.  Set xNextTaskUnblockTime
2747:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					to the maximum possible value so it is extremely
2748:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					unlikely that the
ARM GAS  /tmp/cc7Oi1VE.s 			page 55


2749:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( xTickCount >= xNextTaskUnblockTime ) test will pass
2750:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					next time through. */
2751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redun
2752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
2753:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2754:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
2755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2756:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The delayed list is not empty, get the value of the
2757:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					item at the head of the delayed list.  This is the time
2758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					at which the task at the head of the delayed list must
2759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					be removed from the Blocked state. */
2760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this
2761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
2762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( xConstTickCount < xItemValue )
2764:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2765:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* It is not time to unblock this item yet, but the
2766:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						item value is the time at which the task at the head
2767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						of the blocked list must be removed from the Blocked
2768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						state -	so record the item value in
2769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xNextTaskUnblockTime. */
2770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xNextTaskUnblockTime = xItemValue;
2771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks
2772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2774:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* It is time to remove the item from the Blocked state. */
2779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2781:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Is the task waiting on an event also?  If so remove
2782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					it from the event list. */
2783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
2784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2787:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2788:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2792:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Place the unblocked task into the appropriate ready
2793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					list. */
2794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
2795:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* A task being unblocked cannot cause an immediate
2797:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					context switch if preemption is turned off. */
2798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					#if (  configUSE_PREEMPTION == 1 )
2799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2800:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* Preemption is on, but a context switch should
2801:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						only be performed if the unblocked task has a
2802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						priority that is equal to or higher than the
2803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						currently executing task. */
2804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
2805:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
ARM GAS  /tmp/cc7Oi1VE.s 			page 56


2806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							xSwitchRequired = pdTRUE;
2807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
2808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						else
2809:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
2810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							mtCOVERAGE_TEST_MARKER();
2811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
2812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2813:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					#endif /* configUSE_PREEMPTION */
2814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2816:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Tasks of equal priority to the currently running task will share
2819:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		processing time (time slice) if preemption is on, and the application
2820:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		writer has not explicitly turned time slicing off. */
2821:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( ( configUSE_PREEMPTION == 1 ) && ( configUSE_TIME_SLICING == 1 ) )
2822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2823:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_
2824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xSwitchRequired = pdTRUE;
2826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
2828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2830:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* ( ( configUSE_PREEMPTION == 1 ) && ( configUSE_TIME_SLICING == 1 ) ) */
2833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2834:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_TICK_HOOK == 1 )
2835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Guard against the tick hook being called when the pended tick
2837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			count is being unwound (when the scheduler is being unlocked). */
2838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xPendedTicks == ( TickType_t ) 0 )
2839:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2840:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vApplicationTickHook();
2841:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
2843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2844:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2846:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_TICK_HOOK */
2848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_PREEMPTION == 1 )
2850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xYieldPending != pdFALSE )
2852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xSwitchRequired = pdTRUE;
2854:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
2856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2859:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_PREEMPTION */
2861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
ARM GAS  /tmp/cc7Oi1VE.s 			page 57


2863:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		++xPendedTicks;
2865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2866:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The tick hook gets called at regular intervals, even if the
2867:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		scheduler is locked. */
2868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_TICK_HOOK == 1 )
2869:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vApplicationTickHook();
2871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
2873:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xSwitchRequired;
2876:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2877:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2878:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2880:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2881:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskSetApplicationTaskTag( TaskHandle_t xTask, TaskHookFunction_t pxHookFunction )
2882:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *xTCB;
2884:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xTask is NULL then it is the task hook of the calling task that is
2886:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		getting set. */
2887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTask == NULL )
2888:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB = ( TCB_t * ) pxCurrentTCB;
2890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB = xTask;
2894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2895:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Save the hook function in the TCB.  A critical section is required as
2897:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the value can be accessed from an interrupt. */
2898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
2899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB->pxTaskTag = pxHookFunction;
2901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
2903:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2905:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2908:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2910:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHookFunction_t xTaskGetApplicationTaskTag( TaskHandle_t xTask )
2911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2912:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
2913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHookFunction_t xReturn;
2914:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xTask is NULL then set the calling task's hook. */
2916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
2917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Save the hook function in the TCB.  A critical section is required as
2919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the value can be accessed from an interrupt. */
ARM GAS  /tmp/cc7Oi1VE.s 			page 58


2920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
2921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2922:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pxTCB->pxTaskTag;
2923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
2925:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
2927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2929:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2931:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2932:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHookFunction_t xTaskGetApplicationTaskTagFromISR( TaskHandle_t xTask )
2935:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
2937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHookFunction_t xReturn;
2938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
2939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xTask is NULL then set the calling task's hook. */
2941:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
2942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Save the hook function in the TCB.  A critical section is required as
2944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the value can be accessed from an interrupt. */
2945:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
2946:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2947:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pxTCB->pxTaskTag;
2948:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2949:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
2950:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
2952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2953:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2954:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2955:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2956:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2957:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2959:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskCallApplicationTaskHook( TaskHandle_t xTask, void *pvParameter )
2960:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2961:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *xTCB;
2962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
2963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xTask is NULL then we are calling our own task hook. */
2965:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTask == NULL )
2966:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB = pxCurrentTCB;
2968:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2970:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB = xTask;
2972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2973:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2974:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTCB->pxTaskTag != NULL )
2975:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = xTCB->pxTaskTag( pvParameter );
ARM GAS  /tmp/cc7Oi1VE.s 			page 59


2977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2980:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdFAIL;
2981:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2983:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
2984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2985:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskSwitchContext( void )
2990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
2992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The scheduler is currently suspended - do not allow a context
2994:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		switch. */
2995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xYieldPending = pdTRUE;
2996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
2998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xYieldPending = pdFALSE;
3000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_OUT();
3001:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configGENERATE_RUN_TIME_STATS == 1 )
3003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#ifdef portALT_GET_RUN_TIME_COUNTER_VALUE
3005:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portALT_GET_RUN_TIME_COUNTER_VALUE( ulTotalRunTime );
3006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#else
3007:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				ulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
3008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
3009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Add the amount of time the task has been running to the
3011:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			accumulated time so far.  The time the task started running was
3012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			stored in ulTaskSwitchedInTime.  Note that there is no overflow
3013:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			protection here so count values are only valid until the timer
3014:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			overflows.  The guard against negative values is to protect
3015:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			against suspect run time stat counter implementations - which
3016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			are provided by the application, not the kernel. */
3017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ulTotalRunTime > ulTaskSwitchedInTime )
3018:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ulRunTimeCounter += ( ulTotalRunTime - ulTaskSwitchedInTime );
3020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3023:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3024:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ulTaskSwitchedInTime = ulTotalRunTime;
3026:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configGENERATE_RUN_TIME_STATS */
3028:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3029:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Check for stack overflow, if configured. */
3030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskCHECK_FOR_STACK_OVERFLOW();
3031:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Before the currently running task is switched out, save its errno. */
3033:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( configUSE_POSIX_ERRNO == 1 )
ARM GAS  /tmp/cc7Oi1VE.s 			page 60


3034:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3035:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxCurrentTCB->iTaskErrno = FreeRTOS_errno;
3036:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3037:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3038:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Select a new task to run using either the generic C or port
3040:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		optimised asm code. */
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timer
3042:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
3043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3044:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* After the new task is switched in, update the global errno. */
3045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( configUSE_POSIX_ERRNO == 1 )
3046:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3047:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			FreeRTOS_errno = pxCurrentTCB->iTaskErrno;
3048:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
3052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3053:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Switch Newlib's _impure_ptr variable to point to the _reent
3054:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			structure specific to this task.
3055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
3056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			for additional information. */
3057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
3058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
3060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3062:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3063:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskPlaceOnEventList( List_t * const pxEventList, const TickType_t xTicksToWait )
3065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
3067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH EITHER INTERRUPTS DISABLED OR THE
3069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	SCHEDULER SUSPENDED AND THE QUEUE BEING ACCESSED LOCKED. */
3070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3071:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Place the event list item of the TCB in the appropriate event list.
3072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	This is placed in the list in priority order so the highest priority task
3073:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	is the first to be woken by the event.  The queue that contains the event
3074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	list is locked, preventing simultaneous access from interrupts. */
3075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
3076:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3077:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
3078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3079:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3080:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3081:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskPlaceOnUnorderedEventList( List_t * pxEventList, const TickType_t xItemValue, const TickT
3082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
3084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3085:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED.  It is used by
3086:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the event groups implementation. */
3087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( uxSchedulerSuspended != 0 );
3088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3089:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Store the item value in the event list item.  It is safe to access the
3090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	event list item here as interrupts won't access the event list item of a
ARM GAS  /tmp/cc7Oi1VE.s 			page 61


3091:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	task that is not in the Blocked state. */
3092:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ), xItemValue | taskEVENT_LIST_ITEM_VALUE
3093:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3094:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Place the event list item of the TCB at the end of the appropriate event
3095:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	list.  It is safe to access the event list here because it is part of an
3096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	event group implementation - and interrupts don't access event groups
3097:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	directly (instead they access them indirectly by pending function calls to
3098:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the task level). */
3099:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
3100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
3102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3103:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TIMERS == 1 )
3106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskPlaceOnEventListRestricted( List_t * const pxEventList, TickType_t xTicksToWait, const B
3108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxEventList );
3110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This function should not be called by application code hence the
3112:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		'Restricted' in its name.  It is not part of the public API.  It is
3113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		designed for use by kernel code, and has special calling requirements -
3114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		it should be called with the scheduler suspended. */
3115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Place the event list item of the TCB in the appropriate event list.
3118:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		In this case it is assume that this is the only task that is going to
3119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		be waiting on this event list, so the faster vListInsertEnd() function
3120:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		can be used in place of vListInsert. */
3121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
3122:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If the task should block indefinitely then set the block time to a
3124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		value that will be recognised as an indefinite delay inside the
3125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddCurrentTaskToDelayedList() function. */
3126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xWaitIndefinitely != pdFALSE )
3127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTicksToWait = portMAX_DELAY;
3129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_DELAY_UNTIL( ( xTickCount + xTicksToWait ) );
3132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
3133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TIMERS */
3136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xTaskRemoveFromEventList( const List_t * const pxEventList )
3139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
3141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
3142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED FROM A CRITICAL SECTION.  It can also be
3144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	called from a critical section within an ISR. */
3145:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* The event list is sorted in priority order, so the first in the list can
3147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	be removed as it is known to be the highest priority.  Remove the TCB from
ARM GAS  /tmp/cc7Oi1VE.s 			page 62


3148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the delayed list, and add it to the ready list.
3149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	If an event is for a queue that is locked then this function will never
3151:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	get called - the lock count on the queue will get modified instead.  This
3152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	means exclusive access to the event list is guaranteed here.
3153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	This function assumes that a check has already been made to ensure that
3155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxEventList is not empty. */
3156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this 
3157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
3158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
3159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
3161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
3163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddTaskToReadyList( pxUnblockedTCB );
3164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( configUSE_TICKLESS_IDLE != 0 )
3166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3167:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If a task is blocked on a kernel object then xNextTaskUnblockTime
3168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			might be set to the blocked task's time out time.  If the task is
3169:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			unblocked for a reason other than a timeout xNextTaskUnblockTime is
3170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			normally left unchanged, because it is automatically reset to a new
3171:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			value when the tick count equals xNextTaskUnblockTime.  However if
3172:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			tickless idling is used it might be more important to enter sleep mode
3173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			at the earliest possible time - so reset xNextTaskUnblockTime here to
3174:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ensure it is updated at the earliest possible time. */
3175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvResetNextTaskUnblockTime();
3176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3178:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
3180:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The delayed and ready lists cannot be accessed, so hold this task
3182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pending until the scheduler is resumed. */
3183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
3184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
3187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Return true if the task removed from the event list has a higher
3189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		priority than the calling task.  This allows the calling task to know if
3190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		it should force a context switch now. */
3191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = pdTRUE;
3192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3193:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Mark that a yield is pending in case the user is not using the
3194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		"xHigherPriorityTaskWoken" parameter to an ISR safe FreeRTOS function. */
3195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xYieldPending = pdTRUE;
3196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
3198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3199:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = pdFALSE;
3200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xReturn;
3203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3204:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
ARM GAS  /tmp/cc7Oi1VE.s 			page 63


3205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskRemoveFromUnorderedEventList( ListItem_t * pxEventListItem, const TickType_t xItemValue )
3207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
3209:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED.  It is used by
3211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the event flags implementation. */
3212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( uxSchedulerSuspended != pdFALSE );
3213:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Store the new item value in the event list. */
3215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( pxEventListItem, xItemValue | taskEVENT_LIST_ITEM_VALUE_IN_USE );
3216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3217:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Remove the event list form the event flag.  Interrupts do not access
3218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	event flags. */
3219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxUnblockedTCB = listGET_LIST_ITEM_OWNER( pxEventListItem ); /*lint !e9079 void * is used as this 
3220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
3221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
3222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configUSE_TICKLESS_IDLE != 0 )
3224:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If a task is blocked on a kernel object then xNextTaskUnblockTime
3226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		might be set to the blocked task's time out time.  If the task is
3227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		unblocked for a reason other than a timeout xNextTaskUnblockTime is
3228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		normally left unchanged, because it is automatically reset to a new
3229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		value when the tick count equals xNextTaskUnblockTime.  However if
3230:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		tickless idling is used it might be more important to enter sleep mode
3231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		at the earliest possible time - so reset xNextTaskUnblockTime here to
3232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		ensure it is updated at the earliest possible time. */
3233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvResetNextTaskUnblockTime();
3234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
3236:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Remove the task from the delayed list and add it to the ready list.  The
3238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	scheduler is suspended so interrupts will not be accessing the ready
3239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	lists. */
3240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
3241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvAddTaskToReadyList( pxUnblockedTCB );
3242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
3244:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The unblocked task has a priority above that of the calling task, so
3246:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		a context switch is required.  This function is called with the
3247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		scheduler suspended so xYieldPending is set so the context switch
3248:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		occurs immediately that the scheduler is resumed (unsuspended). */
3249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xYieldPending = pdTRUE;
3250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3252:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskSetTimeOutState( TimeOut_t * const pxTimeOut )
3255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTimeOut );
3257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
3258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTimeOut->xOverflowCount = xNumOfOverflows;
3260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTimeOut->xTimeOnEntering = xTickCount;
3261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
ARM GAS  /tmp/cc7Oi1VE.s 			page 64


3262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskEXIT_CRITICAL();
3263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3266:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskInternalSetTimeOutState( TimeOut_t * const pxTimeOut )
3267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* For internal use only as it does not use a critical section. */
3269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTimeOut->xOverflowCount = xNumOfOverflows;
3270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTimeOut->xTimeOnEntering = xTickCount;
3271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3272:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3273:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3274:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xTaskCheckForTimeOut( TimeOut_t * const pxTimeOut, TickType_t * const pxTicksToWait )
3275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3276:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
3277:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTimeOut );
3279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
3280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
3282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Minor optimisation.  The tick count cannot change in this block. */
3284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		const TickType_t xConstTickCount = xTickCount;
3285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
3286:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3287:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( INCLUDE_xTaskAbortDelay == 1 )
3288:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->ucDelayAborted != ( uint8_t ) pdFALSE )
3289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3290:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The delay was aborted, which is not the same as a time out,
3291:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				but has the same result. */
3292:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ucDelayAborted = pdFALSE;
3293:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
3294:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3295:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3296:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3297:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3298:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( INCLUDE_vTaskSuspend == 1 )
3299:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( *pxTicksToWait == portMAX_DELAY )
3300:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If INCLUDE_vTaskSuspend is set to 1 and the block time
3302:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				specified is the maximum block time then the task should block
3303:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				indefinitely, and therefore never time out. */
3304:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdFALSE;
3305:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3306:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3308:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEn
3310:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The tick count is greater than the time at which
3312:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSetTimeout() was called, but has also overflowed since
3313:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSetTimeOut() was called.  It must have wrapped all the way
3314:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			around and gone past again. This passed since vTaskSetTimeout()
3315:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			was called. */
3316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdTRUE;
3317:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with som
ARM GAS  /tmp/cc7Oi1VE.s 			page 65


3319:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3320:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Not a genuine timeout. Adjust parameters for time remaining. */
3321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			*pxTicksToWait -= xElapsedTime;
3322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskInternalSetTimeOutState( pxTimeOut );
3323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdFALSE;
3324:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3325:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3326:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			*pxTicksToWait = 0;
3328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdTRUE;
3329:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3330:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3331:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskEXIT_CRITICAL();
3332:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3333:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xReturn;
3334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3335:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3336:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3337:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskMissedYield( void )
3338:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3339:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xYieldPending = pdTRUE;
3340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3341:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3343:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3345:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskGetTaskNumber( TaskHandle_t xTask )
3346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3347:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn;
3348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t const *pxTCB;
3349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3350:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTask != NULL )
3351:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3352:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = xTask;
3353:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxTaskNumber;
3354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3355:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3356:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3357:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = 0U;
3358:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3359:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3360:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxReturn;
3361:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3362:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3363:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3367:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3368:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskSetTaskNumber( TaskHandle_t xTask, const UBaseType_t uxHandle )
3369:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3370:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
3371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3372:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTask != NULL )
3373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3374:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = xTask;
3375:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->uxTaskNumber = uxHandle;
ARM GAS  /tmp/cc7Oi1VE.s 			page 66


3376:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3377:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3378:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3379:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3381:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
3382:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * -----------------------------------------------------------
3383:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The Idle task.
3384:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * ----------------------------------------------------------
3385:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
3386:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The portTASK_FUNCTION() macro is used to allow port/compiler specific
3387:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * language extensions.  The equivalent prototype for this function is:
3388:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
3389:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * void prvIdleTask( void *pvParameters );
3390:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
3391:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
3392:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static portTASK_FUNCTION( prvIdleTask, pvParameters )
3393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3394:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Stop warnings. */
3395:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) pvParameters;
3396:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3397:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/** THIS IS THE RTOS IDLE TASK - WHICH IS CREATED AUTOMATICALLY WHEN THE
3398:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	SCHEDULER IS STARTED. **/
3399:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3400:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* In case a task that has a secure context deletes itself, in which case
3401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the idle task is responsible for deleting the task's secure context, if
3402:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	any. */
3403:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portALLOCATE_SECURE_CONTEXT( configMINIMAL_SECURE_STACK_SIZE );
3404:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	for( ;; )
3406:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3407:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* See if any tasks have deleted themselves - if so then the idle task
3408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is responsible for freeing the deleted task's TCB and stack. */
3409:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvCheckTasksWaitingTermination();
3410:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3411:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_PREEMPTION == 0 )
3412:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3413:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If we are not using preemption we keep forcing a task switch to
3414:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			see if any other task has become available.  If we are using
3415:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			preemption we don't need to do this as any task becoming available
3416:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			will automatically get the processor anyway. */
3417:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskYIELD();
3418:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3419:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_PREEMPTION */
3420:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( ( configUSE_PREEMPTION == 1 ) && ( configIDLE_SHOULD_YIELD == 1 ) )
3422:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* When using preemption tasks of equal priority will be
3424:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			timesliced.  If a task that is sharing the idle priority is ready
3425:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			to run then the idle task should yield before the end of the
3426:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			timeslice.
3427:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3428:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			A critical region is not required here as we are just reading from
3429:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the list, and an occasional incorrect value will not matter.  If
3430:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the ready list at the idle priority contains more than one task
3431:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			then a task other than the idle task is ready to execute. */
3432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
ARM GAS  /tmp/cc7Oi1VE.s 			page 67


3433:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskYIELD();
3435:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3436:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3437:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3438:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3439:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3440:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3441:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* ( ( configUSE_PREEMPTION == 1 ) && ( configIDLE_SHOULD_YIELD == 1 ) ) */
3442:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3443:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_IDLE_HOOK == 1 )
3444:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3445:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			extern void vApplicationIdleHook( void );
3446:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Call the user defined function from within the idle task.  This
3448:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			allows the application designer to add background functionality
3449:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			without the overhead of a separate task.
3450:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			NOTE: vApplicationIdleHook() MUST NOT, UNDER ANY CIRCUMSTANCES,
3451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			CALL A FUNCTION THAT MIGHT BLOCK. */
3452:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vApplicationIdleHook();
3453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3454:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_IDLE_HOOK */
3455:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3456:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This conditional compilation should use inequality to 0, not equality
3457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		to 1.  This is to ensure portSUPPRESS_TICKS_AND_SLEEP() is called when
3458:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		user defined low power mode	implementations require
3459:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configUSE_TICKLESS_IDLE to be set to a value other than 1. */
3460:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_TICKLESS_IDLE != 0 )
3461:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3462:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		TickType_t xExpectedIdleTime;
3463:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3464:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* It is not desirable to suspend then resume the scheduler on
3465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			each iteration of the idle task.  Therefore, a preliminary
3466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			test of the expected idle time is performed without the
3467:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			scheduler suspended.  The result here is not necessarily
3468:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			valid. */
3469:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xExpectedIdleTime = prvGetExpectedIdleTime();
3470:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3471:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xExpectedIdleTime >= configEXPECTED_IDLE_TIME_BEFORE_SLEEP )
3472:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3473:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vTaskSuspendAll();
3474:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3475:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Now the scheduler is suspended, the expected idle
3476:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					time can be sampled again, and this time its value can
3477:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					be used. */
3478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					configASSERT( xNextTaskUnblockTime >= xTickCount );
3479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xExpectedIdleTime = prvGetExpectedIdleTime();
3480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3481:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Define the following macro to set xExpectedIdleTime to 0
3482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if the application does not want
3483:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					portSUPPRESS_TICKS_AND_SLEEP() to be called. */
3484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					configPRE_SUPPRESS_TICKS_AND_SLEEP_PROCESSING( xExpectedIdleTime );
3485:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3486:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( xExpectedIdleTime >= configEXPECTED_IDLE_TIME_BEFORE_SLEEP )
3487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
3488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						traceLOW_POWER_IDLE_BEGIN();
3489:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime );
ARM GAS  /tmp/cc7Oi1VE.s 			page 68


3490:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						traceLOW_POWER_IDLE_END();
3491:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
3492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
3493:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
3494:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
3495:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
3496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3497:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) xTaskResumeAll();
3498:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3499:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3500:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3501:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3504:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_TICKLESS_IDLE */
3505:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3506:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3507:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3508:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3509:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TICKLESS_IDLE != 0 )
3510:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3511:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	eSleepModeStatus eTaskConfirmSleepModeStatus( void )
3512:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3513:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* The idle task exists in addition to the application tasks. */
3514:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const UBaseType_t uxNonApplicationTasks = 1;
3515:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	eSleepModeStatus eReturn = eStandardSleep;
3516:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3517:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This function must be called from a critical section. */
3518:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3519:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( &xPendingReadyList ) != 0 )
3520:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* A task was made ready while the scheduler was suspended. */
3522:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			eReturn = eAbortSleep;
3523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3524:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else if( xYieldPending != pdFALSE )
3525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3526:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* A yield was pended while the scheduler was suspended. */
3527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			eReturn = eAbortSleep;
3528:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3529:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3530:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3531:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If all the tasks are in the suspended list (which might mean they
3532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			have an infinite block time rather than actually being suspended)
3533:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			then it is safe to turn all clocks off and just wait for external
3534:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			interrupts. */
3535:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == ( uxCurrentNumberOfTasks - uxNonApplicatio
3536:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3537:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				eReturn = eNoTasksWaitingTimeout;
3538:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3539:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3540:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3542:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3543:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return eReturn;
3546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
ARM GAS  /tmp/cc7Oi1VE.s 			page 69


3547:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3548:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
3549:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3551:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
3552:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3553:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskSetThreadLocalStoragePointer( TaskHandle_t xTaskToSet, BaseType_t xIndex, void *pvValue 
3554:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3556:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3557:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xIndex < configNUM_THREAD_LOCAL_STORAGE_POINTERS )
3558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3559:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToSet );
3560:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB != NULL );
3561:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->pvThreadLocalStoragePointers[ xIndex ] = pvValue;
3562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3564:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3565:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configNUM_THREAD_LOCAL_STORAGE_POINTERS */
3566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3567:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
3569:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3570:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void *pvTaskGetThreadLocalStoragePointer( TaskHandle_t xTaskToQuery, BaseType_t xIndex )
3571:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3572:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void *pvReturn = NULL;
3573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xIndex < configNUM_THREAD_LOCAL_STORAGE_POINTERS )
3576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3577:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToQuery );
3578:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pvReturn = pxTCB->pvThreadLocalStoragePointers[ xIndex ];
3579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3581:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pvReturn = NULL;
3583:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3585:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return pvReturn;
3586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3588:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configNUM_THREAD_LOCAL_STORAGE_POINTERS */
3589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3591:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( portUSING_MPU_WRAPPERS == 1 )
3592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskAllocateMPURegions( TaskHandle_t xTaskToModify, const MemoryRegion_t * const xRegions )
3594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If null is passed in here then we are modifying the MPU settings of
3598:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the calling task. */
3599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTaskToModify );
3600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vPortStoreTaskMPUSettings( &( pxTCB->xMPUSettings ), xRegions, NULL, 0 );
3602:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cc7Oi1VE.s 			page 70


3604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* portUSING_MPU_WRAPPERS */
3605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3607:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvInitialiseTaskLists( void )
3608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t uxPriority;
3610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriorit
3612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
3614:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xDelayedTaskList1 );
3617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xDelayedTaskList2 );
3618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xPendingReadyList );
3619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( INCLUDE_vTaskDelete == 1 )
3621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vListInitialise( &xTasksWaitingTermination );
3623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* INCLUDE_vTaskDelete */
3625:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3626:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( INCLUDE_vTaskSuspend == 1 )
3627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vListInitialise( &xSuspendedTaskList );
3629:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3630:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* INCLUDE_vTaskSuspend */
3631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
3633:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	using list2. */
3634:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxDelayedTaskList = &xDelayedTaskList1;
3635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxOverflowDelayedTaskList = &xDelayedTaskList2;
3636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3638:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3639:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvCheckTasksWaitingTermination( void )
3640:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/** THIS FUNCTION IS CALLED FROM THE RTOS IDLE TASK **/
3643:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3644:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( INCLUDE_vTaskDelete == 1 )
3645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		TCB_t *pxTCB;
3647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* uxDeletedTasksWaitingCleanUp is used to prevent taskENTER_CRITICAL()
3649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		being called too often in the idle task. */
3650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
3651:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3652:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskENTER_CRITICAL();
3653:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is u
3655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
3656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				--uxCurrentNumberOfTasks;
3657:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				--uxDeletedTasksWaitingCleanUp;
3658:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskEXIT_CRITICAL();
3660:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cc7Oi1VE.s 			page 71


3661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvDeleteTCB( pxTCB );
3662:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3663:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* INCLUDE_vTaskDelete */
3665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3666:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TRACE_FACILITY == 1 )
3669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskGetInfo( TaskHandle_t xTask, TaskStatus_t *pxTaskStatus, BaseType_t xGetFreeStackSpace, 
3671:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3674:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* xTask is NULL then get the state of the calling task. */
3675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
3676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3677:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->xHandle = ( TaskHandle_t ) pxTCB;
3678:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->pcTaskName = ( const char * ) &( pxTCB->pcTaskName [ 0 ] );
3679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->uxCurrentPriority = pxTCB->uxPriority;
3680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->pxStackBase = pxTCB->pxStack;
3681:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->xTaskNumber = pxTCB->uxTCBNumber;
3682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_MUTEXES == 1 )
3684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3685:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->uxBasePriority = pxTCB->uxBasePriority;
3686:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else
3688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->uxBasePriority = 0;
3690:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configGENERATE_RUN_TIME_STATS == 1 )
3694:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3695:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->ulRunTimeCounter = pxTCB->ulRunTimeCounter;
3696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else
3698:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->ulRunTimeCounter = 0;
3700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3701:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3703:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Obtaining the task state is a little fiddly, so is only done if the
3704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		value of eState passed into this function is eInvalid - otherwise the
3705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		state is just set to whatever is passed in. */
3706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( eState != eInvalid )
3707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB == pxCurrentTCB )
3709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTaskStatus->eCurrentState = eRunning;
3711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3713:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTaskStatus->eCurrentState = eState;
3715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if ( INCLUDE_vTaskSuspend == 1 )
3717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
ARM GAS  /tmp/cc7Oi1VE.s 			page 72


3718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* If the task is in the suspended list then there is a
3719:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					chance it is actually just blocked indefinitely - so really
3720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					it should be reported as being in the Blocked state. */
3721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( eState == eSuspended )
3722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
3723:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						vTaskSuspendAll();
3724:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
3725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
3726:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
3727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								pxTaskStatus->eCurrentState = eBlocked;
3728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
3729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
3730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						( void ) xTaskResumeAll();
3731:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
3732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif /* INCLUDE_vTaskSuspend */
3734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3735:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3736:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->eCurrentState = eTaskGetState( pxTCB );
3739:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Obtaining the stack space takes some time, so the xGetFreeStackSpace
3742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		parameter is provided to allow it to be skipped. */
3743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xGetFreeStackSpace != pdFALSE )
3744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if ( portSTACK_GROWTH > 0 )
3746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3747:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTaskStatus->usStackHighWaterMark = prvTaskCheckFreeStackSpace( ( uint8_t * ) pxTCB->pxEndOfSt
3748:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3749:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#else
3750:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTaskStatus->usStackHighWaterMark = prvTaskCheckFreeStackSpace( ( uint8_t * ) pxTCB->pxStack )
3752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3753:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
3754:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3756:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3757:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->usStackHighWaterMark = 0;
3758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3764:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3765:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3766:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static UBaseType_t prvListTasksWithinSingleList( TaskStatus_t *pxTaskStatusArray, List_t *pxList, 
3767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configLIST_VOLATILE TCB_t *pxNextTCB, *pxFirstTCB;
3769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTask = 0;
3770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_t ) 0 )
3772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList ); /*lint !e9079 void * is used as this macro is
3774:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cc7Oi1VE.s 			page 73


3775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Populate an TaskStatus_t structure within the
3776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatusArray array for each task that is referenced from
3777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxList.  See the definition of TaskStatus_t in task.h for the
3778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			meaning of each TaskStatus_t structure member. */
3779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			do
3780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3781:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList ); /*lint !e9079 void * is used as this macro is
3782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vTaskGetInfo( ( TaskHandle_t ) pxNextTCB, &( pxTaskStatusArray[ uxTask ] ), pdTRUE, eState );
3783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxTask++;
3784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			} while( pxNextTCB != pxFirstTCB );
3785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3787:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3788:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxTask;
3792:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3795:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3797:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) || ( INCLUD
3798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static configSTACK_DEPTH_TYPE prvTaskCheckFreeStackSpace( const uint8_t * pucStackByte )
3800:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3801:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulCount = 0U;
3802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		while( *pucStackByte == ( uint8_t ) tskSTACK_FILL_BYTE )
3804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3805:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pucStackByte -= portSTACK_GROWTH;
3806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ulCount++;
3807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3809:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		ulCount /= ( uint32_t ) sizeof( StackType_t ); /*lint !e961 Casting is not redundant on smaller a
3810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return ( configSTACK_DEPTH_TYPE ) ulCount;
3812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3813:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) || ( 
3815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3816:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_uxTaskGetStackHighWaterMark2 == 1 )
3818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3819:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* uxTaskGetStackHighWaterMark() and uxTaskGetStackHighWaterMark2() are the
3820:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	same except for their return type.  Using configSTACK_DEPTH_TYPE allows the
3821:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	user to determine the return type.  It gets around the problem of the value
3822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	overflowing on 8-bit types without breaking backward compatibility for
3823:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	applications that expect an 8-bit return type. */
3824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configSTACK_DEPTH_TYPE uxTaskGetStackHighWaterMark2( TaskHandle_t xTask )
3825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t *pucEndOfStack;
3828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configSTACK_DEPTH_TYPE uxReturn;
3829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3830:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* uxTaskGetStackHighWaterMark() and uxTaskGetStackHighWaterMark2() are
3831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the same except for their return type.  Using configSTACK_DEPTH_TYPE
ARM GAS  /tmp/cc7Oi1VE.s 			page 74


3832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		allows the user to determine the return type.  It gets around the
3833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		problem of the value overflowing on 8-bit types without breaking
3834:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		backward compatibility for applications that expect an 8-bit return
3835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		type. */
3836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
3838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3839:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if portSTACK_GROWTH < 0
3840:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3841:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pucEndOfStack = ( uint8_t * ) pxTCB->pxStack;
3842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else
3844:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pucEndOfStack = ( uint8_t * ) pxTCB->pxEndOfStack;
3846:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxReturn = prvTaskCheckFreeStackSpace( pucEndOfStack );
3850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxReturn;
3852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3854:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_uxTaskGetStackHighWaterMark2 */
3855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_uxTaskGetStackHighWaterMark == 1 )
3858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3859:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskGetStackHighWaterMark( TaskHandle_t xTask )
3860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t *pucEndOfStack;
3863:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn;
3864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
3866:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3867:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if portSTACK_GROWTH < 0
3868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3869:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pucEndOfStack = ( uint8_t * ) pxTCB->pxStack;
3870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else
3872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3873:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pucEndOfStack = ( uint8_t * ) pxTCB->pxEndOfStack;
3874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3876:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3877:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxReturn = ( UBaseType_t ) prvTaskCheckFreeStackSpace( pucEndOfStack );
3878:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxReturn;
3880:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3881:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3882:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_uxTaskGetStackHighWaterMark */
3883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3884:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
3886:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static void prvDeleteTCB( TCB_t *pxTCB )
3888:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
ARM GAS  /tmp/cc7Oi1VE.s 			page 75


3889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This call is required specifically for the TriCore port.  It must be
3890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		above the vPortFree() calls.  The call is also used by ports/demos that
3891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		want to allocate and clean RAM statically. */
3892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAN_UP_TCB( pxTCB );
3893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Free up the memory allocated by the scheduler for the task.  It is up
3895:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		to the task to free any memory allocated at the application level.
3896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
3897:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		for additional information. */
3898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
3899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
3901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
3903:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 0 ) && ( p
3905:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The task can only have been allocated dynamically - free both
3907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the stack and TCB. */
3908:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vPortFree( pxTCB->pxStack );
3909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vPortFree( pxTCB );
3910:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consol
3912:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The task could have been allocated statically or dynamically, so
3914:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			check what was statically allocated before trying to free the
3915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			memory. */
3916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
3917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Both the stack and TCB were allocated dynamically, so both
3919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				must be freed. */
3920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vPortFree( pxTCB->pxStack );
3921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vPortFree( pxTCB );
3922:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
3924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3925:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Only the stack was statically allocated, so the TCB is the
3926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				only memory that must be freed. */
3927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vPortFree( pxTCB );
3928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3929:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3931:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Neither the stack nor the TCB were allocated dynamically, so
3932:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				nothing needs to be freed. */
3933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
3934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3935:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
3938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskDelete */
3941:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvResetNextTaskUnblockTime( void )
3944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 129              		.loc 1 3944 1 is_stmt 1 view -0
ARM GAS  /tmp/cc7Oi1VE.s 			page 76


 130              		.cfi_startproc
 131              		@ args = 0, pretend = 0, frame = 0
 132              		@ frame_needed = 0, uses_anonymous_args = 0
 133              		@ link register save eliminated.
3945:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxTCB;
 134              		.loc 1 3945 1 view .LVU32
3946:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3947:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 135              		.loc 1 3947 2 view .LVU33
 136              		.loc 1 3947 6 is_stmt 0 view .LVU34
 137 0000 084B     		ldr	r3, .L15
 138 0002 1B68     		ldr	r3, [r3]
 139 0004 1B68     		ldr	r3, [r3]
 140              		.loc 1 3947 4 view .LVU35
 141 0006 23B9     		cbnz	r3, .L13
3948:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3949:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
3950:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the maximum possible value so it is	extremely unlikely that the
3951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
3952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		there is an item in the delayed list. */
3953:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xNextTaskUnblockTime = portMAX_DELAY;
 142              		.loc 1 3953 3 is_stmt 1 view .LVU36
 143              		.loc 1 3953 24 is_stmt 0 view .LVU37
 144 0008 074B     		ldr	r3, .L15+4
 145 000a 4FF0FF32 		mov	r2, #-1
 146 000e 1A60     		str	r2, [r3]
 147 0010 7047     		bx	lr
 148              	.L13:
3954:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3955:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
3956:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3957:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The new current delayed list is not empty, get the value of
3958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the item at the head of the delayed list.  This is the time at
3959:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		which the task at the head of the delayed list should be removed
3960:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		from the Blocked state. */
3961:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as thi
 149              		.loc 1 3961 3 is_stmt 1 view .LVU38
 150              		.loc 1 3961 15 is_stmt 0 view .LVU39
 151 0012 044B     		ldr	r3, .L15
 152 0014 1B68     		ldr	r3, [r3]
 153 0016 DB68     		ldr	r3, [r3, #12]
 154              		.loc 1 3961 13 view .LVU40
 155 0018 DB68     		ldr	r3, [r3, #12]
 156              	.LVL9:
3962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 157              		.loc 1 3962 3 is_stmt 1 view .LVU41
 158              		.loc 1 3962 26 is_stmt 0 view .LVU42
 159 001a 5A68     		ldr	r2, [r3, #4]
 160              		.loc 1 3962 24 view .LVU43
 161 001c 024B     		ldr	r3, .L15+4
 162              	.LVL10:
 163              		.loc 1 3962 24 view .LVU44
 164 001e 1A60     		str	r2, [r3]
3963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 165              		.loc 1 3964 1 view .LVU45
 166 0020 7047     		bx	lr
ARM GAS  /tmp/cc7Oi1VE.s 			page 77


 167              	.L16:
 168 0022 00BF     		.align	2
 169              	.L15:
 170 0024 00000000 		.word	.LANCHOR2
 171 0028 00000000 		.word	.LANCHOR3
 172              		.cfi_endproc
 173              	.LFE41:
 175              		.section	.text.prvInitialiseNewTask,"ax",%progbits
 176              		.align	1
 177              		.syntax unified
 178              		.thumb
 179              		.thumb_func
 180              		.fpu fpv4-sp-d16
 182              	prvInitialiseNewTask:
 183              	.LVL11:
 184              	.LFB7:
 832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** StackType_t *pxTopOfStack;
 185              		.loc 1 832 1 is_stmt 1 view -0
 186              		.cfi_startproc
 187              		@ args = 16, pretend = 0, frame = 0
 188              		@ frame_needed = 0, uses_anonymous_args = 0
 832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** StackType_t *pxTopOfStack;
 189              		.loc 1 832 1 is_stmt 0 view .LVU47
 190 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 191              		.cfi_def_cfa_offset 32
 192              		.cfi_offset 4, -32
 193              		.cfi_offset 5, -28
 194              		.cfi_offset 6, -24
 195              		.cfi_offset 7, -20
 196              		.cfi_offset 8, -16
 197              		.cfi_offset 9, -12
 198              		.cfi_offset 10, -8
 199              		.cfi_offset 14, -4
 200 0004 0746     		mov	r7, r0
 201 0006 9846     		mov	r8, r3
 202 0008 089D     		ldr	r5, [sp, #32]
 203 000a DDF82490 		ldr	r9, [sp, #36]
 204 000e 0A9C     		ldr	r4, [sp, #40]
 833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t x;
 205              		.loc 1 833 1 is_stmt 1 view .LVU48
 834:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 206              		.loc 1 834 1 view .LVU49
 864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 207              		.loc 1 864 3 view .LVU50
 864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 208              		.loc 1 864 29 is_stmt 0 view .LVU51
 209 0010 266B     		ldr	r6, [r4, #48]
 864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 210              		.loc 1 864 38 view .LVU52
 211 0012 02F18042 		add	r2, r2, #1073741824
 212              	.LVL12:
 864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 213              		.loc 1 864 38 view .LVU53
 214 0016 013A     		subs	r2, r2, #1
 215              	.LVL13:
 864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 216              		.loc 1 864 16 view .LVU54
ARM GAS  /tmp/cc7Oi1VE.s 			page 78


 217 0018 06EB8206 		add	r6, r6, r2, lsl #2
 218              	.LVL14:
 865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 219              		.loc 1 865 3 is_stmt 1 view .LVU55
 865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 220              		.loc 1 865 81 is_stmt 0 view .LVU56
 221 001c 26F00706 		bic	r6, r6, #7
 222              	.LVL15:
 868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 223              		.loc 1 868 3 is_stmt 1 view .LVU57
 868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 224              		.loc 1 868 124 view .LVU58
 892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 225              		.loc 1 892 2 view .LVU59
 892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 226              		.loc 1 892 4 is_stmt 0 view .LVU60
 227 0020 0029     		cmp	r1, #0
 228 0022 3AD0     		beq	.L29
 229 0024 8E46     		mov	lr, r1
 894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 230              		.loc 1 894 10 view .LVU61
 231 0026 4FF0000C 		mov	ip, #0
 232              	.LVL16:
 233              	.L18:
 894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 234              		.loc 1 894 31 is_stmt 1 discriminator 1 view .LVU62
 894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 235              		.loc 1 894 3 is_stmt 0 discriminator 1 view .LVU63
 236 002a BCF10F0F 		cmp	ip, #15
 237 002e 0BD8     		bhi	.L20
 896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 238              		.loc 1 896 4 is_stmt 1 view .LVU64
 896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 239              		.loc 1 896 38 is_stmt 0 view .LVU65
 240 0030 1EF80C20 		ldrb	r2, [lr, ip]	@ zero_extendqisi2
 896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 241              		.loc 1 896 30 view .LVU66
 242 0034 04EB0C03 		add	r3, r4, ip
 243 0038 83F83420 		strb	r2, [r3, #52]
 901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 244              		.loc 1 901 4 is_stmt 1 view .LVU67
 901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 245              		.loc 1 901 14 is_stmt 0 view .LVU68
 246 003c 1EF80C30 		ldrb	r3, [lr, ip]	@ zero_extendqisi2
 901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 247              		.loc 1 901 6 view .LVU69
 248 0040 13B1     		cbz	r3, .L20
 907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 249              		.loc 1 907 29 is_stmt 1 discriminator 2 view .LVU70
 894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 250              		.loc 1 894 76 discriminator 2 view .LVU71
 894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 251              		.loc 1 894 77 is_stmt 0 discriminator 2 view .LVU72
 252 0042 0CF1010C 		add	ip, ip, #1
 253              	.LVL17:
 894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 254              		.loc 1 894 77 discriminator 2 view .LVU73
ARM GAS  /tmp/cc7Oi1VE.s 			page 79


 255 0046 F0E7     		b	.L18
 256              	.L20:
 913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 257              		.loc 1 913 3 is_stmt 1 view .LVU74
 913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 258              		.loc 1 913 55 is_stmt 0 view .LVU75
 259 0048 0023     		movs	r3, #0
 260 004a 84F84330 		strb	r3, [r4, #67]
 261              	.LVL18:
 262              	.L22:
 924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 263              		.loc 1 924 2 is_stmt 1 view .LVU76
 924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 264              		.loc 1 924 4 is_stmt 0 view .LVU77
 265 004e 062D     		cmp	r5, #6
 266 0050 00D9     		bls	.L23
 926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 267              		.loc 1 926 14 view .LVU78
 268 0052 0625     		movs	r5, #6
 269              	.L23:
 270              	.LVL19:
 930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 271              		.loc 1 930 27 is_stmt 1 view .LVU79
 933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 272              		.loc 1 933 2 view .LVU80
 933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 273              		.loc 1 933 23 is_stmt 0 view .LVU81
 274 0054 E562     		str	r5, [r4, #44]
 936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->uxMutexesHeld = 0;
 275              		.loc 1 936 3 is_stmt 1 view .LVU82
 936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->uxMutexesHeld = 0;
 276              		.loc 1 936 28 is_stmt 0 view .LVU83
 277 0056 6564     		str	r5, [r4, #68]
 937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 278              		.loc 1 937 3 is_stmt 1 view .LVU84
 937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 279              		.loc 1 937 27 is_stmt 0 view .LVU85
 280 0058 4FF0000A 		mov	r10, #0
 281 005c C4F848A0 		str	r10, [r4, #72]
 941:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 282              		.loc 1 941 2 is_stmt 1 view .LVU86
 283 0060 201D     		adds	r0, r4, #4
 284              	.LVL20:
 941:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 285              		.loc 1 941 2 is_stmt 0 view .LVU87
 286 0062 FFF7FEFF 		bl	vListInitialiseItem
 287              	.LVL21:
 942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 288              		.loc 1 942 2 is_stmt 1 view .LVU88
 289 0066 04F11800 		add	r0, r4, #24
 290 006a FFF7FEFF 		bl	vListInitialiseItem
 291              	.LVL22:
 946:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 292              		.loc 1 946 2 view .LVU89
 293 006e 2461     		str	r4, [r4, #16]
 949:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 294              		.loc 1 949 2 view .LVU90
ARM GAS  /tmp/cc7Oi1VE.s 			page 80


 295 0070 C5F10705 		rsb	r5, r5, #7
 296              	.LVL23:
 949:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 297              		.loc 1 949 2 is_stmt 0 view .LVU91
 298 0074 A561     		str	r5, [r4, #24]
 950:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 299              		.loc 1 950 2 is_stmt 1 view .LVU92
 300 0076 6462     		str	r4, [r4, #36]
 977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 301              		.loc 1 977 3 view .LVU93
 992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 302              		.loc 1 992 3 view .LVU94
 992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 303              		.loc 1 992 29 is_stmt 0 view .LVU95
 304 0078 C4F84CA0 		str	r10, [r4, #76]
 993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 305              		.loc 1 993 3 is_stmt 1 view .LVU96
 993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 306              		.loc 1 993 27 is_stmt 0 view .LVU97
 307 007c 84F850A0 		strb	r10, [r4, #80]
1058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 308              		.loc 1 1058 4 is_stmt 1 view .LVU98
1058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 309              		.loc 1 1058 29 is_stmt 0 view .LVU99
 310 0080 4246     		mov	r2, r8
 311 0082 3946     		mov	r1, r7
 312 0084 3046     		mov	r0, r6
 313 0086 FFF7FEFF 		bl	pxPortInitialiseStack
 314              	.LVL24:
1058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 315              		.loc 1 1058 27 view .LVU100
 316 008a 2060     		str	r0, [r4]
1064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 317              		.loc 1 1064 2 is_stmt 1 view .LVU101
1064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 318              		.loc 1 1064 4 is_stmt 0 view .LVU102
 319 008c B9F1000F 		cmp	r9, #0
 320 0090 01D0     		beq	.L17
1068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 321              		.loc 1 1068 3 is_stmt 1 view .LVU103
1068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 322              		.loc 1 1068 18 is_stmt 0 view .LVU104
 323 0092 C9F80040 		str	r4, [r9]
1072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 324              		.loc 1 1072 27 is_stmt 1 view .LVU105
 325              	.L17:
1074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 326              		.loc 1 1074 1 is_stmt 0 view .LVU106
 327 0096 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 328              	.LVL25:
 329              	.L29:
 919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 330              		.loc 1 919 3 is_stmt 1 view .LVU107
 919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 331              		.loc 1 919 29 is_stmt 0 view .LVU108
 332 009a 0023     		movs	r3, #0
 333              	.LVL26:
ARM GAS  /tmp/cc7Oi1VE.s 			page 81


 919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 334              		.loc 1 919 29 view .LVU109
 335 009c 84F83430 		strb	r3, [r4, #52]
 336 00a0 D5E7     		b	.L22
 337              		.cfi_endproc
 338              	.LFE7:
 340              		.section	.text.prvInitialiseTaskLists,"ax",%progbits
 341              		.align	1
 342              		.syntax unified
 343              		.thumb
 344              		.thumb_func
 345              		.fpu fpv4-sp-d16
 347              	prvInitialiseTaskLists:
 348              	.LFB38:
3608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t uxPriority;
 349              		.loc 1 3608 1 is_stmt 1 view -0
 350              		.cfi_startproc
 351              		@ args = 0, pretend = 0, frame = 0
 352              		@ frame_needed = 0, uses_anonymous_args = 0
 353 0000 38B5     		push	{r3, r4, r5, lr}
 354              		.cfi_def_cfa_offset 16
 355              		.cfi_offset 3, -16
 356              		.cfi_offset 4, -12
 357              		.cfi_offset 5, -8
 358              		.cfi_offset 14, -4
3609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 359              		.loc 1 3609 1 view .LVU111
3611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 360              		.loc 1 3611 2 view .LVU112
 361              	.LVL27:
3611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 362              		.loc 1 3611 18 is_stmt 0 view .LVU113
 363 0002 0024     		movs	r4, #0
3611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 364              		.loc 1 3611 2 view .LVU114
 365 0004 07E0     		b	.L31
 366              	.LVL28:
 367              	.L32:
3613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 368              		.loc 1 3613 3 is_stmt 1 discriminator 3 view .LVU115
 369 0006 04EB8402 		add	r2, r4, r4, lsl #2
 370 000a 9300     		lsls	r3, r2, #2
 371 000c 0E48     		ldr	r0, .L34
 372 000e 1844     		add	r0, r0, r3
 373 0010 FFF7FEFF 		bl	vListInitialise
 374              	.LVL29:
3611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 375              		.loc 1 3611 91 discriminator 3 view .LVU116
3611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 376              		.loc 1 3611 101 is_stmt 0 discriminator 3 view .LVU117
 377 0014 0134     		adds	r4, r4, #1
 378              	.LVL30:
 379              	.L31:
3611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 380              		.loc 1 3611 40 is_stmt 1 discriminator 1 view .LVU118
3611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 381              		.loc 1 3611 2 is_stmt 0 discriminator 1 view .LVU119
ARM GAS  /tmp/cc7Oi1VE.s 			page 82


 382 0016 062C     		cmp	r4, #6
 383 0018 F5D9     		bls	.L32
3616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xDelayedTaskList2 );
 384              		.loc 1 3616 2 is_stmt 1 view .LVU120
 385 001a 0C4D     		ldr	r5, .L34+4
 386 001c 2846     		mov	r0, r5
 387 001e FFF7FEFF 		bl	vListInitialise
 388              	.LVL31:
3617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xPendingReadyList );
 389              		.loc 1 3617 2 view .LVU121
 390 0022 0B4C     		ldr	r4, .L34+8
 391              	.LVL32:
3617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xPendingReadyList );
 392              		.loc 1 3617 2 is_stmt 0 view .LVU122
 393 0024 2046     		mov	r0, r4
 394 0026 FFF7FEFF 		bl	vListInitialise
 395              	.LVL33:
3618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 396              		.loc 1 3618 2 is_stmt 1 view .LVU123
 397 002a 0A48     		ldr	r0, .L34+12
 398 002c FFF7FEFF 		bl	vListInitialise
 399              	.LVL34:
3622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 400              		.loc 1 3622 3 view .LVU124
 401 0030 0948     		ldr	r0, .L34+16
 402 0032 FFF7FEFF 		bl	vListInitialise
 403              	.LVL35:
3628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 404              		.loc 1 3628 3 view .LVU125
 405 0036 0948     		ldr	r0, .L34+20
 406 0038 FFF7FEFF 		bl	vListInitialise
 407              	.LVL36:
3634:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 408              		.loc 1 3634 2 view .LVU126
3634:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 409              		.loc 1 3634 20 is_stmt 0 view .LVU127
 410 003c 084B     		ldr	r3, .L34+24
 411 003e 1D60     		str	r5, [r3]
3635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 412              		.loc 1 3635 2 is_stmt 1 view .LVU128
3635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 413              		.loc 1 3635 28 is_stmt 0 view .LVU129
 414 0040 084B     		ldr	r3, .L34+28
 415 0042 1C60     		str	r4, [r3]
3636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 416              		.loc 1 3636 1 view .LVU130
 417 0044 38BD     		pop	{r3, r4, r5, pc}
 418              	.L35:
 419 0046 00BF     		.align	2
 420              	.L34:
 421 0048 00000000 		.word	.LANCHOR4
 422 004c 00000000 		.word	.LANCHOR5
 423 0050 00000000 		.word	.LANCHOR6
 424 0054 00000000 		.word	.LANCHOR1
 425 0058 00000000 		.word	.LANCHOR7
 426 005c 00000000 		.word	.LANCHOR0
 427 0060 00000000 		.word	.LANCHOR2
ARM GAS  /tmp/cc7Oi1VE.s 			page 83


 428 0064 00000000 		.word	.LANCHOR8
 429              		.cfi_endproc
 430              	.LFE38:
 432              		.section	.text.prvAddNewTaskToReadyList,"ax",%progbits
 433              		.align	1
 434              		.syntax unified
 435              		.thumb
 436              		.thumb_func
 437              		.fpu fpv4-sp-d16
 439              	prvAddNewTaskToReadyList:
 440              	.LVL37:
 441              	.LFB8:
1078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Ensure interrupts don't access the task lists while the lists are being
 442              		.loc 1 1078 1 is_stmt 1 view -0
 443              		.cfi_startproc
 444              		@ args = 0, pretend = 0, frame = 0
 445              		@ frame_needed = 0, uses_anonymous_args = 0
1078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Ensure interrupts don't access the task lists while the lists are being
 446              		.loc 1 1078 1 is_stmt 0 view .LVU132
 447 0000 10B5     		push	{r4, lr}
 448              		.cfi_def_cfa_offset 8
 449              		.cfi_offset 4, -8
 450              		.cfi_offset 14, -4
 451 0002 0446     		mov	r4, r0
1081:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 452              		.loc 1 1081 2 is_stmt 1 view .LVU133
 453 0004 FFF7FEFF 		bl	vPortEnterCritical
 454              	.LVL38:
1083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB == NULL )
 455              		.loc 1 1083 3 view .LVU134
1083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB == NULL )
 456              		.loc 1 1083 25 is_stmt 0 view .LVU135
 457 0008 214A     		ldr	r2, .L43
 458 000a 1368     		ldr	r3, [r2]
 459 000c 0133     		adds	r3, r3, #1
 460 000e 1360     		str	r3, [r2]
1084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 461              		.loc 1 1084 3 is_stmt 1 view .LVU136
1084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 462              		.loc 1 1084 20 is_stmt 0 view .LVU137
 463 0010 204B     		ldr	r3, .L43+4
 464 0012 1B68     		ldr	r3, [r3]
1084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 465              		.loc 1 1084 5 view .LVU138
 466 0014 5BB1     		cbz	r3, .L41
1107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 467              		.loc 1 1107 4 is_stmt 1 view .LVU139
1107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 468              		.loc 1 1107 26 is_stmt 0 view .LVU140
 469 0016 204B     		ldr	r3, .L43+8
 470 0018 1B68     		ldr	r3, [r3]
1107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 471              		.loc 1 1107 6 view .LVU141
 472 001a 6BB9     		cbnz	r3, .L38
1109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 473              		.loc 1 1109 5 is_stmt 1 view .LVU142
1109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
ARM GAS  /tmp/cc7Oi1VE.s 			page 84


 474              		.loc 1 1109 21 is_stmt 0 view .LVU143
 475 001c 1D4B     		ldr	r3, .L43+4
 476 001e 1B68     		ldr	r3, [r3]
 477 0020 DA6A     		ldr	r2, [r3, #44]
1109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 478              		.loc 1 1109 45 view .LVU144
 479 0022 E36A     		ldr	r3, [r4, #44]
1109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 480              		.loc 1 1109 7 view .LVU145
 481 0024 9A42     		cmp	r2, r3
 482 0026 07D8     		bhi	.L38
1111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 483              		.loc 1 1111 6 is_stmt 1 view .LVU146
1111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 484              		.loc 1 1111 19 is_stmt 0 view .LVU147
 485 0028 1A4B     		ldr	r3, .L43+4
 486 002a 1C60     		str	r4, [r3]
 487 002c 04E0     		b	.L38
 488              	.L41:
1088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 489              		.loc 1 1088 4 is_stmt 1 view .LVU148
1088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 490              		.loc 1 1088 17 is_stmt 0 view .LVU149
 491 002e 194B     		ldr	r3, .L43+4
 492 0030 1C60     		str	r4, [r3]
1090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 493              		.loc 1 1090 4 is_stmt 1 view .LVU150
1090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 494              		.loc 1 1090 31 is_stmt 0 view .LVU151
 495 0032 1368     		ldr	r3, [r2]
1090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 496              		.loc 1 1090 6 view .LVU152
 497 0034 012B     		cmp	r3, #1
 498 0036 28D0     		beq	.L42
 499              	.L38:
1120:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 500              		.loc 1 1120 29 is_stmt 1 view .LVU153
1124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 501              		.loc 1 1124 3 view .LVU154
1124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 502              		.loc 1 1124 15 is_stmt 0 view .LVU155
 503 0038 184A     		ldr	r2, .L43+12
 504 003a 1368     		ldr	r3, [r2]
 505 003c 0133     		adds	r3, r3, #1
 506 003e 1360     		str	r3, [r2]
1132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 507              		.loc 1 1132 31 is_stmt 1 view .LVU156
1134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 508              		.loc 1 1134 3 view .LVU157
1134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 509              		.loc 1 1134 3 view .LVU158
 510 0040 E06A     		ldr	r0, [r4, #44]
 511 0042 0123     		movs	r3, #1
 512 0044 8340     		lsls	r3, r3, r0
 513 0046 164A     		ldr	r2, .L43+16
 514 0048 1168     		ldr	r1, [r2]
 515 004a 0B43     		orrs	r3, r3, r1
ARM GAS  /tmp/cc7Oi1VE.s 			page 85


 516 004c 1360     		str	r3, [r2]
1134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 517              		.loc 1 1134 3 view .LVU159
 518 004e 00EB8000 		add	r0, r0, r0, lsl #2
 519 0052 211D     		adds	r1, r4, #4
 520 0054 134B     		ldr	r3, .L43+20
 521 0056 03EB8000 		add	r0, r3, r0, lsl #2
 522 005a FFF7FEFF 		bl	vListInsertEnd
 523              	.LVL39:
1134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 524              		.loc 1 1134 36 view .LVU160
1136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 525              		.loc 1 1136 3 view .LVU161
1138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 526              		.loc 1 1138 2 view .LVU162
 527 005e FFF7FEFF 		bl	vPortExitCritical
 528              	.LVL40:
1140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 529              		.loc 1 1140 2 view .LVU163
1140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 530              		.loc 1 1140 24 is_stmt 0 view .LVU164
 531 0062 0D4B     		ldr	r3, .L43+8
 532 0064 1B68     		ldr	r3, [r3]
1140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 533              		.loc 1 1140 4 view .LVU165
 534 0066 7BB1     		cbz	r3, .L36
1144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 535              		.loc 1 1144 3 is_stmt 1 view .LVU166
1144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 536              		.loc 1 1144 19 is_stmt 0 view .LVU167
 537 0068 0A4B     		ldr	r3, .L43+4
 538 006a 1B68     		ldr	r3, [r3]
 539 006c DA6A     		ldr	r2, [r3, #44]
1144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 540              		.loc 1 1144 42 view .LVU168
 541 006e E36A     		ldr	r3, [r4, #44]
1144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 542              		.loc 1 1144 5 view .LVU169
 543 0070 9A42     		cmp	r2, r3
 544 0072 09D2     		bcs	.L36
1146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 545              		.loc 1 1146 4 is_stmt 1 view .LVU170
 546 0074 4FF0E023 		mov	r3, #-536813568
 547 0078 4FF08052 		mov	r2, #268435456
 548 007c C3F8042D 		str	r2, [r3, #3332]
1146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 549              		.loc 1 1146 4 view .LVU171
 550              		.syntax unified
 551              	@ 1146 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 552 0080 BFF34F8F 		dsb
 553              	@ 0 "" 2
1146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 554              		.loc 1 1146 4 view .LVU172
 555              	@ 1146 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 556 0084 BFF36F8F 		isb
 557              	@ 0 "" 2
1146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
ARM GAS  /tmp/cc7Oi1VE.s 			page 86


 558              		.loc 1 1146 35 view .LVU173
1155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 559              		.loc 1 1155 27 view .LVU174
 560              		.thumb
 561              		.syntax unified
 562              	.L36:
1157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 563              		.loc 1 1157 1 is_stmt 0 view .LVU175
 564 0088 10BD     		pop	{r4, pc}
 565              	.LVL41:
 566              	.L42:
1095:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 567              		.loc 1 1095 5 is_stmt 1 view .LVU176
 568 008a FFF7FEFF 		bl	prvInitialiseTaskLists
 569              	.LVL42:
 570 008e D3E7     		b	.L38
 571              	.L44:
 572              		.align	2
 573              	.L43:
 574 0090 00000000 		.word	.LANCHOR9
 575 0094 00000000 		.word	.LANCHOR10
 576 0098 00000000 		.word	.LANCHOR11
 577 009c 00000000 		.word	.LANCHOR12
 578 00a0 00000000 		.word	.LANCHOR13
 579 00a4 00000000 		.word	.LANCHOR4
 580              		.cfi_endproc
 581              	.LFE8:
 583              		.section	.text.prvDeleteTCB,"ax",%progbits
 584              		.align	1
 585              		.syntax unified
 586              		.thumb
 587              		.thumb_func
 588              		.fpu fpv4-sp-d16
 590              	prvDeleteTCB:
 591              	.LVL43:
 592              	.LFB40:
3888:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This call is required specifically for the TriCore port.  It must be
 593              		.loc 1 3888 2 view -0
 594              		.cfi_startproc
 595              		@ args = 0, pretend = 0, frame = 0
 596              		@ frame_needed = 0, uses_anonymous_args = 0
3888:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This call is required specifically for the TriCore port.  It must be
 597              		.loc 1 3888 2 is_stmt 0 view .LVU178
 598 0000 10B5     		push	{r4, lr}
 599              		.cfi_def_cfa_offset 8
 600              		.cfi_offset 4, -8
 601              		.cfi_offset 14, -4
 602 0002 0446     		mov	r4, r0
3892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 603              		.loc 1 3892 3 is_stmt 1 view .LVU179
3916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 604              		.loc 1 3916 4 view .LVU180
3916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 605              		.loc 1 3916 13 is_stmt 0 view .LVU181
 606 0004 90F85130 		ldrb	r3, [r0, #81]	@ zero_extendqisi2
3916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 607              		.loc 1 3916 6 view .LVU182
ARM GAS  /tmp/cc7Oi1VE.s 			page 87


 608 0008 63B1     		cbz	r3, .L51
3923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 609              		.loc 1 3923 9 is_stmt 1 view .LVU183
3923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 610              		.loc 1 3923 11 is_stmt 0 view .LVU184
 611 000a 012B     		cmp	r3, #1
 612 000c 11D0     		beq	.L52
3933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
 613              		.loc 1 3933 5 is_stmt 1 view .LVU185
 614 000e 022B     		cmp	r3, #2
 615 0010 0ED0     		beq	.L45
3933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
 616              		.loc 1 3933 5 view .LVU186
 617              	.LBB112:
 618              	.LBI112:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 619              		.loc 2 191 30 view .LVU187
 620              	.LBB113:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 621              		.loc 2 193 1 view .LVU188
 622              		.loc 2 195 2 view .LVU189
 623              		.syntax unified
 624              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 625 0012 4FF05003 			mov r3, #80												
 626 0016 83F31188 		msr basepri, r3											
 627 001a BFF36F8F 		isb														
 628 001e BFF34F8F 		dsb														
 629              	
 630              	@ 0 "" 2
 631              	.LVL44:
 632              		.thumb
 633              		.syntax unified
 634              	.L49:
 635              		.loc 2 195 2 is_stmt 0 view .LVU190
 636              	.LBE113:
 637              	.LBE112:
3933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
 638              		.loc 1 3933 5 is_stmt 1 discriminator 1 view .LVU191
3933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
 639              		.loc 1 3933 5 discriminator 1 view .LVU192
3933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
 640              		.loc 1 3933 5 discriminator 1 view .LVU193
 641 0022 FEE7     		b	.L49
 642              	.L51:
3920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vPortFree( pxTCB );
 643              		.loc 1 3920 5 view .LVU194
 644 0024 006B     		ldr	r0, [r0, #48]
 645              	.LVL45:
3920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vPortFree( pxTCB );
 646              		.loc 1 3920 5 is_stmt 0 view .LVU195
 647 0026 FFF7FEFF 		bl	vPortFree
 648              	.LVL46:
3921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 649              		.loc 1 3921 5 is_stmt 1 view .LVU196
 650 002a 2046     		mov	r0, r4
 651 002c FFF7FEFF 		bl	vPortFree
 652              	.LVL47:
ARM GAS  /tmp/cc7Oi1VE.s 			page 88


 653              	.L45:
3938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 654              		.loc 1 3938 2 is_stmt 0 view .LVU197
 655 0030 10BD     		pop	{r4, pc}
 656              	.LVL48:
 657              	.L52:
3927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 658              		.loc 1 3927 5 is_stmt 1 view .LVU198
 659 0032 FFF7FEFF 		bl	vPortFree
 660              	.LVL49:
3927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 661              		.loc 1 3927 5 is_stmt 0 view .LVU199
 662 0036 FBE7     		b	.L45
 663              		.cfi_endproc
 664              	.LFE40:
 666              		.section	.text.prvCheckTasksWaitingTermination,"ax",%progbits
 667              		.align	1
 668              		.syntax unified
 669              		.thumb
 670              		.thumb_func
 671              		.fpu fpv4-sp-d16
 673              	prvCheckTasksWaitingTermination:
 674              	.LFB39:
3640:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 675              		.loc 1 3640 1 is_stmt 1 view -0
 676              		.cfi_startproc
 677              		@ args = 0, pretend = 0, frame = 0
 678              		@ frame_needed = 0, uses_anonymous_args = 0
 679              	.LBB114:
3646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 680              		.loc 1 3646 3 view .LVU201
3650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 681              		.loc 1 3650 3 view .LVU202
3650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 682              		.loc 1 3650 8 view .LVU203
3650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 683              		.loc 1 3650 39 is_stmt 0 view .LVU204
 684 0000 0F4B     		ldr	r3, .L60
 685 0002 1B68     		ldr	r3, [r3]
3650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 686              		.loc 1 3650 8 view .LVU205
 687 0004 D3B1     		cbz	r3, .L59
 688              	.LBE114:
3640:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 689              		.loc 1 3640 1 view .LVU206
 690 0006 10B5     		push	{r4, lr}
 691              		.cfi_def_cfa_offset 8
 692              		.cfi_offset 4, -8
 693              		.cfi_offset 14, -4
 694              	.L55:
 695              	.LBB115:
3652:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 696              		.loc 1 3652 4 is_stmt 1 view .LVU207
 697 0008 FFF7FEFF 		bl	vPortEnterCritical
 698              	.LVL50:
3654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 699              		.loc 1 3654 5 view .LVU208
ARM GAS  /tmp/cc7Oi1VE.s 			page 89


3654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 700              		.loc 1 3654 13 is_stmt 0 view .LVU209
 701 000c 0D4B     		ldr	r3, .L60+4
 702 000e DB68     		ldr	r3, [r3, #12]
3654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 703              		.loc 1 3654 11 view .LVU210
 704 0010 DC68     		ldr	r4, [r3, #12]
 705              	.LVL51:
3655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				--uxCurrentNumberOfTasks;
 706              		.loc 1 3655 5 is_stmt 1 view .LVU211
3655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				--uxCurrentNumberOfTasks;
 707              		.loc 1 3655 14 is_stmt 0 view .LVU212
 708 0012 201D     		adds	r0, r4, #4
 709 0014 FFF7FEFF 		bl	uxListRemove
 710              	.LVL52:
3656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				--uxDeletedTasksWaitingCleanUp;
 711              		.loc 1 3656 5 is_stmt 1 view .LVU213
 712 0018 0B4A     		ldr	r2, .L60+8
 713 001a 1368     		ldr	r3, [r2]
 714 001c 013B     		subs	r3, r3, #1
 715 001e 1360     		str	r3, [r2]
3657:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 716              		.loc 1 3657 5 view .LVU214
 717 0020 074A     		ldr	r2, .L60
 718 0022 1368     		ldr	r3, [r2]
 719 0024 013B     		subs	r3, r3, #1
 720 0026 1360     		str	r3, [r2]
3659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 721              		.loc 1 3659 4 view .LVU215
 722 0028 FFF7FEFF 		bl	vPortExitCritical
 723              	.LVL53:
3661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 724              		.loc 1 3661 4 view .LVU216
 725 002c 2046     		mov	r0, r4
 726 002e FFF7FEFF 		bl	prvDeleteTCB
 727              	.LVL54:
3650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 728              		.loc 1 3650 8 view .LVU217
3650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 729              		.loc 1 3650 39 is_stmt 0 view .LVU218
 730 0032 034B     		ldr	r3, .L60
 731 0034 1B68     		ldr	r3, [r3]
3650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 732              		.loc 1 3650 8 view .LVU219
 733 0036 002B     		cmp	r3, #0
 734 0038 E6D1     		bne	.L55
 735              	.LBE115:
3665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 736              		.loc 1 3665 1 view .LVU220
 737 003a 10BD     		pop	{r4, pc}
 738              	.LVL55:
 739              	.L59:
 740              		.cfi_def_cfa_offset 0
 741              		.cfi_restore 4
 742              		.cfi_restore 14
3665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 743              		.loc 1 3665 1 view .LVU221
ARM GAS  /tmp/cc7Oi1VE.s 			page 90


 744 003c 7047     		bx	lr
 745              	.L61:
 746 003e 00BF     		.align	2
 747              	.L60:
 748 0040 00000000 		.word	.LANCHOR14
 749 0044 00000000 		.word	.LANCHOR7
 750 0048 00000000 		.word	.LANCHOR9
 751              		.cfi_endproc
 752              	.LFE39:
 754              		.section	.text.prvIdleTask,"ax",%progbits
 755              		.align	1
 756              		.syntax unified
 757              		.thumb
 758              		.thumb_func
 759              		.fpu fpv4-sp-d16
 761              	prvIdleTask:
 762              	.LFB37:
3393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Stop warnings. */
 763              		.loc 1 3393 1 is_stmt 1 view -0
 764              		.cfi_startproc
 765              		@ Volatile: function does not return.
 766              		@ args = 0, pretend = 0, frame = 0
 767              		@ frame_needed = 0, uses_anonymous_args = 0
 768              	.LVL56:
3393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Stop warnings. */
 769              		.loc 1 3393 1 is_stmt 0 view .LVU223
 770 0000 08B5     		push	{r3, lr}
 771              		.cfi_def_cfa_offset 8
 772              		.cfi_offset 3, -8
 773              		.cfi_offset 14, -4
 774              	.LVL57:
 775              	.L63:
3395:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 776              		.loc 1 3395 2 is_stmt 1 view .LVU224
3403:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 777              		.loc 1 3403 64 view .LVU225
3405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 778              		.loc 1 3405 2 view .LVU226
3409:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 779              		.loc 1 3409 3 view .LVU227
 780 0002 FFF7FEFF 		bl	prvCheckTasksWaitingTermination
 781              	.LVL58:
3432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 782              		.loc 1 3432 4 view .LVU228
3432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 783              		.loc 1 3432 8 is_stmt 0 view .LVU229
 784 0006 074B     		ldr	r3, .L66
 785 0008 1B68     		ldr	r3, [r3]
3432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 786              		.loc 1 3432 6 view .LVU230
 787 000a 012B     		cmp	r3, #1
 788 000c F9D9     		bls	.L63
3434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 789              		.loc 1 3434 5 is_stmt 1 view .LVU231
 790 000e 4FF0E023 		mov	r3, #-536813568
 791 0012 4FF08052 		mov	r2, #268435456
 792 0016 C3F8042D 		str	r2, [r3, #3332]
ARM GAS  /tmp/cc7Oi1VE.s 			page 91


3434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 793              		.loc 1 3434 5 view .LVU232
 794              		.syntax unified
 795              	@ 3434 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 796 001a BFF34F8F 		dsb
 797              	@ 0 "" 2
3434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 798              		.loc 1 3434 5 view .LVU233
 799              	@ 3434 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 800 001e BFF36F8F 		isb
 801              	@ 0 "" 2
3434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 802              		.loc 1 3434 16 view .LVU234
 803              		.thumb
 804              		.syntax unified
 805 0022 EEE7     		b	.L63
 806              	.L67:
 807              		.align	2
 808              	.L66:
 809 0024 00000000 		.word	.LANCHOR4
 810              		.cfi_endproc
 811              	.LFE37:
 813              		.section	.text.prvAddCurrentTaskToDelayedList,"ax",%progbits
 814              		.align	1
 815              		.syntax unified
 816              		.thumb
 817              		.thumb_func
 818              		.fpu fpv4-sp-d16
 820              	prvAddCurrentTaskToDelayedList:
 821              	.LVL59:
 822              	.LFB56:
3965:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3966:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( INCLUDE_xTaskGetCurrentTaskHandle == 1 ) || ( configUSE_MUTEXES == 1 ) )
3968:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xTaskGetCurrentTaskHandle( void )
3970:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xReturn;
3972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3973:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* A critical section is not required as this is not called from
3974:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		an interrupt and the current TCB will always be the same for any
3975:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		individual execution thread. */
3976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = pxCurrentTCB;
3977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
3979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3980:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3981:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskGetCurrentTaskHandle == 1 ) || ( configUSE_MUTEXES == 1 ) ) */
3982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3983:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
3985:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskGetSchedulerState( void )
3987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
3989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning == pdFALSE )
ARM GAS  /tmp/cc7Oi1VE.s 			page 92


3991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = taskSCHEDULER_NOT_STARTED;
3993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3994:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
3997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = taskSCHEDULER_RUNNING;
3999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4001:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = taskSCHEDULER_SUSPENDED;
4003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4005:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
4007:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) ) */
4010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4011:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
4013:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4014:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskPriorityInherit( TaskHandle_t const pxMutexHolder )
4015:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxMutexHolderTCB = pxMutexHolder;
4017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
4018:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If the mutex was given back by an interrupt while the queue was
4020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		locked then the mutex holder might now be NULL.  _RB_ Is this still
4021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		needed as interrupts can no longer use mutexes? */
4022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxMutexHolder != NULL )
4023:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4024:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the holder of the mutex has a priority below the priority of
4025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the task attempting to obtain the mutex then it will temporarily
4026:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			inherit the priority of the task attempting to obtain the mutex. */
4027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
4028:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4029:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Adjust the mutex holder state to account for its new
4030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				priority.  Only reset the event list item value if the value is
4031:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				not being used for anything else. */
4032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VA
4033:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4034:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIOR
4035:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4036:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4037:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4038:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4040:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If the task being modified is in the ready state it will need
4042:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				to be moved into a new list. */
4043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutex
4044:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
4046:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4047:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* It is known that the task is in its ready list so
ARM GAS  /tmp/cc7Oi1VE.s 			page 93


4048:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						there is no need to check again and the port level
4049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						reset macro can be called directly. */
4050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						portRESET_READY_PRIORITY( pxMutexHolderTCB->uxPriority, uxTopReadyPriority );
4051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4053:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4054:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
4055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Inherit the priority before being moved into the new list. */
4058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
4059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxMutexHolderTCB );
4060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4062:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4063:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Just inherit the priority. */
4064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
4065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				traceTASK_PRIORITY_INHERIT( pxMutexHolderTCB, pxCurrentTCB->uxPriority );
4068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Inheritance occurred. */
4070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
4071:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4073:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
4075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4076:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The base priority of the mutex holder is lower than the
4077:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					priority of the task attempting to take the mutex, but the
4078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					current priority of the mutex holder is not lower than the
4079:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					priority of the task attempting to take the mutex.
4080:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					Therefore the mutex holder must have already inherited a
4081:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					priority, but inheritance would have occurred if that had
4082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					not been the case. */
4083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xReturn = pdTRUE;
4084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4085:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4086:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4089:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4091:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4092:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4093:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4094:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4095:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
4097:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4098:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4099:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_MUTEXES */
4100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
4103:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskPriorityDisinherit( TaskHandle_t const pxMutexHolder )
ARM GAS  /tmp/cc7Oi1VE.s 			page 94


4105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = pxMutexHolder;
4107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
4108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxMutexHolder != NULL )
4110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* A task can only have an inherited priority if it holds the mutex.
4112:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			If the mutex is held by a task then it cannot be given from an
4113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			interrupt, and if a mutex is given by the holding task then it must
4114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			be the running state task. */
4115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB == pxCurrentTCB );
4116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
4117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
4118:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Has the holder of the mutex inherited the priority of another
4120:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			task? */
4121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
4122:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Only disinherit if no other mutexes are held. */
4124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
4125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* A task can only have an inherited priority if it holds
4127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					the mutex.  If the mutex is held by a task then it cannot be
4128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					given from an interrupt, and if a mutex is given by the
4129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					holding task then it must be the running state task.  Remove
4130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					the holding task from the ready/delayed list. */
4131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
4132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						taskRESET_READY_PRIORITY( pxTCB->uxPriority );
4134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
4138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Disinherit the priority before adding the task into the
4141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					new	ready list. */
4142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_PRIORITY_DISINHERIT( pxTCB, pxTCB->uxBasePriority );
4143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxPriority = pxTCB->uxBasePriority;
4144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4145:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Reset the event list item value.  It cannot be in use for
4146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					any other purpose if this task is running, and it must be
4147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					running to give back the mutex. */
4148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( T
4149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
4150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4151:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Return true to indicate that a context switch is required.
4152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					This is only actually required in the corner case whereby
4153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					multiple mutexes were held and the mutexes were given back
4154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					in an order different to that in which they were taken.
4155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					If a context switch did not occur when the first mutex was
4156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					returned, even if a task was waiting on it, then a context
4157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					switch should occur when the last mutex is returned whether
4158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					a task is waiting on it or not. */
4159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xReturn = pdTRUE;
4160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
ARM GAS  /tmp/cc7Oi1VE.s 			page 95


4162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4167:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4169:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4171:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4172:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4174:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
4177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4178:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_MUTEXES */
4180:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
4183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskPriorityDisinheritAfterTimeout( TaskHandle_t const pxMutexHolder, UBaseType_t uxHighestP
4185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = pxMutexHolder;
4187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxPriorityUsedOnEntry, uxPriorityToUse;
4188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const UBaseType_t uxOnlyOneMutexHeld = ( UBaseType_t ) 1;
4189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxMutexHolder != NULL )
4191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If pxMutexHolder is not NULL then the holder must hold at least
4193:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			one mutex. */
4194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
4195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Determine the priority to which the priority of the task that
4197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			holds the mutex should be set.  This will be the greater of the
4198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			holding task's base priority and the priority of the highest
4199:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			priority task that is waiting to obtain the mutex. */
4200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
4201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxPriorityToUse = uxHighestPriorityWaitingTask;
4203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4204:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxPriorityToUse = pxTCB->uxBasePriority;
4207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4209:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Does the priority need to change? */
4210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB->uxPriority != uxPriorityToUse )
4211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Only disinherit if no other mutexes are held.  This is a
4213:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				simplification in the priority inheritance implementation.  If
4214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the task that holds the mutex is also holding other mutexes then
4215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the other mutexes may have caused the priority inheritance. */
4216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
4217:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* If a task has timed out because it already holds the
ARM GAS  /tmp/cc7Oi1VE.s 			page 96


4219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mutex it was trying to obtain then it cannot of inherited
4220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					its own priority. */
4221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					configASSERT( pxTCB != pxCurrentTCB );
4222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Disinherit the priority, remembering the previous
4224:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					priority to facilitate determining the subject task's
4225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					state. */
4226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_PRIORITY_DISINHERIT( pxTCB, pxTCB->uxBasePriority );
4227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxPriorityUsedOnEntry = pxTCB->uxPriority;
4228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxPriority = uxPriorityToUse;
4229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4230:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Only reset the event list item value if the value is not
4231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					being used for anything else. */
4232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE
4233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( 
4235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4236:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
4239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* If the running task is not the task that holds the mutex
4242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					then the task that holds the mutex could be in either the
4243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					Ready, Blocked or Suspended states.  Only remove the task
4244:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					from its current state list if it is in the Ready state as
4245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					the task's priority is going to change and there is one
4246:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					Ready list per priority. */
4247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xState
4248:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
4250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							/* It is known that the task is in its ready list so
4252:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							there is no need to check again and the port level
4253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							reset macro can be called directly. */
4254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							portRESET_READY_PRIORITY( pxTCB->uxPriority, uxTopReadyPriority );
4255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						else
4257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							mtCOVERAGE_TEST_MARKER();
4259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						prvAddTaskToReadyList( pxTCB );
4262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
4266:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4272:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4273:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4274:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
ARM GAS  /tmp/cc7Oi1VE.s 			page 97


4276:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4277:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_MUTEXES */
4285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4286:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4287:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( portCRITICAL_NESTING_IN_TCB == 1 )
4288:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskEnterCritical( void )
4290:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4291:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portDISABLE_INTERRUPTS();
4292:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4293:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
4294:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4295:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxCurrentTCB->uxCriticalNesting )++;
4296:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4297:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* This is not the interrupt safe version of the enter critical
4298:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			function so	assert() if it is being called from an interrupt
4299:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			context.  Only API functions that end in "FromISR" can be used in an
4300:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			interrupt.  Only assert if the critical nesting count is 1 to
4301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			protect against recursive calls if the assert function also uses a
4302:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			critical section. */
4303:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->uxCriticalNesting == 1 )
4304:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4305:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portASSERT_IF_IN_ISR();
4306:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4308:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4310:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4312:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4313:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4314:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* portCRITICAL_NESTING_IN_TCB */
4315:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4317:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( portCRITICAL_NESTING_IN_TCB == 1 )
4318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4319:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskExitCritical( void )
4320:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
4322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->uxCriticalNesting > 0U )
4324:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4325:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( pxCurrentTCB->uxCriticalNesting )--;
4326:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxCurrentTCB->uxCriticalNesting == 0U )
4328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4329:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					portENABLE_INTERRUPTS();
4330:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4331:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4332:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
ARM GAS  /tmp/cc7Oi1VE.s 			page 98


4333:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4335:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4336:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4337:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4338:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4339:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4341:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4343:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4345:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4347:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* portCRITICAL_NESTING_IN_TCB */
4348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4350:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) )
4351:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4352:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static char *prvWriteNameToBuffer( char *pcBuffer, const char *pcTaskName )
4353:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	size_t x;
4355:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4356:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Start by copying the entire string. */
4357:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		strcpy( pcBuffer, pcTaskName );
4358:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4359:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Pad the end of the string with spaces to ensure columns line up when
4360:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		printed out. */
4361:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		for( x = strlen( pcBuffer ); x < ( size_t ) ( configMAX_TASK_NAME_LEN - 1 ); x++ )
4362:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4363:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pcBuffer[ x ] = ' ';
4364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Terminate. */
4367:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pcBuffer[ x ] = ( char ) 0x00;
4368:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4369:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Return the new end of string. */
4370:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return &( pcBuffer[ x ] );
4371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4372:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) */
4374:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4375:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4376:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) && ( config
4377:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4378:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskList( char * pcWriteBuffer )
4379:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskStatus_t *pxTaskStatusArray;
4381:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxArraySize, x;
4382:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	char cStatus;
4383:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4384:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/*
4385:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * PLEASE NOTE:
4386:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4387:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * This function is provided for convenience only, and is used by many
4388:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * of the demo applications.  Do not consider it to be part of the
4389:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * scheduler.
ARM GAS  /tmp/cc7Oi1VE.s 			page 99


4390:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4391:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * vTaskList() calls uxTaskGetSystemState(), then formats part of the
4392:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * uxTaskGetSystemState() output into a human readable table that
4393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * displays task names, states and stack usage.
4394:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4395:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * vTaskList() has a dependency on the sprintf() C library function that
4396:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * might bloat the code size, use a lot of stack, and provide different
4397:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * results on different platforms.  An alternative, tiny, third party,
4398:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * and limited functionality implementation of sprintf() is provided in
4399:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * many of the FreeRTOS/Demo sub-directories in a file called
4400:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * printf-stdarg.c (note printf-stdarg.c does not provide a full
4401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * snprintf() implementation!).
4402:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4403:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * It is recommended that production systems call uxTaskGetSystemState()
4404:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * directly to get access to raw stats data, rather than indirectly
4405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * through a call to vTaskList().
4406:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 */
4407:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4409:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Make sure the write buffer does not contain a string. */
4410:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		*pcWriteBuffer = ( char ) 0x00;
4411:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4412:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Take a snapshot of the number of tasks in case it changes while this
4413:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		function is executing. */
4414:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxArraySize = uxCurrentNumberOfTasks;
4415:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4416:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Allocate an array index for each task.  NOTE!  if
4417:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configSUPPORT_DYNAMIC_ALLOCATION is set to 0 then pvPortMalloc() will
4418:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		equate to NULL. */
4419:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatusArray = pvPortMalloc( uxCurrentNumberOfTasks * sizeof( TaskStatus_t ) ); /*lint !e907
4420:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxTaskStatusArray != NULL )
4422:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Generate the (binary) data. */
4424:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxArraySize = uxTaskGetSystemState( pxTaskStatusArray, uxArraySize, NULL );
4425:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4426:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Create a human readable table from the binary data. */
4427:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			for( x = 0; x < uxArraySize; x++ )
4428:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4429:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				switch( pxTaskStatusArray[ x ].eCurrentState )
4430:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4431:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eRunning:		cStatus = tskRUNNING_CHAR;
4432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4433:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eReady:		cStatus = tskREADY_CHAR;
4435:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4436:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4437:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eBlocked:		cStatus = tskBLOCKED_CHAR;
4438:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4439:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4440:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eSuspended:	cStatus = tskSUSPENDED_CHAR;
4441:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4442:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4443:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eDeleted:		cStatus = tskDELETED_CHAR;
4444:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4445:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4446:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eInvalid:		/* Fall through. */
ARM GAS  /tmp/cc7Oi1VE.s 			page 100


4447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					default:			/* Should not get here, but it is included
4448:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										to prevent static checking errors. */
4449:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										cStatus = ( char ) 0x00;
4450:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4452:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Write the task name to the string, padding with spaces so it
4454:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				can be printed in tabular form more easily. */
4455:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pcWriteBuffer = prvWriteNameToBuffer( pcWriteBuffer, pxTaskStatusArray[ x ].pcTaskName );
4456:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Write the rest of the string. */
4458:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				sprintf( pcWriteBuffer, "\t%c\t%u\t%u\t%u\r\n", cStatus, ( unsigned int ) pxTaskStatusArray[ x 
4459:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pcWriteBuffer += strlen( pcWriteBuffer ); /*lint !e9016 Pointer arithmetic ok on char pointers 
4460:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4461:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4462:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Free the array again.  NOTE!  If configSUPPORT_DYNAMIC_ALLOCATION
4463:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			is 0 then vPortFree() will be #defined to nothing. */
4464:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vPortFree( pxTaskStatusArray );
4465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4467:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4468:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4469:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4470:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4471:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4472:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) && ( 
4473:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
4474:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4475:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) && ( c
4476:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4477:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskGetRunTimeStats( char *pcWriteBuffer )
4478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskStatus_t *pxTaskStatusArray;
4480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxArraySize, x;
4481:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulTotalTime, ulStatsAsPercentage;
4482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4483:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( configUSE_TRACE_FACILITY != 1 )
4484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4485:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#error configUSE_TRACE_FACILITY must also be set to 1 in FreeRTOSConfig.h to use vTaskGetRunTime
4486:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
4488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4489:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/*
4490:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * PLEASE NOTE:
4491:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * This function is provided for convenience only, and is used by many
4493:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * of the demo applications.  Do not consider it to be part of the
4494:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * scheduler.
4495:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * vTaskGetRunTimeStats() calls uxTaskGetSystemState(), then formats part
4497:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * of the uxTaskGetSystemState() output into a human readable table that
4498:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * displays the amount of time each task has spent in the Running state
4499:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * in both absolute and percentage terms.
4500:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4501:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * vTaskGetRunTimeStats() has a dependency on the sprintf() C library
4502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * function that might bloat the code size, use a lot of stack, and
4503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * provide different results on different platforms.  An alternative,
ARM GAS  /tmp/cc7Oi1VE.s 			page 101


4504:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * tiny, third party, and limited functionality implementation of
4505:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * sprintf() is provided in many of the FreeRTOS/Demo sub-directories in
4506:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * a file called printf-stdarg.c (note printf-stdarg.c does not provide
4507:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * a full snprintf() implementation!).
4508:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4509:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * It is recommended that production systems call uxTaskGetSystemState()
4510:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * directly to get access to raw stats data, rather than indirectly
4511:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * through a call to vTaskGetRunTimeStats().
4512:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 */
4513:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4514:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Make sure the write buffer does not contain a string. */
4515:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		*pcWriteBuffer = ( char ) 0x00;
4516:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4517:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Take a snapshot of the number of tasks in case it changes while this
4518:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		function is executing. */
4519:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxArraySize = uxCurrentNumberOfTasks;
4520:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Allocate an array index for each task.  NOTE!  If
4522:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configSUPPORT_DYNAMIC_ALLOCATION is set to 0 then pvPortMalloc() will
4523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		equate to NULL. */
4524:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatusArray = pvPortMalloc( uxCurrentNumberOfTasks * sizeof( TaskStatus_t ) ); /*lint !e907
4525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4526:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxTaskStatusArray != NULL )
4527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4528:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Generate the (binary) data. */
4529:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxArraySize = uxTaskGetSystemState( pxTaskStatusArray, uxArraySize, &ulTotalTime );
4530:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4531:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* For percentage calculations. */
4532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ulTotalTime /= 100UL;
4533:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4534:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Avoid divide by zero errors. */
4535:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ulTotalTime > 0UL )
4536:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4537:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Create a human readable table from the binary data. */
4538:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				for( x = 0; x < uxArraySize; x++ )
4539:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4540:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* What percentage of the total run time has the task used?
4541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					This will always be rounded down to the nearest integer.
4542:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					ulTotalRunTimeDiv100 has already been divided by 100. */
4543:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					ulStatsAsPercentage = pxTaskStatusArray[ x ].ulRunTimeCounter / ulTotalTime;
4544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Write the task name to the string, padding with
4546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					spaces so it can be printed in tabular form more
4547:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					easily. */
4548:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pcWriteBuffer = prvWriteNameToBuffer( pcWriteBuffer, pxTaskStatusArray[ x ].pcTaskName );
4549:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( ulStatsAsPercentage > 0UL )
4551:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4552:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#ifdef portLU_PRINTF_SPECIFIER_REQUIRED
4553:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4554:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%lu\t\t%lu%%\r\n", pxTaskStatusArray[ x ].ulRunTimeCounter, ulSta
4555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4556:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#else
4557:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							/* sizeof( int ) == sizeof( long ) so a smaller
4559:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							printf() library can be used. */
4560:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%u\t\t%u%%\r\n", ( unsigned int ) pxTaskStatusArray[ x ].ulRunTim
ARM GAS  /tmp/cc7Oi1VE.s 			page 102


4561:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#endif
4563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4564:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4565:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* If the percentage is zero here then the task has
4567:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						consumed less than 1% of the total run time. */
4568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#ifdef portLU_PRINTF_SPECIFIER_REQUIRED
4569:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4570:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%lu\t\t<1%%\r\n", pxTaskStatusArray[ x ].ulRunTimeCounter );
4571:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4572:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#else
4573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							/* sizeof( int ) == sizeof( long ) so a smaller
4575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							printf() library can be used. */
4576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%u\t\t<1%%\r\n", ( unsigned int ) pxTaskStatusArray[ x ].ulRunTim
4577:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4578:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#endif
4579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4581:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pcWriteBuffer += strlen( pcWriteBuffer ); /*lint !e9016 Pointer arithmetic ok on char pointers
4582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4583:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4585:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4588:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Free the array again.  NOTE!  If configSUPPORT_DYNAMIC_ALLOCATION
4590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			is 0 then vPortFree() will be #defined to nothing. */
4591:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vPortFree( pxTaskStatusArray );
4592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4598:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) 
4600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4602:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t uxTaskResetEventItemValue( void )
4603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
4604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t uxReturn;
4605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uxReturn = listGET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ) );
4607:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Reset the event list item to its normal value - so it can be used with
4609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	queues and semaphores. */
4610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ), ( ( TickType_t ) configMAX_PRIORITIES 
4611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return uxReturn;
4613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
4614:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
4617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cc7Oi1VE.s 			page 103


4618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t pvTaskIncrementMutexHeldCount( void )
4619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xSemaphoreCreateMutex() is called before any tasks have been created
4621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		then pxCurrentTCB will be NULL. */
4622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB != NULL )
4623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxCurrentTCB->uxMutexesHeld )++;
4625:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4626:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return pxCurrentTCB;
4628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4629:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4630:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_MUTEXES */
4631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4633:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4634:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulTaskNotifyTake( BaseType_t xClearCountOnExit, TickType_t xTicksToWait )
4636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulReturn;
4638:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4639:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
4640:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Only block if the notification count is not already non-zero. */
4642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->ulNotifiedValue == 0UL )
4643:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4644:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Mark this task as waiting for a notification. */
4645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ucNotifyState = taskWAITING_NOTIFICATION;
4646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
4648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
4650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_NOTIFY_TAKE_BLOCK();
4651:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4652:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* All ports are written to allow a yield in a critical
4653:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					section (some will yield immediately, others wait until the
4654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					critical section exits) - but it is not something that
4655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					application code should ever do. */
4656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					portYIELD_WITHIN_API();
4657:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4658:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4660:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4662:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4663:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4666:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
4669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
4671:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_NOTIFY_TAKE();
4673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ulReturn = pxCurrentTCB->ulNotifiedValue;
4674:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cc7Oi1VE.s 			page 104


4675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ulReturn != 0UL )
4676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4677:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xClearCountOnExit != pdFALSE )
4678:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxCurrentTCB->ulNotifiedValue = 0UL;
4680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4681:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxCurrentTCB->ulNotifiedValue = ulReturn - ( uint32_t ) 1;
4684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4685:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4686:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4690:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxCurrentTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
4692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
4694:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4695:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return ulReturn;
4696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4698:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4701:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4703:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskNotifyWait( uint32_t ulBitsToClearOnEntry, uint32_t ulBitsToClearOnExit, uint32_t 
4704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
4706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
4708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Only block if a notification is not already pending. */
4710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->ucNotifyState != taskNOTIFICATION_RECEIVED )
4711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Clear bits in the task's notification value as bits may get
4713:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				set	by the notifying task or interrupt.  This can be used to
4714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				clear the value to zero. */
4715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ulNotifiedValue &= ~ulBitsToClearOnEntry;
4716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Mark this task as waiting for a notification. */
4718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ucNotifyState = taskWAITING_NOTIFICATION;
4719:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
4721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
4723:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_NOTIFY_WAIT_BLOCK();
4724:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* All ports are written to allow a yield in a critical
4726:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					section (some will yield immediately, others wait until the
4727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					critical section exits) - but it is not something that
4728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					application code should ever do. */
4729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					portYIELD_WITHIN_API();
4730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4731:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
ARM GAS  /tmp/cc7Oi1VE.s 			page 105


4732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4735:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4736:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4739:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
4742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
4744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_NOTIFY_WAIT();
4746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4747:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pulNotificationValue != NULL )
4748:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4749:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Output the current notification value, which may or may not
4750:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				have changed. */
4751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				*pulNotificationValue = pxCurrentTCB->ulNotifiedValue;
4752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4753:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4754:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If ucNotifyValue is set then either the task never entered the
4755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			blocked state (because a notification was already pending) or the
4756:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			task unblocked because of a notification.  Otherwise the task
4757:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			unblocked because of a timeout. */
4758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->ucNotifyState != taskNOTIFICATION_RECEIVED )
4759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* A notification was not received. */
4761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdFALSE;
4762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4764:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4765:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* A notification was already pending or a notification was
4766:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				received while the task was waiting. */
4767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ulNotifiedValue &= ~ulBitsToClearOnExit;
4768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
4769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxCurrentTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
4772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
4774:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
4776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4781:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskGenericNotify( TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction eAction
4784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
4786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
4787:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
4788:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cc7Oi1VE.s 			page 106


4789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToNotify );
4790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = xTaskToNotify;
4791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4792:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
4793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pulPreviousNotificationValue != NULL )
4795:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				*pulPreviousNotificationValue = pxTCB->ulNotifiedValue;
4797:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
4800:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4801:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
4802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			switch( eAction )
4804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4805:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetBits	:
4806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->ulNotifiedValue |= ulValue;
4807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4809:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eIncrement	:
4810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( pxTCB->ulNotifiedValue )++;
4811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4813:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetValueWithOverwrite	:
4814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->ulNotifiedValue = ulValue;
4815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4816:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetValueWithoutOverwrite :
4818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( ucOriginalNotifyState != taskNOTIFICATION_RECEIVED )
4819:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4820:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						pxTCB->ulNotifiedValue = ulValue;
4821:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4823:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* The value could not be written to the task. */
4825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xReturn = pdFAIL;
4826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eNoAction:
4830:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task is being notified without its notify value being
4831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					updated. */
4832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4834:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				default:
4835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Should not get here if all enums are handled.
4836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					Artificially force an assert by testing a value the
4837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					compiler can't assume is const. */
4838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					configASSERT( pxTCB->ulNotifiedValue == ~0UL );
4839:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4840:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4841:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_NOTIFY();
4844:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
ARM GAS  /tmp/cc7Oi1VE.s 			page 107


4846:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			notification then unblock it now. */
4847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
4848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
4850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
4851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The task should not have been on an event list. */
4853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
4854:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if( configUSE_TICKLESS_IDLE != 0 )
4856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* If a task is blocked waiting for a notification then
4858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xNextTaskUnblockTime might be set to the blocked task's time
4859:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					out time.  If the task is unblocked for a reason other than
4860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					a timeout xNextTaskUnblockTime is normally left unchanged,
4861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					because it will automatically get reset to a new value when
4862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					the tick count equals xNextTaskUnblockTime.  However if
4863:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					tickless idling is used it might be more important to enter
4864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					sleep mode at the earliest possible time - so reset
4865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xNextTaskUnblockTime here to ensure it is updated at the
4866:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					earliest possible time. */
4867:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvResetNextTaskUnblockTime();
4868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4869:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
4870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
4872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4873:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The notified task has a priority above the currently
4874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					executing task so a yield is required. */
4875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
4876:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4877:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4878:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4880:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4881:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4882:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4884:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4886:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
4888:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
4890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4895:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4897:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskGenericNotifyFromISR( TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction 
4898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
4900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
4901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
4902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
ARM GAS  /tmp/cc7Oi1VE.s 			page 108


4903:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToNotify );
4905:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
4907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
4908:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
4909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
4910:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
4911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
4912:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
4913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
4914:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		been assigned a priority above the configured maximum system call
4915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
4916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
4917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
4918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
4919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
4920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		provided on the following link:
4921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
4922:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
4923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = xTaskToNotify;
4925:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
4927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pulPreviousNotificationValue != NULL )
4929:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				*pulPreviousNotificationValue = pxTCB->ulNotifiedValue;
4931:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4932:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
4934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
4935:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			switch( eAction )
4937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetBits	:
4939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->ulNotifiedValue |= ulValue;
4940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4941:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eIncrement	:
4943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( pxTCB->ulNotifiedValue )++;
4944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4945:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4946:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetValueWithOverwrite	:
4947:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->ulNotifiedValue = ulValue;
4948:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4949:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4950:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetValueWithoutOverwrite :
4951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( ucOriginalNotifyState != taskNOTIFICATION_RECEIVED )
4952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4953:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						pxTCB->ulNotifiedValue = ulValue;
4954:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4955:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4956:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4957:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* The value could not be written to the task. */
4958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xReturn = pdFAIL;
4959:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
ARM GAS  /tmp/cc7Oi1VE.s 			page 109


4960:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4961:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eNoAction :
4963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task is being notified without its notify value being
4964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					updated. */
4965:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4966:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				default:
4968:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Should not get here if all enums are handled.
4969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					Artificially force an assert by testing a value the
4970:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					compiler can't assume is const. */
4971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					configASSERT( pxTCB->ulNotifiedValue == ~0UL );
4972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4973:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4974:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4975:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_NOTIFY_FROM_ISR();
4976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
4978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			notification then unblock it now. */
4979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
4980:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4981:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The task should not have been on an event list. */
4982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
4983:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
4985:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
4987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
4988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The delayed and ready lists cannot be accessed, so hold
4992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					this task pending until the scheduler is resumed. */
4993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
4994:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
4997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The notified task has a priority above the currently
4999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					executing task so a yield is required. */
5000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxHigherPriorityTaskWoken != NULL )
5001:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
5002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						*pxHigherPriorityTaskWoken = pdTRUE;
5003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
5004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5005:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Mark that a yield is pending in case the user is not
5006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					using the "xHigherPriorityTaskWoken" parameter to an ISR
5007:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					safe FreeRTOS function. */
5008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xYieldPending = pdTRUE;
5009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
5010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
5011:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
5012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
5013:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
5014:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
5015:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
5016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
ARM GAS  /tmp/cc7Oi1VE.s 			page 110


5017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5018:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
5019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
5020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
5022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
5023:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5024:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
5025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5026:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskNotifyGiveFromISR( TaskHandle_t xTaskToNotify, BaseType_t *pxHigherPriorityTaskWoken )
5027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
5028:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
5029:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
5030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
5031:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToNotify );
5033:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5034:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
5035:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
5036:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
5037:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
5038:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
5039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
5040:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
5041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
5042:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		been assigned a priority above the configured maximum system call
5043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
5044:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
5045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
5046:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
5047:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
5048:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		provided on the following link:
5049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
5050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
5051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = xTaskToNotify;
5053:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5054:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
5055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
5056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
5057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
5058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* 'Giving' is equivalent to incrementing a count in a counting
5060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			semaphore. */
5061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->ulNotifiedValue )++;
5062:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5063:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_NOTIFY_GIVE_FROM_ISR();
5064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
5066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			notification then unblock it now. */
5067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
5068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
5069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The task should not have been on an event list. */
5070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
5071:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
5073:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
ARM GAS  /tmp/cc7Oi1VE.s 			page 111


5074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
5075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
5076:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
5077:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
5078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
5079:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The delayed and ready lists cannot be accessed, so hold
5080:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					this task pending until the scheduler is resumed. */
5081:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
5082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
5083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
5085:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
5086:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The notified task has a priority above the currently
5087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					executing task so a yield is required. */
5088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxHigherPriorityTaskWoken != NULL )
5089:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
5090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						*pxHigherPriorityTaskWoken = pdTRUE;
5091:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
5092:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5093:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Mark that a yield is pending in case the user is not
5094:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					using the "xHigherPriorityTaskWoken" parameter in an ISR
5095:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					safe FreeRTOS function. */
5096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xYieldPending = pdTRUE;
5097:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
5098:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
5099:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
5100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
5101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
5102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
5103:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
5104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
5105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
5106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
5108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
5109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
5111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5112:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskNotifyStateClear( TaskHandle_t xTask )
5113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
5114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
5115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
5116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If null is passed in here then it is the calling task that is having
5118:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		its notification state cleared. */
5119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
5120:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
5122:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
5123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB->ucNotifyState == taskNOTIFICATION_RECEIVED )
5124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
5125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
5126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdPASS;
5127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
5128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
5129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
5130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdFAIL;
ARM GAS  /tmp/cc7Oi1VE.s 			page 112


5131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
5132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
5133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
5134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
5136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
5137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
5139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
5140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
5142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulTaskNotifyValueClear( TaskHandle_t xTask, uint32_t ulBitsToClear )
5144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
5145:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
5146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulReturn;
5147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If null is passed in here then it is the calling task that is having
5149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		its notification state cleared. */
5150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
5151:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
5153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
5154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Return the notification as it was before the bits were cleared,
5155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			then clear the bit mask. */
5156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ulReturn = pxCurrentTCB->ulNotifiedValue;
5157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ulNotifiedValue &= ~ulBitsToClear;
5158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
5159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
5160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return ulReturn;
5162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
5163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
5165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
5166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5167:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( INCLUDE_xTaskGetIdleTaskHandle == 1 ) )
5168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5169:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulTaskGetIdleRunTimeCounter( void )
5170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
5171:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xIdleTaskHandle->ulRunTimeCounter;
5172:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
5173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5174:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
5175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
5176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockInde
5178:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 823              		.loc 1 5178 1 view -0
 824              		.cfi_startproc
 825              		@ args = 0, pretend = 0, frame = 0
 826              		@ frame_needed = 0, uses_anonymous_args = 0
 827              		.loc 1 5178 1 is_stmt 0 view .LVU236
 828 0000 70B5     		push	{r4, r5, r6, lr}
 829              		.cfi_def_cfa_offset 16
 830              		.cfi_offset 4, -16
 831              		.cfi_offset 5, -12
ARM GAS  /tmp/cc7Oi1VE.s 			page 113


 832              		.cfi_offset 6, -8
 833              		.cfi_offset 14, -4
 834 0002 0446     		mov	r4, r0
 835 0004 0D46     		mov	r5, r1
5179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xTimeToWake;
 836              		.loc 1 5179 1 is_stmt 1 view .LVU237
5180:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** const TickType_t xConstTickCount = xTickCount;
 837              		.loc 1 5180 1 view .LVU238
 838              		.loc 1 5180 18 is_stmt 0 view .LVU239
 839 0006 1D4B     		ldr	r3, .L75
 840 0008 1E68     		ldr	r6, [r3]
 841              	.LVL60:
5181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
5183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
5184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* About to enter a delayed list, so ensure the ucDelayAborted flag is
5185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		reset to pdFALSE so it can be detected as having been set to pdTRUE
5186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		when the task leaves the Blocked state. */
5187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxCurrentTCB->ucDelayAborted = pdFALSE;
5188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
5189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
5190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Remove the task from the ready list before adding it to the blocked list
5192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	as the same list item is used for both lists. */
5193:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 842              		.loc 1 5193 2 is_stmt 1 view .LVU240
 843              		.loc 1 5193 35 is_stmt 0 view .LVU241
 844 000a 1D4B     		ldr	r3, .L75+4
 845 000c 1868     		ldr	r0, [r3]
 846              	.LVL61:
 847              		.loc 1 5193 6 view .LVU242
 848 000e 0430     		adds	r0, r0, #4
 849 0010 FFF7FEFF 		bl	uxListRemove
 850              	.LVL62:
 851              		.loc 1 5193 4 view .LVU243
 852 0014 50B9     		cbnz	r0, .L69
5194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
5195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The current task must be in a ready list, so there is no need to
5196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		check, and the port reset macro can be called directly. */
5197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portRESET_READY_PRIORITY( pxCurrentTCB->uxPriority, uxTopReadyPriority ); /*lint !e931 pxCurrentT
 853              		.loc 1 5197 3 is_stmt 1 view .LVU244
 854 0016 1A4B     		ldr	r3, .L75+4
 855 0018 1B68     		ldr	r3, [r3]
 856 001a DA6A     		ldr	r2, [r3, #44]
 857 001c 0123     		movs	r3, #1
 858 001e 03FA02F2 		lsl	r2, r3, r2
 859 0022 1849     		ldr	r1, .L75+8
 860 0024 0B68     		ldr	r3, [r1]
 861 0026 23EA0203 		bic	r3, r3, r2
 862 002a 0B60     		str	r3, [r1]
 863              	.L69:
5198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
5199:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
5200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
5201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
 864              		.loc 1 5201 27 view .LVU245
5202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
ARM GAS  /tmp/cc7Oi1VE.s 			page 114


5203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5204:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( INCLUDE_vTaskSuspend == 1 )
5205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
5206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 865              		.loc 1 5206 3 view .LVU246
 866              		.loc 1 5206 5 is_stmt 0 view .LVU247
 867 002c B4F1FF3F 		cmp	r4, #-1
 868 0030 0DD0     		beq	.L74
 869              	.L70:
5207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
5208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Add the task to the suspended task list instead of a delayed task
5209:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			list to ensure it is not woken by a timing event.  It will block
5210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			indefinitely. */
5211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
5212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
5213:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
5214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
5215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Calculate the time at which the task should be woken if the event
5216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			does not occur.  This may overflow but this doesn't matter, the
5217:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			kernel will manage it correctly. */
5218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTimeToWake = xConstTickCount + xTicksToWait;
 870              		.loc 1 5218 4 is_stmt 1 view .LVU248
 871              		.loc 1 5218 16 is_stmt 0 view .LVU249
 872 0032 3444     		add	r4, r4, r6
 873              	.LVL63:
5219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The list item will be inserted in wake time order. */
5221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 874              		.loc 1 5221 4 is_stmt 1 view .LVU250
 875 0034 124B     		ldr	r3, .L75+4
 876 0036 1B68     		ldr	r3, [r3]
 877 0038 5C60     		str	r4, [r3, #4]
5222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xTimeToWake < xConstTickCount )
 878              		.loc 1 5223 4 view .LVU251
 879              		.loc 1 5223 6 is_stmt 0 view .LVU252
 880 003a A642     		cmp	r6, r4
 881 003c 10D9     		bls	.L72
5224:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
5225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Wake time has overflowed.  Place this item in the overflow
5226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				list. */
5227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 882              		.loc 1 5227 5 is_stmt 1 view .LVU253
 883 003e 124B     		ldr	r3, .L75+12
 884 0040 1868     		ldr	r0, [r3]
 885              		.loc 1 5227 60 is_stmt 0 view .LVU254
 886 0042 0F4B     		ldr	r3, .L75+4
 887 0044 1968     		ldr	r1, [r3]
 888              		.loc 1 5227 5 view .LVU255
 889 0046 0431     		adds	r1, r1, #4
 890 0048 FFF7FEFF 		bl	vListInsert
 891              	.LVL64:
 892              	.L68:
5228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
5229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
5230:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
5231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The wake time has not overflowed, so the current block list
ARM GAS  /tmp/cc7Oi1VE.s 			page 115


5232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				is used. */
5233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
5234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If the task entering the blocked state was placed at the
5236:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				head of the list of blocked tasks then xNextTaskUnblockTime
5237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				needs to be updated too. */
5238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xTimeToWake < xNextTaskUnblockTime )
5239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
5240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xNextTaskUnblockTime = xTimeToWake;
5241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
5242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
5243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
5244:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
5245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
5246:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
5247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
5248:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
5249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#else /* INCLUDE_vTaskSuspend */
5250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
5251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Calculate the time at which the task should be woken if the event
5252:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		does not occur.  This may overflow but this doesn't matter, the kernel
5253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		will manage it correctly. */
5254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTimeToWake = xConstTickCount + xTicksToWait;
5255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The list item will be inserted in wake time order. */
5257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
5258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTimeToWake < xConstTickCount )
5260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
5261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Wake time has overflowed.  Place this item in the overflow list. */
5262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
5263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
5264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
5265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
5266:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The wake time has not overflowed, so the current block list is used. */
5267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
5268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the task entering the blocked state was placed at the head of the
5270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			list of blocked tasks then xNextTaskUnblockTime needs to be updated
5271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			too. */
5272:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xTimeToWake < xNextTaskUnblockTime )
5273:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
5274:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xNextTaskUnblockTime = xTimeToWake;
5275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
5276:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
5277:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
5278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
5279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
5280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
5281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
5283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) xCanBlockIndefinitely;
5284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
5285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* INCLUDE_vTaskSuspend */
5286:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 893              		.loc 1 5286 1 view .LVU256
 894 004c 70BD     		pop	{r4, r5, r6, pc}
ARM GAS  /tmp/cc7Oi1VE.s 			page 116


 895              	.LVL65:
 896              	.L74:
5206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 897              		.loc 1 5206 41 discriminator 1 view .LVU257
 898 004e 002D     		cmp	r5, #0
 899 0050 EFD0     		beq	.L70
5211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 900              		.loc 1 5211 4 is_stmt 1 view .LVU258
5211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 901              		.loc 1 5211 56 is_stmt 0 view .LVU259
 902 0052 0B4B     		ldr	r3, .L75+4
 903 0054 1968     		ldr	r1, [r3]
5211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 904              		.loc 1 5211 4 view .LVU260
 905 0056 0431     		adds	r1, r1, #4
 906 0058 0C48     		ldr	r0, .L75+16
 907 005a FFF7FEFF 		bl	vListInsertEnd
 908              	.LVL66:
 909 005e F5E7     		b	.L68
 910              	.LVL67:
 911              	.L72:
5233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 912              		.loc 1 5233 5 is_stmt 1 view .LVU261
 913 0060 0B4B     		ldr	r3, .L75+20
 914 0062 1868     		ldr	r0, [r3]
5233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 915              		.loc 1 5233 52 is_stmt 0 view .LVU262
 916 0064 064B     		ldr	r3, .L75+4
 917 0066 1968     		ldr	r1, [r3]
5233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 918              		.loc 1 5233 5 view .LVU263
 919 0068 0431     		adds	r1, r1, #4
 920 006a FFF7FEFF 		bl	vListInsert
 921              	.LVL68:
5238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 922              		.loc 1 5238 5 is_stmt 1 view .LVU264
5238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 923              		.loc 1 5238 21 is_stmt 0 view .LVU265
 924 006e 094B     		ldr	r3, .L75+24
 925 0070 1B68     		ldr	r3, [r3]
5238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 926              		.loc 1 5238 7 view .LVU266
 927 0072 A342     		cmp	r3, r4
 928 0074 EAD9     		bls	.L68
5240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 929              		.loc 1 5240 6 is_stmt 1 view .LVU267
5240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 930              		.loc 1 5240 27 is_stmt 0 view .LVU268
 931 0076 074B     		ldr	r3, .L75+24
 932 0078 1C60     		str	r4, [r3]
5244:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 933              		.loc 1 5244 30 is_stmt 1 view .LVU269
 934              		.loc 1 5286 1 is_stmt 0 view .LVU270
 935 007a E7E7     		b	.L68
 936              	.L76:
 937              		.align	2
 938              	.L75:
ARM GAS  /tmp/cc7Oi1VE.s 			page 117


 939 007c 00000000 		.word	.LANCHOR15
 940 0080 00000000 		.word	.LANCHOR10
 941 0084 00000000 		.word	.LANCHOR13
 942 0088 00000000 		.word	.LANCHOR8
 943 008c 00000000 		.word	.LANCHOR0
 944 0090 00000000 		.word	.LANCHOR2
 945 0094 00000000 		.word	.LANCHOR3
 946              		.cfi_endproc
 947              	.LFE56:
 949              		.section	.text.xTaskCreateStatic,"ax",%progbits
 950              		.align	1
 951              		.global	xTaskCreateStatic
 952              		.syntax unified
 953              		.thumb
 954              		.thumb_func
 955              		.fpu fpv4-sp-d16
 957              	xTaskCreateStatic:
 958              	.LVL69:
 959              	.LFB5:
 588:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 960              		.loc 1 588 2 is_stmt 1 view -0
 961              		.cfi_startproc
 962              		@ args = 12, pretend = 0, frame = 8
 963              		@ frame_needed = 0, uses_anonymous_args = 0
 588:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 964              		.loc 1 588 2 is_stmt 0 view .LVU272
 965 0000 30B5     		push	{r4, r5, lr}
 966              		.cfi_def_cfa_offset 12
 967              		.cfi_offset 4, -12
 968              		.cfi_offset 5, -8
 969              		.cfi_offset 14, -4
 970 0002 87B0     		sub	sp, sp, #28
 971              		.cfi_def_cfa_offset 40
 972 0004 0B9C     		ldr	r4, [sp, #44]
 589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xReturn;
 973              		.loc 1 589 2 is_stmt 1 view .LVU273
 590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 974              		.loc 1 590 2 view .LVU274
 592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 975              		.loc 1 592 3 view .LVU275
 976 0006 7CB1     		cbz	r4, .L85
 592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 977              		.loc 1 592 41 discriminator 2 view .LVU276
 593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 978              		.loc 1 593 3 discriminator 2 view .LVU277
 979 0008 0C9D     		ldr	r5, [sp, #48]
 980 000a B5B1     		cbz	r5, .L86
 593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 981              		.loc 1 593 39 discriminator 2 view .LVU278
 982              	.LBB116:
 600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( xSize == sizeof( TCB_t ) );
 983              		.loc 1 600 4 discriminator 2 view .LVU279
 600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( xSize == sizeof( TCB_t ) );
 984              		.loc 1 600 20 is_stmt 0 discriminator 2 view .LVU280
 985 000c 5425     		movs	r5, #84
 986 000e 0495     		str	r5, [sp, #16]
 601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
ARM GAS  /tmp/cc7Oi1VE.s 			page 118


 987              		.loc 1 601 4 is_stmt 1 discriminator 2 view .LVU281
 988 0010 049D     		ldr	r5, [sp, #16]
 989 0012 542D     		cmp	r5, #84
 990 0014 1AD0     		beq	.L82
 601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 991              		.loc 1 601 4 view .LVU282
 992              	.LBB117:
 993              	.LBI117:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 994              		.loc 2 191 30 view .LVU283
 995              	.LBB118:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 996              		.loc 2 193 1 view .LVU284
 997              		.loc 2 195 2 view .LVU285
 998              		.syntax unified
 999              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1000 0016 4FF05003 			mov r3, #80												
 1001 001a 83F31188 		msr basepri, r3											
 1002 001e BFF36F8F 		isb														
 1003 0022 BFF34F8F 		dsb														
 1004              	
 1005              	@ 0 "" 2
 1006              	.LVL70:
 1007              		.thumb
 1008              		.syntax unified
 1009              	.L83:
 1010              		.loc 2 195 2 is_stmt 0 view .LVU286
 1011              	.LBE118:
 1012              	.LBE117:
 601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 1013              		.loc 1 601 4 is_stmt 1 discriminator 3 view .LVU287
 601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 1014              		.loc 1 601 4 discriminator 3 view .LVU288
 601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 1015              		.loc 1 601 4 discriminator 3 view .LVU289
 1016 0026 FEE7     		b	.L83
 1017              	.LVL71:
 1018              	.L85:
 601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 1019              		.loc 1 601 4 is_stmt 0 discriminator 3 view .LVU290
 1020              	.LBE116:
 592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 1021              		.loc 1 592 3 is_stmt 1 view .LVU291
 1022              	.LBB119:
 1023              	.LBI119:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 1024              		.loc 2 191 30 view .LVU292
 1025              	.LBB120:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 1026              		.loc 2 193 1 view .LVU293
 1027              		.loc 2 195 2 view .LVU294
 1028              		.syntax unified
 1029              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1030 0028 4FF05003 			mov r3, #80												
 1031 002c 83F31188 		msr basepri, r3											
 1032 0030 BFF36F8F 		isb														
 1033 0034 BFF34F8F 		dsb														
ARM GAS  /tmp/cc7Oi1VE.s 			page 119


 1034              	
 1035              	@ 0 "" 2
 1036              	.LVL72:
 1037              		.thumb
 1038              		.syntax unified
 1039              	.L79:
 1040              		.loc 2 195 2 is_stmt 0 view .LVU295
 1041              	.LBE120:
 1042              	.LBE119:
 592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 1043              		.loc 1 592 3 is_stmt 1 discriminator 1 view .LVU296
 592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 1044              		.loc 1 592 3 discriminator 1 view .LVU297
 592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 1045              		.loc 1 592 3 discriminator 1 view .LVU298
 1046 0038 FEE7     		b	.L79
 1047              	.LVL73:
 1048              	.L86:
 593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1049              		.loc 1 593 3 view .LVU299
 1050              	.LBB121:
 1051              	.LBI121:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 1052              		.loc 2 191 30 view .LVU300
 1053              	.LBB122:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 1054              		.loc 2 193 1 view .LVU301
 1055              		.loc 2 195 2 view .LVU302
 1056              		.syntax unified
 1057              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1058 003a 4FF05003 			mov r3, #80												
 1059 003e 83F31188 		msr basepri, r3											
 1060 0042 BFF36F8F 		isb														
 1061 0046 BFF34F8F 		dsb														
 1062              	
 1063              	@ 0 "" 2
 1064              	.LVL74:
 1065              		.thumb
 1066              		.syntax unified
 1067              	.L81:
 1068              		.loc 2 195 2 is_stmt 0 view .LVU303
 1069              	.LBE122:
 1070              	.LBE121:
 593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1071              		.loc 1 593 3 is_stmt 1 discriminator 2 view .LVU304
 593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1072              		.loc 1 593 3 discriminator 2 view .LVU305
 593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1073              		.loc 1 593 3 discriminator 2 view .LVU306
 1074 004a FEE7     		b	.L81
 1075              	.LVL75:
 1076              	.L82:
 1077              	.LBB123:
 601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 1078              		.loc 1 601 44 discriminator 2 view .LVU307
 602:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1079              		.loc 1 602 4 discriminator 2 view .LVU308
ARM GAS  /tmp/cc7Oi1VE.s 			page 120


 1080 004c 049D     		ldr	r5, [sp, #16]
 1081              	.LBE123:
 607:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1082              		.loc 1 607 3 discriminator 2 view .LVU309
 611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 1083              		.loc 1 611 4 discriminator 2 view .LVU310
 1084              	.LVL76:
 612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1085              		.loc 1 612 4 discriminator 2 view .LVU311
 612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1086              		.loc 1 612 22 is_stmt 0 discriminator 2 view .LVU312
 1087 004e 0C9D     		ldr	r5, [sp, #48]
 1088 0050 2C63     		str	r4, [r5, #48]
 618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1089              		.loc 1 618 5 is_stmt 1 discriminator 2 view .LVU313
 618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1090              		.loc 1 618 37 is_stmt 0 discriminator 2 view .LVU314
 1091 0052 0224     		movs	r4, #2
 1092 0054 85F85140 		strb	r4, [r5, #81]
 622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 1093              		.loc 1 622 4 is_stmt 1 discriminator 2 view .LVU315
 1094 0058 0024     		movs	r4, #0
 1095 005a 0394     		str	r4, [sp, #12]
 1096 005c 0295     		str	r5, [sp, #8]
 1097 005e 05AC     		add	r4, sp, #20
 1098 0060 0194     		str	r4, [sp, #4]
 1099 0062 0A9C     		ldr	r4, [sp, #40]
 1100 0064 0094     		str	r4, [sp]
 1101 0066 FFF7FEFF 		bl	prvInitialiseNewTask
 1102              	.LVL77:
 623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1103              		.loc 1 623 4 discriminator 2 view .LVU316
 1104 006a 0C98     		ldr	r0, [sp, #48]
 1105 006c FFF7FEFF 		bl	prvAddNewTaskToReadyList
 1106              	.LVL78:
 630:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1107              		.loc 1 630 3 discriminator 2 view .LVU317
 631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1108              		.loc 1 631 2 is_stmt 0 discriminator 2 view .LVU318
 1109 0070 0598     		ldr	r0, [sp, #20]
 1110 0072 07B0     		add	sp, sp, #28
 1111              		.cfi_def_cfa_offset 12
 1112              		@ sp needed
 1113 0074 30BD     		pop	{r4, r5, pc}
 631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1114              		.loc 1 631 2 discriminator 2 view .LVU319
 1115              		.cfi_endproc
 1116              	.LFE5:
 1118              		.section	.text.xTaskCreate,"ax",%progbits
 1119              		.align	1
 1120              		.global	xTaskCreate
 1121              		.syntax unified
 1122              		.thumb
 1123              		.thumb_func
 1124              		.fpu fpv4-sp-d16
 1126              	xTaskCreate:
 1127              	.LVL79:
ARM GAS  /tmp/cc7Oi1VE.s 			page 121


 1128              	.LFB6:
 739:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 1129              		.loc 1 739 2 is_stmt 1 view -0
 1130              		.cfi_startproc
 1131              		@ args = 8, pretend = 0, frame = 0
 1132              		@ frame_needed = 0, uses_anonymous_args = 0
 739:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 1133              		.loc 1 739 2 is_stmt 0 view .LVU321
 1134 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 1135              		.cfi_def_cfa_offset 28
 1136              		.cfi_offset 4, -28
 1137              		.cfi_offset 5, -24
 1138              		.cfi_offset 6, -20
 1139              		.cfi_offset 7, -16
 1140              		.cfi_offset 8, -12
 1141              		.cfi_offset 9, -8
 1142              		.cfi_offset 14, -4
 1143 0004 85B0     		sub	sp, sp, #20
 1144              		.cfi_def_cfa_offset 48
 1145 0006 0746     		mov	r7, r0
 1146 0008 8846     		mov	r8, r1
 1147 000a 1446     		mov	r4, r2
 1148 000c 1E46     		mov	r6, r3
 740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 1149              		.loc 1 740 2 is_stmt 1 view .LVU322
 741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1150              		.loc 1 741 2 view .LVU323
 1151              	.LBB124:
 770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1152              		.loc 1 770 3 view .LVU324
 773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1153              		.loc 1 773 4 view .LVU325
 773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1154              		.loc 1 773 14 is_stmt 0 view .LVU326
 1155 000e 9000     		lsls	r0, r2, #2
 1156              	.LVL80:
 773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1157              		.loc 1 773 14 view .LVU327
 1158 0010 FFF7FEFF 		bl	pvPortMalloc
 1159              	.LVL81:
 775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1160              		.loc 1 775 4 is_stmt 1 view .LVU328
 775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1161              		.loc 1 775 6 is_stmt 0 view .LVU329
 1162 0014 00B3     		cbz	r0, .L91
 1163 0016 8146     		mov	r9, r0
 778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1164              		.loc 1 778 5 is_stmt 1 view .LVU330
 778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1165              		.loc 1 778 28 is_stmt 0 view .LVU331
 1166 0018 5420     		movs	r0, #84
 1167              	.LVL82:
 778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1168              		.loc 1 778 28 view .LVU332
 1169 001a FFF7FEFF 		bl	pvPortMalloc
 1170              	.LVL83:
 780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
ARM GAS  /tmp/cc7Oi1VE.s 			page 122


 1171              		.loc 1 780 5 is_stmt 1 view .LVU333
 780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1172              		.loc 1 780 7 is_stmt 0 view .LVU334
 1173 001e 0546     		mov	r5, r0
 1174 0020 B0B1     		cbz	r0, .L89
 783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1175              		.loc 1 783 6 is_stmt 1 view .LVU335
 783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1176              		.loc 1 783 24 is_stmt 0 view .LVU336
 1177 0022 C0F83090 		str	r9, [r0, #48]
 1178              	.LVL84:
 1179              	.L90:
 783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1180              		.loc 1 783 24 view .LVU337
 1181              	.LBE124:
 799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1182              		.loc 1 799 3 is_stmt 1 view .LVU338
 799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1183              		.loc 1 799 5 is_stmt 0 view .LVU339
 1184 0026 E5B1     		cbz	r5, .L92
 805:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1185              		.loc 1 805 5 is_stmt 1 view .LVU340
 805:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1186              		.loc 1 805 37 is_stmt 0 view .LVU341
 1187 0028 0023     		movs	r3, #0
 1188 002a 85F85130 		strb	r3, [r5, #81]
 809:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 1189              		.loc 1 809 4 is_stmt 1 view .LVU342
 1190 002e 0393     		str	r3, [sp, #12]
 1191 0030 0295     		str	r5, [sp, #8]
 1192 0032 0D9B     		ldr	r3, [sp, #52]
 1193 0034 0193     		str	r3, [sp, #4]
 1194 0036 0C9B     		ldr	r3, [sp, #48]
 1195 0038 0093     		str	r3, [sp]
 1196 003a 3346     		mov	r3, r6
 1197 003c 2246     		mov	r2, r4
 1198 003e 4146     		mov	r1, r8
 1199 0040 3846     		mov	r0, r7
 1200 0042 FFF7FEFF 		bl	prvInitialiseNewTask
 1201              	.LVL85:
 810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdPASS;
 1202              		.loc 1 810 4 view .LVU343
 1203 0046 2846     		mov	r0, r5
 1204 0048 FFF7FEFF 		bl	prvAddNewTaskToReadyList
 1205              	.LVL86:
 811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1206              		.loc 1 811 4 view .LVU344
 811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1207              		.loc 1 811 12 is_stmt 0 view .LVU345
 1208 004c 0120     		movs	r0, #1
 1209 004e 05E0     		b	.L87
 1210              	.LVL87:
 1211              	.L89:
 1212              	.LBB125:
 789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1213              		.loc 1 789 6 is_stmt 1 view .LVU346
 1214 0050 4846     		mov	r0, r9
ARM GAS  /tmp/cc7Oi1VE.s 			page 123


 1215              	.LVL88:
 789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1216              		.loc 1 789 6 is_stmt 0 view .LVU347
 1217 0052 FFF7FEFF 		bl	vPortFree
 1218              	.LVL89:
 1219 0056 E6E7     		b	.L90
 1220              	.LVL90:
 1221              	.L91:
 789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1222              		.loc 1 789 6 view .LVU348
 1223              	.LBE125:
 815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1224              		.loc 1 815 12 view .LVU349
 1225 0058 4FF0FF30 		mov	r0, #-1
 1226              	.LVL91:
 1227              	.L87:
 819:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1228              		.loc 1 819 2 view .LVU350
 1229 005c 05B0     		add	sp, sp, #20
 1230              		.cfi_remember_state
 1231              		.cfi_def_cfa_offset 28
 1232              		@ sp needed
 1233 005e BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1234              	.LVL92:
 1235              	.L92:
 1236              		.cfi_restore_state
 815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1237              		.loc 1 815 12 view .LVU351
 1238 0062 4FF0FF30 		mov	r0, #-1
 1239              	.LVL93:
 818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1240              		.loc 1 818 3 is_stmt 1 view .LVU352
 818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1241              		.loc 1 818 10 is_stmt 0 view .LVU353
 1242 0066 F9E7     		b	.L87
 1243              		.cfi_endproc
 1244              	.LFE6:
 1246              		.section	.text.vTaskDelete,"ax",%progbits
 1247              		.align	1
 1248              		.global	vTaskDelete
 1249              		.syntax unified
 1250              		.thumb
 1251              		.thumb_func
 1252              		.fpu fpv4-sp-d16
 1254              	vTaskDelete:
 1255              	.LVL94:
 1256              	.LFB9:
1163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 1257              		.loc 1 1163 2 is_stmt 1 view -0
 1258              		.cfi_startproc
 1259              		@ args = 0, pretend = 0, frame = 0
 1260              		@ frame_needed = 0, uses_anonymous_args = 0
1163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 1261              		.loc 1 1163 2 is_stmt 0 view .LVU355
 1262 0000 38B5     		push	{r3, r4, r5, lr}
 1263              		.cfi_def_cfa_offset 16
 1264              		.cfi_offset 3, -16
ARM GAS  /tmp/cc7Oi1VE.s 			page 124


 1265              		.cfi_offset 4, -12
 1266              		.cfi_offset 5, -8
 1267              		.cfi_offset 14, -4
 1268 0002 0446     		mov	r4, r0
1164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1269              		.loc 1 1164 2 is_stmt 1 view .LVU356
1166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1270              		.loc 1 1166 3 view .LVU357
 1271 0004 FFF7FEFF 		bl	vPortEnterCritical
 1272              	.LVL95:
1170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1273              		.loc 1 1170 4 view .LVU358
1170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1274              		.loc 1 1170 12 is_stmt 0 view .LVU359
 1275 0008 002C     		cmp	r4, #0
 1276 000a 33D0     		beq	.L104
 1277              	.LVL96:
 1278              	.L95:
1173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1279              		.loc 1 1173 4 is_stmt 1 discriminator 4 view .LVU360
1173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1280              		.loc 1 1173 8 is_stmt 0 discriminator 4 view .LVU361
 1281 000c 251D     		adds	r5, r4, #4
 1282 000e 2846     		mov	r0, r5
 1283 0010 FFF7FEFF 		bl	uxListRemove
 1284              	.LVL97:
1173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1285              		.loc 1 1173 6 discriminator 4 view .LVU362
 1286 0014 68B9     		cbnz	r0, .L96
1175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1287              		.loc 1 1175 5 is_stmt 1 view .LVU363
 1288 0016 E26A     		ldr	r2, [r4, #44]
 1289 0018 02EB8203 		add	r3, r2, r2, lsl #2
 1290 001c 9B00     		lsls	r3, r3, #2
 1291 001e 2749     		ldr	r1, .L107
 1292 0020 CB58     		ldr	r3, [r1, r3]
 1293 0022 33B9     		cbnz	r3, .L96
1175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1294              		.loc 1 1175 5 discriminator 1 view .LVU364
 1295 0024 0123     		movs	r3, #1
 1296 0026 9340     		lsls	r3, r3, r2
 1297 0028 2549     		ldr	r1, .L107+4
 1298 002a 0A68     		ldr	r2, [r1]
 1299 002c 22EA0302 		bic	r2, r2, r3
 1300 0030 0A60     		str	r2, [r1]
 1301              	.L96:
1179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1302              		.loc 1 1179 29 view .LVU365
1183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1303              		.loc 1 1183 4 view .LVU366
1183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1304              		.loc 1 1183 8 is_stmt 0 view .LVU367
 1305 0032 A36A     		ldr	r3, [r4, #40]
1183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1306              		.loc 1 1183 6 view .LVU368
 1307 0034 1BB1     		cbz	r3, .L97
1185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
ARM GAS  /tmp/cc7Oi1VE.s 			page 125


 1308              		.loc 1 1185 5 is_stmt 1 view .LVU369
1185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1309              		.loc 1 1185 14 is_stmt 0 view .LVU370
 1310 0036 04F11800 		add	r0, r4, #24
 1311 003a FFF7FEFF 		bl	uxListRemove
 1312              	.LVL98:
 1313              	.L97:
1189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1314              		.loc 1 1189 29 is_stmt 1 view .LVU371
1196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1315              		.loc 1 1196 4 view .LVU372
1196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1316              		.loc 1 1196 16 is_stmt 0 view .LVU373
 1317 003e 214A     		ldr	r2, .L107+8
 1318 0040 1368     		ldr	r3, [r2]
 1319 0042 0133     		adds	r3, r3, #1
 1320 0044 1360     		str	r3, [r2]
1198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1321              		.loc 1 1198 4 is_stmt 1 view .LVU374
1198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1322              		.loc 1 1198 14 is_stmt 0 view .LVU375
 1323 0046 204B     		ldr	r3, .L107+12
 1324 0048 1B68     		ldr	r3, [r3]
1198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1325              		.loc 1 1198 6 view .LVU376
 1326 004a A342     		cmp	r3, r4
 1327 004c 15D0     		beq	.L105
1225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				traceTASK_DELETE( pxTCB );
 1328              		.loc 1 1225 5 is_stmt 1 view .LVU377
 1329 004e 1F4A     		ldr	r2, .L107+16
 1330 0050 1368     		ldr	r3, [r2]
 1331 0052 013B     		subs	r3, r3, #1
 1332 0054 1360     		str	r3, [r2]
1226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvDeleteTCB( pxTCB );
 1333              		.loc 1 1226 30 view .LVU378
1227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1334              		.loc 1 1227 5 view .LVU379
 1335 0056 2046     		mov	r0, r4
 1336 0058 FFF7FEFF 		bl	prvDeleteTCB
 1337              	.LVL99:
1231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1338              		.loc 1 1231 5 view .LVU380
 1339 005c FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 1340              	.LVL100:
 1341              	.L99:
1234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1342              		.loc 1 1234 3 view .LVU381
 1343 0060 FFF7FEFF 		bl	vPortExitCritical
 1344              	.LVL101:
1238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1345              		.loc 1 1238 3 view .LVU382
1238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1346              		.loc 1 1238 25 is_stmt 0 view .LVU383
 1347 0064 1A4B     		ldr	r3, .L107+20
 1348 0066 1B68     		ldr	r3, [r3]
1238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1349              		.loc 1 1238 5 view .LVU384
ARM GAS  /tmp/cc7Oi1VE.s 			page 126


 1350 0068 1BB1     		cbz	r3, .L94
1240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1351              		.loc 1 1240 4 is_stmt 1 view .LVU385
1240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1352              		.loc 1 1240 14 is_stmt 0 view .LVU386
 1353 006a 174B     		ldr	r3, .L107+12
 1354 006c 1B68     		ldr	r3, [r3]
1240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1355              		.loc 1 1240 6 view .LVU387
 1356 006e A342     		cmp	r3, r4
 1357 0070 0CD0     		beq	.L106
 1358              	.L94:
1250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1359              		.loc 1 1250 2 view .LVU388
 1360 0072 38BD     		pop	{r3, r4, r5, pc}
 1361              	.LVL102:
 1362              	.L104:
1170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1363              		.loc 1 1170 12 discriminator 1 view .LVU389
 1364 0074 144B     		ldr	r3, .L107+12
 1365 0076 1C68     		ldr	r4, [r3]
 1366              	.LVL103:
1170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1367              		.loc 1 1170 12 discriminator 1 view .LVU390
 1368 0078 C8E7     		b	.L95
 1369              	.LVL104:
 1370              	.L105:
1205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1371              		.loc 1 1205 5 is_stmt 1 view .LVU391
 1372 007a 2946     		mov	r1, r5
 1373 007c 1548     		ldr	r0, .L107+24
 1374 007e FFF7FEFF 		bl	vListInsertEnd
 1375              	.LVL105:
1210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1376              		.loc 1 1210 5 view .LVU392
 1377 0082 154A     		ldr	r2, .L107+28
 1378 0084 1368     		ldr	r3, [r2]
 1379 0086 0133     		adds	r3, r3, #1
 1380 0088 1360     		str	r3, [r2]
1214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1381              		.loc 1 1214 30 view .LVU393
1221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1382              		.loc 1 1221 54 view .LVU394
 1383 008a E9E7     		b	.L99
 1384              	.L106:
1242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 1385              		.loc 1 1242 5 view .LVU395
 1386 008c 134B     		ldr	r3, .L107+32
 1387 008e 1B68     		ldr	r3, [r3]
 1388 0090 43B1     		cbz	r3, .L101
1242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 1389              		.loc 1 1242 5 view .LVU396
 1390              	.LBB126:
 1391              	.LBI126:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 1392              		.loc 2 191 30 view .LVU397
 1393              	.LBB127:
ARM GAS  /tmp/cc7Oi1VE.s 			page 127


 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 1394              		.loc 2 193 1 view .LVU398
 1395              		.loc 2 195 2 view .LVU399
 1396              		.syntax unified
 1397              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1398 0092 4FF05003 			mov r3, #80												
 1399 0096 83F31188 		msr basepri, r3											
 1400 009a BFF36F8F 		isb														
 1401 009e BFF34F8F 		dsb														
 1402              	
 1403              	@ 0 "" 2
 1404              	.LVL106:
 1405              		.thumb
 1406              		.syntax unified
 1407              	.L102:
 1408              		.loc 2 195 2 is_stmt 0 view .LVU400
 1409              	.LBE127:
 1410              	.LBE126:
1242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 1411              		.loc 1 1242 5 is_stmt 1 discriminator 1 view .LVU401
1242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 1412              		.loc 1 1242 5 discriminator 1 view .LVU402
1242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 1413              		.loc 1 1242 5 discriminator 1 view .LVU403
 1414 00a2 FEE7     		b	.L102
 1415              	.L101:
1242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 1416              		.loc 1 1242 46 discriminator 2 view .LVU404
1243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1417              		.loc 1 1243 5 discriminator 2 view .LVU405
 1418 00a4 4FF0E023 		mov	r3, #-536813568
 1419 00a8 4FF08052 		mov	r2, #268435456
 1420 00ac C3F8042D 		str	r2, [r3, #3332]
1243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1421              		.loc 1 1243 5 discriminator 2 view .LVU406
 1422              		.syntax unified
 1423              	@ 1243 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1424 00b0 BFF34F8F 		dsb
 1425              	@ 0 "" 2
1243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1426              		.loc 1 1243 5 discriminator 2 view .LVU407
 1427              	@ 1243 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1428 00b4 BFF36F8F 		isb
 1429              	@ 0 "" 2
1243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1430              		.loc 1 1243 27 discriminator 2 view .LVU408
1247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1431              		.loc 1 1247 29 discriminator 2 view .LVU409
1250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1432              		.loc 1 1250 2 is_stmt 0 discriminator 2 view .LVU410
 1433              		.thumb
 1434              		.syntax unified
 1435 00b8 DBE7     		b	.L94
 1436              	.L108:
 1437 00ba 00BF     		.align	2
 1438              	.L107:
 1439 00bc 00000000 		.word	.LANCHOR4
ARM GAS  /tmp/cc7Oi1VE.s 			page 128


 1440 00c0 00000000 		.word	.LANCHOR13
 1441 00c4 00000000 		.word	.LANCHOR12
 1442 00c8 00000000 		.word	.LANCHOR10
 1443 00cc 00000000 		.word	.LANCHOR9
 1444 00d0 00000000 		.word	.LANCHOR11
 1445 00d4 00000000 		.word	.LANCHOR7
 1446 00d8 00000000 		.word	.LANCHOR14
 1447 00dc 00000000 		.word	.LANCHOR16
 1448              		.cfi_endproc
 1449              	.LFE9:
 1451              		.section	.text.uxTaskPriorityGet,"ax",%progbits
 1452              		.align	1
 1453              		.global	uxTaskPriorityGet
 1454              		.syntax unified
 1455              		.thumb
 1456              		.thumb_func
 1457              		.fpu fpv4-sp-d16
 1459              	uxTaskPriorityGet:
 1460              	.LVL107:
 1461              	.LFB11:
1479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t const *pxTCB;
 1462              		.loc 1 1479 2 is_stmt 1 view -0
 1463              		.cfi_startproc
 1464              		@ args = 0, pretend = 0, frame = 0
 1465              		@ frame_needed = 0, uses_anonymous_args = 0
1479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t const *pxTCB;
 1466              		.loc 1 1479 2 is_stmt 0 view .LVU412
 1467 0000 10B5     		push	{r4, lr}
 1468              		.cfi_def_cfa_offset 8
 1469              		.cfi_offset 4, -8
 1470              		.cfi_offset 14, -4
 1471 0002 0446     		mov	r4, r0
1480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn;
 1472              		.loc 1 1480 2 is_stmt 1 view .LVU413
1481:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1473              		.loc 1 1481 2 view .LVU414
1483:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1474              		.loc 1 1483 3 view .LVU415
 1475 0004 FFF7FEFF 		bl	vPortEnterCritical
 1476              	.LVL108:
1487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1477              		.loc 1 1487 4 view .LVU416
1487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1478              		.loc 1 1487 12 is_stmt 0 view .LVU417
 1479 0008 24B1     		cbz	r4, .L112
 1480              	.LVL109:
 1481              	.L110:
1488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1482              		.loc 1 1488 4 is_stmt 1 discriminator 4 view .LVU418
1488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1483              		.loc 1 1488 13 is_stmt 0 discriminator 4 view .LVU419
 1484 000a E46A     		ldr	r4, [r4, #44]
 1485              	.LVL110:
1490:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1486              		.loc 1 1490 3 is_stmt 1 discriminator 4 view .LVU420
 1487 000c FFF7FEFF 		bl	vPortExitCritical
 1488              	.LVL111:
ARM GAS  /tmp/cc7Oi1VE.s 			page 129


1492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1489              		.loc 1 1492 3 discriminator 4 view .LVU421
1493:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1490              		.loc 1 1493 2 is_stmt 0 discriminator 4 view .LVU422
 1491 0010 2046     		mov	r0, r4
 1492 0012 10BD     		pop	{r4, pc}
 1493              	.LVL112:
 1494              	.L112:
1487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1495              		.loc 1 1487 12 discriminator 1 view .LVU423
 1496 0014 014B     		ldr	r3, .L113
 1497 0016 1C68     		ldr	r4, [r3]
 1498              	.LVL113:
1487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1499              		.loc 1 1487 12 discriminator 1 view .LVU424
 1500 0018 F7E7     		b	.L110
 1501              	.L114:
 1502 001a 00BF     		.align	2
 1503              	.L113:
 1504 001c 00000000 		.word	.LANCHOR10
 1505              		.cfi_endproc
 1506              	.LFE11:
 1508              		.section	.text.uxTaskPriorityGetFromISR,"ax",%progbits
 1509              		.align	1
 1510              		.global	uxTaskPriorityGetFromISR
 1511              		.syntax unified
 1512              		.thumb
 1513              		.thumb_func
 1514              		.fpu fpv4-sp-d16
 1516              	uxTaskPriorityGetFromISR:
 1517              	.LVL114:
 1518              	.LFB12:
1501:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t const *pxTCB;
 1519              		.loc 1 1501 2 is_stmt 1 view -0
 1520              		.cfi_startproc
 1521              		@ args = 0, pretend = 0, frame = 0
 1522              		@ frame_needed = 0, uses_anonymous_args = 0
1501:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t const *pxTCB;
 1523              		.loc 1 1501 2 is_stmt 0 view .LVU426
 1524 0000 10B5     		push	{r4, lr}
 1525              		.cfi_def_cfa_offset 8
 1526              		.cfi_offset 4, -8
 1527              		.cfi_offset 14, -4
 1528 0002 0446     		mov	r4, r0
1502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn, uxSavedInterruptState;
 1529              		.loc 1 1502 2 is_stmt 1 view .LVU427
1503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1530              		.loc 1 1503 2 view .LVU428
1521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1531              		.loc 1 1521 3 view .LVU429
 1532 0004 FFF7FEFF 		bl	vPortValidateInterruptPriority
 1533              	.LVL115:
1523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1534              		.loc 1 1523 3 view .LVU430
 1535              	.LBB128:
 1536              	.LBI128:
 196:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
ARM GAS  /tmp/cc7Oi1VE.s 			page 130


 197:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	mov %0, %1												\n"	\
 198:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	msr basepri, %0											\n" \
 199:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	isb														\n" \
 200:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	dsb														\n" \
 201:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		:"=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "memory"
 202:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	);
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 204:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 205:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 206:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 207:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
 1537              		.loc 2 207 34 view .LVU431
 1538              	.LBB129:
 208:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 209:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulOriginalBASEPRI, ulNewBASEPRI;
 1539              		.loc 2 209 1 view .LVU432
 210:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 211:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
 1540              		.loc 2 211 2 view .LVU433
 1541              		.syntax unified
 1542              	@ 211 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1543 0008 EFF31183 			mrs r3, basepri											
 1544 000c 4FF05002 		mov r2, #80												
 1545 0010 82F31188 		msr basepri, r2											
 1546 0014 BFF36F8F 		isb														
 1547 0018 BFF34F8F 		dsb														
 1548              	
 1549              	@ 0 "" 2
 1550              	.LVL116:
 212:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 213:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	mrs %0, basepri											\n" \
 214:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	mov %1, %2												\n"	\
 215:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	msr basepri, %1											\n" \
 216:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	isb														\n" \
 217:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	dsb														\n" \
 218:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		:"=r" (ulOriginalBASEPRI), "=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "
 219:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	);
 220:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 221:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* This return will not be reached but is necessary to prevent compiler
 222:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	warnings. */
 223:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	return ulOriginalBASEPRI;
 1551              		.loc 2 223 2 view .LVU434
 1552              		.loc 2 223 2 is_stmt 0 view .LVU435
 1553              		.thumb
 1554              		.syntax unified
 1555              	.LBE129:
 1556              	.LBE128:
1527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1557              		.loc 1 1527 4 is_stmt 1 view .LVU436
1527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1558              		.loc 1 1527 12 is_stmt 0 view .LVU437
 1559 001c 1CB1     		cbz	r4, .L118
 1560              	.LVL117:
 1561              	.L116:
1528:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1562              		.loc 1 1528 4 is_stmt 1 discriminator 4 view .LVU438
1528:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
ARM GAS  /tmp/cc7Oi1VE.s 			page 131


 1563              		.loc 1 1528 13 is_stmt 0 discriminator 4 view .LVU439
 1564 001e E06A     		ldr	r0, [r4, #44]
 1565              	.LVL118:
1530:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1566              		.loc 1 1530 3 is_stmt 1 discriminator 4 view .LVU440
 1567              	.LBB130:
 1568              	.LBI130:
 224:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 225:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 226:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 227:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
 1569              		.loc 2 227 30 discriminator 4 view .LVU441
 1570              	.LBB131:
 228:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 229:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
 1571              		.loc 2 229 2 discriminator 4 view .LVU442
 1572              		.syntax unified
 1573              	@ 229 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1574 0020 83F31188 			msr basepri, r3	
 1575              	@ 0 "" 2
 1576              	.LVL119:
 1577              		.loc 2 229 2 is_stmt 0 discriminator 4 view .LVU443
 1578              		.thumb
 1579              		.syntax unified
 1580              	.LBE131:
 1581              	.LBE130:
1532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1582              		.loc 1 1532 3 is_stmt 1 discriminator 4 view .LVU444
1533:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1583              		.loc 1 1533 2 is_stmt 0 discriminator 4 view .LVU445
 1584 0024 10BD     		pop	{r4, pc}
 1585              	.LVL120:
 1586              	.L118:
1527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1587              		.loc 1 1527 12 discriminator 1 view .LVU446
 1588 0026 014A     		ldr	r2, .L119
 1589 0028 1468     		ldr	r4, [r2]
 1590              	.LVL121:
1527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1591              		.loc 1 1527 12 discriminator 1 view .LVU447
 1592 002a F8E7     		b	.L116
 1593              	.L120:
 1594              		.align	2
 1595              	.L119:
 1596 002c 00000000 		.word	.LANCHOR10
 1597              		.cfi_endproc
 1598              	.LFE12:
 1600              		.section	.text.vTaskPrioritySet,"ax",%progbits
 1601              		.align	1
 1602              		.global	vTaskPrioritySet
 1603              		.syntax unified
 1604              		.thumb
 1605              		.thumb_func
 1606              		.fpu fpv4-sp-d16
 1608              	vTaskPrioritySet:
 1609              	.LVL122:
 1610              	.LFB13:
ARM GAS  /tmp/cc7Oi1VE.s 			page 132


1541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 1611              		.loc 1 1541 2 is_stmt 1 view -0
 1612              		.cfi_startproc
 1613              		@ args = 0, pretend = 0, frame = 0
 1614              		@ frame_needed = 0, uses_anonymous_args = 0
1541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 1615              		.loc 1 1541 2 is_stmt 0 view .LVU449
 1616 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1617              		.cfi_def_cfa_offset 24
 1618              		.cfi_offset 3, -24
 1619              		.cfi_offset 4, -20
 1620              		.cfi_offset 5, -16
 1621              		.cfi_offset 6, -12
 1622              		.cfi_offset 7, -8
 1623              		.cfi_offset 14, -4
1542:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxCurrentBasePriority, uxPriorityUsedOnEntry;
 1624              		.loc 1 1542 2 is_stmt 1 view .LVU450
1543:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
 1625              		.loc 1 1543 2 view .LVU451
1544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1626              		.loc 1 1544 2 view .LVU452
 1627              	.LVL123:
1546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1628              		.loc 1 1546 3 view .LVU453
 1629 0002 0629     		cmp	r1, #6
 1630 0004 08D9     		bls	.L122
1546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1631              		.loc 1 1546 3 view .LVU454
 1632              	.LBB132:
 1633              	.LBI132:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 1634              		.loc 2 191 30 view .LVU455
 1635              	.LBB133:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 1636              		.loc 2 193 1 view .LVU456
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1637              		.loc 2 195 2 view .LVU457
 1638              		.syntax unified
 1639              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1640 0006 4FF05003 			mov r3, #80												
 1641 000a 83F31188 		msr basepri, r3											
 1642 000e BFF36F8F 		isb														
 1643 0012 BFF34F8F 		dsb														
 1644              	
 1645              	@ 0 "" 2
 1646              	.LVL124:
 1647              		.thumb
 1648              		.syntax unified
 1649              	.L123:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1650              		.loc 2 195 2 is_stmt 0 view .LVU458
 1651              	.LBE133:
 1652              	.LBE132:
1546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1653              		.loc 1 1546 3 is_stmt 1 discriminator 1 view .LVU459
1546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1654              		.loc 1 1546 3 discriminator 1 view .LVU460
ARM GAS  /tmp/cc7Oi1VE.s 			page 133


1546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1655              		.loc 1 1546 3 discriminator 1 view .LVU461
 1656 0016 FEE7     		b	.L123
 1657              	.L122:
 1658 0018 0546     		mov	r5, r0
 1659 001a 0C46     		mov	r4, r1
1546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1660              		.loc 1 1546 59 view .LVU462
1549:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1661              		.loc 1 1549 3 view .LVU463
 1662              	.LVL125:
1555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1663              		.loc 1 1555 28 view .LVU464
1558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1664              		.loc 1 1558 3 view .LVU465
 1665 001c FFF7FEFF 		bl	vPortEnterCritical
 1666              	.LVL126:
1562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1667              		.loc 1 1562 4 view .LVU466
1562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1668              		.loc 1 1562 12 is_stmt 0 view .LVU467
 1669 0020 75B1     		cbz	r5, .L136
 1670              	.LVL127:
 1671              	.L124:
1564:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1672              		.loc 1 1564 50 is_stmt 1 discriminator 4 view .LVU468
1568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1673              		.loc 1 1568 5 discriminator 4 view .LVU469
1568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1674              		.loc 1 1568 27 is_stmt 0 discriminator 4 view .LVU470
 1675 0022 6B6C     		ldr	r3, [r5, #68]
 1676              	.LVL128:
1576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1677              		.loc 1 1576 4 is_stmt 1 discriminator 4 view .LVU471
1576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1678              		.loc 1 1576 6 is_stmt 0 discriminator 4 view .LVU472
 1679 0024 9C42     		cmp	r4, r3
 1680 0026 30D0     		beq	.L125
1580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1681              		.loc 1 1580 5 is_stmt 1 view .LVU473
1580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1682              		.loc 1 1580 7 is_stmt 0 view .LVU474
 1683 0028 0DD9     		bls	.L126
1582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1684              		.loc 1 1582 6 is_stmt 1 view .LVU475
1582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1685              		.loc 1 1582 16 is_stmt 0 view .LVU476
 1686 002a 2C4A     		ldr	r2, .L139
 1687 002c 1268     		ldr	r2, [r2]
1582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1688              		.loc 1 1582 8 view .LVU477
 1689 002e AA42     		cmp	r2, r5
 1690 0030 2ED0     		beq	.L132
1587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 1691              		.loc 1 1587 7 is_stmt 1 view .LVU478
1587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 1692              		.loc 1 1587 40 is_stmt 0 view .LVU479
ARM GAS  /tmp/cc7Oi1VE.s 			page 134


 1693 0032 2A4A     		ldr	r2, .L139
 1694 0034 1268     		ldr	r2, [r2]
 1695 0036 D26A     		ldr	r2, [r2, #44]
1587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 1696              		.loc 1 1587 9 view .LVU480
 1697 0038 A242     		cmp	r2, r4
 1698 003a 2BD9     		bls	.L133
1544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1699              		.loc 1 1544 13 view .LVU481
 1700 003c 0027     		movs	r7, #0
 1701 003e 07E0     		b	.L127
 1702              	.LVL129:
 1703              	.L136:
1562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1704              		.loc 1 1562 12 discriminator 1 view .LVU482
 1705 0040 264B     		ldr	r3, .L139
 1706 0042 1D68     		ldr	r5, [r3]
 1707              	.LVL130:
1562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1708              		.loc 1 1562 12 discriminator 1 view .LVU483
 1709 0044 EDE7     		b	.L124
 1710              	.LVL131:
 1711              	.L126:
1603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1712              		.loc 1 1603 10 is_stmt 1 view .LVU484
1603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1713              		.loc 1 1603 20 is_stmt 0 view .LVU485
 1714 0046 254A     		ldr	r2, .L139
 1715 0048 1268     		ldr	r2, [r2]
1603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1716              		.loc 1 1603 12 view .LVU486
 1717 004a AA42     		cmp	r2, r5
 1718 004c 24D0     		beq	.L134
1544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1719              		.loc 1 1544 13 view .LVU487
 1720 004e 0027     		movs	r7, #0
 1721              	.L127:
 1722              	.LVL132:
1615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1723              		.loc 1 1615 5 is_stmt 1 view .LVU488
1620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1724              		.loc 1 1620 5 view .LVU489
1620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1725              		.loc 1 1620 27 is_stmt 0 view .LVU490
 1726 0050 EE6A     		ldr	r6, [r5, #44]
 1727              	.LVL133:
1626:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1728              		.loc 1 1626 6 is_stmt 1 view .LVU491
1626:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1729              		.loc 1 1626 8 is_stmt 0 view .LVU492
 1730 0052 B342     		cmp	r3, r6
 1731 0054 22D0     		beq	.L137
 1732              	.L128:
1632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1733              		.loc 1 1632 31 is_stmt 1 view .LVU493
1636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1734              		.loc 1 1636 6 view .LVU494
ARM GAS  /tmp/cc7Oi1VE.s 			page 135


1636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1735              		.loc 1 1636 28 is_stmt 0 view .LVU495
 1736 0056 6C64     		str	r4, [r5, #68]
1646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1737              		.loc 1 1646 5 is_stmt 1 view .LVU496
1646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1738              		.loc 1 1646 11 is_stmt 0 view .LVU497
 1739 0058 AB69     		ldr	r3, [r5, #24]
 1740              	.LVL134:
1646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1741              		.loc 1 1646 7 view .LVU498
 1742 005a 002B     		cmp	r3, #0
 1743 005c 02DB     		blt	.L129
1648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1744              		.loc 1 1648 6 is_stmt 1 view .LVU499
 1745 005e C4F10704 		rsb	r4, r4, #7
 1746              	.LVL135:
1648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1747              		.loc 1 1648 6 is_stmt 0 view .LVU500
 1748 0062 AC61     		str	r4, [r5, #24]
 1749              	.L129:
1652:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1750              		.loc 1 1652 30 is_stmt 1 view .LVU501
1659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1751              		.loc 1 1659 5 view .LVU502
1659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1752              		.loc 1 1659 9 is_stmt 0 view .LVU503
 1753 0064 6969     		ldr	r1, [r5, #20]
 1754 0066 06EB8602 		add	r2, r6, r6, lsl #2
 1755 006a 1D4B     		ldr	r3, .L139+4
 1756 006c 03EB8203 		add	r3, r3, r2, lsl #2
1659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1757              		.loc 1 1659 7 view .LVU504
 1758 0070 9942     		cmp	r1, r3
 1759 0072 15D0     		beq	.L138
 1760              	.LVL136:
 1761              	.L130:
1679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1762              		.loc 1 1679 30 is_stmt 1 view .LVU505
1682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1763              		.loc 1 1682 5 view .LVU506
1682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1764              		.loc 1 1682 7 is_stmt 0 view .LVU507
 1765 0074 4FB1     		cbz	r7, .L125
1684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1766              		.loc 1 1684 6 is_stmt 1 view .LVU508
 1767 0076 4FF0E023 		mov	r3, #-536813568
 1768 007a 4FF08052 		mov	r2, #268435456
 1769 007e C3F8042D 		str	r2, [r3, #3332]
1684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1770              		.loc 1 1684 6 view .LVU509
 1771              		.syntax unified
 1772              	@ 1684 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1773 0082 BFF34F8F 		dsb
 1774              	@ 0 "" 2
1684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1775              		.loc 1 1684 6 view .LVU510
ARM GAS  /tmp/cc7Oi1VE.s 			page 136


 1776              	@ 1684 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1777 0086 BFF36F8F 		isb
 1778              	@ 0 "" 2
1684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1779              		.loc 1 1684 37 view .LVU511
 1780              	.LVL137:
 1781              		.thumb
 1782              		.syntax unified
 1783              	.L125:
1688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1784              		.loc 1 1688 30 view .LVU512
1693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1785              		.loc 1 1693 5 view .LVU513
1696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1786              		.loc 1 1696 3 view .LVU514
 1787 008a FFF7FEFF 		bl	vPortExitCritical
 1788              	.LVL138:
1697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1789              		.loc 1 1697 2 is_stmt 0 view .LVU515
 1790 008e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1791              	.LVL139:
 1792              	.L132:
1544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1793              		.loc 1 1544 13 view .LVU516
 1794 0090 0027     		movs	r7, #0
 1795 0092 DDE7     		b	.L127
 1796              	.L133:
1589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
 1797              		.loc 1 1589 23 view .LVU517
 1798 0094 0127     		movs	r7, #1
 1799 0096 DBE7     		b	.L127
 1800              	.L134:
1608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1801              		.loc 1 1608 21 view .LVU518
 1802 0098 0127     		movs	r7, #1
 1803 009a D9E7     		b	.L127
 1804              	.LVL140:
 1805              	.L137:
1628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1806              		.loc 1 1628 7 is_stmt 1 view .LVU519
1628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1807              		.loc 1 1628 25 is_stmt 0 view .LVU520
 1808 009c EC62     		str	r4, [r5, #44]
 1809 009e DAE7     		b	.L128
 1810              	.LVL141:
 1811              	.L138:
1664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1812              		.loc 1 1664 6 is_stmt 1 view .LVU521
1664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1813              		.loc 1 1664 10 is_stmt 0 view .LVU522
 1814 00a0 2C1D     		adds	r4, r5, #4
 1815 00a2 2046     		mov	r0, r4
 1816 00a4 FFF7FEFF 		bl	uxListRemove
 1817              	.LVL142:
1664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1818              		.loc 1 1664 8 view .LVU523
 1819 00a8 38B9     		cbnz	r0, .L131
ARM GAS  /tmp/cc7Oi1VE.s 			page 137


1669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1820              		.loc 1 1669 7 is_stmt 1 view .LVU524
 1821 00aa 0123     		movs	r3, #1
 1822 00ac 03FA06F6 		lsl	r6, r3, r6
 1823              	.LVL143:
1669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1824              		.loc 1 1669 7 is_stmt 0 view .LVU525
 1825 00b0 0C4A     		ldr	r2, .L139+8
 1826 00b2 1368     		ldr	r3, [r2]
 1827 00b4 23EA0603 		bic	r3, r3, r6
 1828 00b8 1360     		str	r3, [r2]
 1829              	.L131:
1673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1830              		.loc 1 1673 31 is_stmt 1 view .LVU526
1675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1831              		.loc 1 1675 6 view .LVU527
1675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1832              		.loc 1 1675 6 view .LVU528
 1833 00ba E86A     		ldr	r0, [r5, #44]
 1834 00bc 0123     		movs	r3, #1
 1835 00be 8340     		lsls	r3, r3, r0
 1836 00c0 084A     		ldr	r2, .L139+8
 1837 00c2 1168     		ldr	r1, [r2]
 1838 00c4 0B43     		orrs	r3, r3, r1
 1839 00c6 1360     		str	r3, [r2]
1675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1840              		.loc 1 1675 6 view .LVU529
 1841 00c8 00EB8000 		add	r0, r0, r0, lsl #2
 1842 00cc 2146     		mov	r1, r4
 1843 00ce 044B     		ldr	r3, .L139+4
 1844 00d0 03EB8000 		add	r0, r3, r0, lsl #2
 1845 00d4 FFF7FEFF 		bl	vListInsertEnd
 1846              	.LVL144:
1675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1847              		.loc 1 1675 36 view .LVU530
 1848 00d8 CCE7     		b	.L130
 1849              	.L140:
 1850 00da 00BF     		.align	2
 1851              	.L139:
 1852 00dc 00000000 		.word	.LANCHOR10
 1853 00e0 00000000 		.word	.LANCHOR4
 1854 00e4 00000000 		.word	.LANCHOR13
 1855              		.cfi_endproc
 1856              	.LFE13:
 1858              		.section	.text.vTaskResume,"ax",%progbits
 1859              		.align	1
 1860              		.global	vTaskResume
 1861              		.syntax unified
 1862              		.thumb
 1863              		.thumb_func
 1864              		.fpu fpv4-sp-d16
 1866              	vTaskResume:
 1867              	.LVL145:
 1868              	.LFB16:
1852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = xTaskToResume;
 1869              		.loc 1 1852 2 view -0
 1870              		.cfi_startproc
ARM GAS  /tmp/cc7Oi1VE.s 			page 138


 1871              		@ args = 0, pretend = 0, frame = 0
 1872              		@ frame_needed = 0, uses_anonymous_args = 0
1852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = xTaskToResume;
 1873              		.loc 1 1852 2 is_stmt 0 view .LVU532
 1874 0000 38B5     		push	{r3, r4, r5, lr}
 1875              		.cfi_def_cfa_offset 16
 1876              		.cfi_offset 3, -16
 1877              		.cfi_offset 4, -12
 1878              		.cfi_offset 5, -8
 1879              		.cfi_offset 14, -4
1853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1880              		.loc 1 1853 2 is_stmt 1 view .LVU533
 1881              	.LVL146:
1856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1882              		.loc 1 1856 3 view .LVU534
 1883 0002 68B1     		cbz	r0, .L147
 1884 0004 0446     		mov	r4, r0
1856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1885              		.loc 1 1856 32 discriminator 2 view .LVU535
1860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1886              		.loc 1 1860 3 discriminator 2 view .LVU536
1860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1887              		.loc 1 1860 15 is_stmt 0 discriminator 2 view .LVU537
 1888 0006 1D4B     		ldr	r3, .L149
 1889 0008 1B68     		ldr	r3, [r3]
1860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1890              		.loc 1 1860 5 discriminator 2 view .LVU538
 1891 000a 8342     		cmp	r3, r0
 1892 000c 07D0     		beq	.L141
1862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1893              		.loc 1 1862 4 is_stmt 1 view .LVU539
 1894 000e FFF7FEFF 		bl	vPortEnterCritical
 1895              	.LVL147:
1864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1896              		.loc 1 1864 5 view .LVU540
1864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1897              		.loc 1 1864 9 is_stmt 0 view .LVU541
 1898 0012 2046     		mov	r0, r4
 1899 0014 FFF7FEFF 		bl	prvTaskIsTaskSuspended
 1900              	.LVL148:
1864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1901              		.loc 1 1864 7 view .LVU542
 1902 0018 58B9     		cbnz	r0, .L148
 1903              	.L145:
1888:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1904              		.loc 1 1888 30 is_stmt 1 view .LVU543
1891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1905              		.loc 1 1891 4 view .LVU544
 1906 001a FFF7FEFF 		bl	vPortExitCritical
 1907              	.LVL149:
1895:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1908              		.loc 1 1895 28 view .LVU545
 1909              	.L141:
1897:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1910              		.loc 1 1897 2 is_stmt 0 view .LVU546
 1911 001e 38BD     		pop	{r3, r4, r5, pc}
 1912              	.LVL150:
ARM GAS  /tmp/cc7Oi1VE.s 			page 139


 1913              	.L147:
1856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1914              		.loc 1 1856 3 is_stmt 1 view .LVU547
 1915              	.LBB134:
 1916              	.LBI134:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 1917              		.loc 2 191 30 view .LVU548
 1918              	.LBB135:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 1919              		.loc 2 193 1 view .LVU549
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1920              		.loc 2 195 2 view .LVU550
 1921              		.syntax unified
 1922              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1923 0020 4FF05003 			mov r3, #80												
 1924 0024 83F31188 		msr basepri, r3											
 1925 0028 BFF36F8F 		isb														
 1926 002c BFF34F8F 		dsb														
 1927              	
 1928              	@ 0 "" 2
 1929              	.LVL151:
 1930              		.thumb
 1931              		.syntax unified
 1932              	.L143:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1933              		.loc 2 195 2 is_stmt 0 view .LVU551
 1934              	.LBE135:
 1935              	.LBE134:
1856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1936              		.loc 1 1856 3 is_stmt 1 discriminator 1 view .LVU552
1856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1937              		.loc 1 1856 3 discriminator 1 view .LVU553
1856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1938              		.loc 1 1856 3 discriminator 1 view .LVU554
 1939 0030 FEE7     		b	.L143
 1940              	.LVL152:
 1941              	.L148:
1866:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1942              		.loc 1 1866 31 view .LVU555
1870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 1943              		.loc 1 1870 6 view .LVU556
1870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 1944              		.loc 1 1870 15 is_stmt 0 view .LVU557
 1945 0032 251D     		adds	r5, r4, #4
 1946 0034 2846     		mov	r0, r5
 1947 0036 FFF7FEFF 		bl	uxListRemove
 1948              	.LVL153:
1871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1949              		.loc 1 1871 6 is_stmt 1 view .LVU558
1871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1950              		.loc 1 1871 6 view .LVU559
 1951 003a E06A     		ldr	r0, [r4, #44]
 1952 003c 0123     		movs	r3, #1
 1953 003e 8340     		lsls	r3, r3, r0
 1954 0040 0F4A     		ldr	r2, .L149+4
 1955 0042 1168     		ldr	r1, [r2]
 1956 0044 0B43     		orrs	r3, r3, r1
ARM GAS  /tmp/cc7Oi1VE.s 			page 140


 1957 0046 1360     		str	r3, [r2]
1871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1958              		.loc 1 1871 6 view .LVU560
 1959 0048 00EB8000 		add	r0, r0, r0, lsl #2
 1960 004c 2946     		mov	r1, r5
 1961 004e 0D4B     		ldr	r3, .L149+8
 1962 0050 03EB8000 		add	r0, r3, r0, lsl #2
 1963 0054 FFF7FEFF 		bl	vListInsertEnd
 1964              	.LVL154:
1871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1965              		.loc 1 1871 36 view .LVU561
1874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1966              		.loc 1 1874 6 view .LVU562
1874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1967              		.loc 1 1874 15 is_stmt 0 view .LVU563
 1968 0058 E26A     		ldr	r2, [r4, #44]
1874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1969              		.loc 1 1874 43 view .LVU564
 1970 005a 084B     		ldr	r3, .L149
 1971 005c 1B68     		ldr	r3, [r3]
 1972 005e DB6A     		ldr	r3, [r3, #44]
1874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1973              		.loc 1 1874 8 view .LVU565
 1974 0060 9A42     		cmp	r2, r3
 1975 0062 DAD3     		bcc	.L145
1879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1976              		.loc 1 1879 7 is_stmt 1 view .LVU566
 1977 0064 4FF0E023 		mov	r3, #-536813568
 1978 0068 4FF08052 		mov	r2, #268435456
 1979 006c C3F8042D 		str	r2, [r3, #3332]
1879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1980              		.loc 1 1879 7 view .LVU567
 1981              		.syntax unified
 1982              	@ 1879 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1983 0070 BFF34F8F 		dsb
 1984              	@ 0 "" 2
1879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1985              		.loc 1 1879 7 view .LVU568
 1986              	@ 1879 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1987 0074 BFF36F8F 		isb
 1988              	@ 0 "" 2
1879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1989              		.loc 1 1879 38 view .LVU569
 1990              		.thumb
 1991              		.syntax unified
 1992 0078 CFE7     		b	.L145
 1993              	.L150:
 1994 007a 00BF     		.align	2
 1995              	.L149:
 1996 007c 00000000 		.word	.LANCHOR10
 1997 0080 00000000 		.word	.LANCHOR13
 1998 0084 00000000 		.word	.LANCHOR4
 1999              		.cfi_endproc
 2000              	.LFE16:
 2002              		.section	.text.xTaskResumeFromISR,"ax",%progbits
 2003              		.align	1
 2004              		.global	xTaskResumeFromISR
ARM GAS  /tmp/cc7Oi1VE.s 			page 141


 2005              		.syntax unified
 2006              		.thumb
 2007              		.thumb_func
 2008              		.fpu fpv4-sp-d16
 2010              	xTaskResumeFromISR:
 2011              	.LVL155:
 2012              	.LFB17:
1906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
 2013              		.loc 1 1906 2 view -0
 2014              		.cfi_startproc
 2015              		@ args = 0, pretend = 0, frame = 0
 2016              		@ frame_needed = 0, uses_anonymous_args = 0
1906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
 2017              		.loc 1 1906 2 is_stmt 0 view .LVU571
 2018 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2019              		.cfi_def_cfa_offset 24
 2020              		.cfi_offset 3, -24
 2021              		.cfi_offset 4, -20
 2022              		.cfi_offset 5, -16
 2023              		.cfi_offset 6, -12
 2024              		.cfi_offset 7, -8
 2025              		.cfi_offset 14, -4
1907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = xTaskToResume;
 2026              		.loc 1 1907 2 is_stmt 1 view .LVU572
 2027              	.LVL156:
1908:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 2028              		.loc 1 1908 2 view .LVU573
1909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2029              		.loc 1 1909 2 view .LVU574
1911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2030              		.loc 1 1911 3 view .LVU575
 2031 0002 90B3     		cbz	r0, .L159
 2032 0004 0446     		mov	r4, r0
1911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2033              		.loc 1 1911 32 discriminator 2 view .LVU576
1929:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2034              		.loc 1 1929 3 discriminator 2 view .LVU577
 2035 0006 FFF7FEFF 		bl	vPortValidateInterruptPriority
 2036              	.LVL157:
1931:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2037              		.loc 1 1931 3 discriminator 2 view .LVU578
 2038              	.LBB136:
 2039              	.LBI136:
 207:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 2040              		.loc 2 207 34 discriminator 2 view .LVU579
 2041              	.LBB137:
 209:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2042              		.loc 2 209 1 discriminator 2 view .LVU580
 211:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2043              		.loc 2 211 2 discriminator 2 view .LVU581
 2044              		.syntax unified
 2045              	@ 211 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2046 000a EFF31186 			mrs r6, basepri											
 2047 000e 4FF05003 		mov r3, #80												
 2048 0012 83F31188 		msr basepri, r3											
 2049 0016 BFF36F8F 		isb														
 2050 001a BFF34F8F 		dsb														
ARM GAS  /tmp/cc7Oi1VE.s 			page 142


 2051              	
 2052              	@ 0 "" 2
 2053              	.LVL158:
 223:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 2054              		.loc 2 223 2 discriminator 2 view .LVU582
 223:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 2055              		.loc 2 223 2 is_stmt 0 discriminator 2 view .LVU583
 2056              		.thumb
 2057              		.syntax unified
 2058              	.LBE137:
 2059              	.LBE136:
1933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2060              		.loc 1 1933 4 is_stmt 1 discriminator 2 view .LVU584
1933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2061              		.loc 1 1933 8 is_stmt 0 discriminator 2 view .LVU585
 2062 001e 2046     		mov	r0, r4
 2063 0020 FFF7FEFF 		bl	prvTaskIsTaskSuspended
 2064              	.LVL159:
1933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2065              		.loc 1 1933 6 discriminator 2 view .LVU586
 2066 0024 0546     		mov	r5, r0
 2067 0026 E0B1     		cbz	r0, .L154
1935:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2068              		.loc 1 1935 39 is_stmt 1 view .LVU587
1938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2069              		.loc 1 1938 5 view .LVU588
1938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2070              		.loc 1 1938 30 is_stmt 0 view .LVU589
 2071 0028 194B     		ldr	r3, .L160
 2072 002a 1B68     		ldr	r3, [r3]
1938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2073              		.loc 1 1938 7 view .LVU590
 2074 002c 43BB     		cbnz	r3, .L155
1942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2075              		.loc 1 1942 6 is_stmt 1 view .LVU591
1942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2076              		.loc 1 1942 15 is_stmt 0 view .LVU592
 2077 002e E26A     		ldr	r2, [r4, #44]
1942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2078              		.loc 1 1942 43 view .LVU593
 2079 0030 184B     		ldr	r3, .L160+4
 2080 0032 1B68     		ldr	r3, [r3]
 2081 0034 DB6A     		ldr	r3, [r3, #44]
1942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2082              		.loc 1 1942 8 view .LVU594
 2083 0036 9A42     		cmp	r2, r3
 2084 0038 20D2     		bcs	.L157
1907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = xTaskToResume;
 2085              		.loc 1 1907 13 view .LVU595
 2086 003a 0025     		movs	r5, #0
 2087              	.L156:
 2088              	.LVL160:
1948:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2089              		.loc 1 1948 31 is_stmt 1 view .LVU596
1951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 2090              		.loc 1 1951 6 view .LVU597
1951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
ARM GAS  /tmp/cc7Oi1VE.s 			page 143


 2091              		.loc 1 1951 15 is_stmt 0 view .LVU598
 2092 003c 271D     		adds	r7, r4, #4
 2093 003e 3846     		mov	r0, r7
 2094 0040 FFF7FEFF 		bl	uxListRemove
 2095              	.LVL161:
1952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2096              		.loc 1 1952 6 is_stmt 1 view .LVU599
1952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2097              		.loc 1 1952 6 view .LVU600
 2098 0044 E06A     		ldr	r0, [r4, #44]
 2099 0046 0123     		movs	r3, #1
 2100 0048 8340     		lsls	r3, r3, r0
 2101 004a 134A     		ldr	r2, .L160+8
 2102 004c 1168     		ldr	r1, [r2]
 2103 004e 0B43     		orrs	r3, r3, r1
 2104 0050 1360     		str	r3, [r2]
1952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2105              		.loc 1 1952 6 view .LVU601
 2106 0052 00EB8000 		add	r0, r0, r0, lsl #2
 2107 0056 3946     		mov	r1, r7
 2108 0058 104B     		ldr	r3, .L160+12
 2109 005a 03EB8000 		add	r0, r3, r0, lsl #2
 2110 005e FFF7FEFF 		bl	vListInsertEnd
 2111              	.LVL162:
1952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2112              		.loc 1 1952 36 view .LVU602
 2113              	.L154:
1964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 2114              		.loc 1 1964 29 view .LVU603
1967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2115              		.loc 1 1967 3 view .LVU604
 2116              	.LBB138:
 2117              	.LBI138:
 227:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 2118              		.loc 2 227 30 view .LVU605
 2119              	.LBB139:
 2120              		.loc 2 229 2 view .LVU606
 2121              		.syntax unified
 2122              	@ 229 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2123 0062 86F31188 			msr basepri, r6	
 2124              	@ 0 "" 2
 2125              	.LVL163:
 2126              		.loc 2 229 2 is_stmt 0 view .LVU607
 2127              		.thumb
 2128              		.syntax unified
 2129              	.LBE139:
 2130              	.LBE138:
1969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 2131              		.loc 1 1969 3 is_stmt 1 view .LVU608
1970:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2132              		.loc 1 1970 2 is_stmt 0 view .LVU609
 2133 0066 2846     		mov	r0, r5
 2134 0068 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2135              	.LVL164:
 2136              	.L159:
1911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2137              		.loc 1 1911 3 is_stmt 1 view .LVU610
ARM GAS  /tmp/cc7Oi1VE.s 			page 144


 2138              	.LBB140:
 2139              	.LBI140:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 2140              		.loc 2 191 30 view .LVU611
 2141              	.LBB141:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2142              		.loc 2 193 1 view .LVU612
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2143              		.loc 2 195 2 view .LVU613
 2144              		.syntax unified
 2145              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2146 006a 4FF05003 			mov r3, #80												
 2147 006e 83F31188 		msr basepri, r3											
 2148 0072 BFF36F8F 		isb														
 2149 0076 BFF34F8F 		dsb														
 2150              	
 2151              	@ 0 "" 2
 2152              	.LVL165:
 2153              		.thumb
 2154              		.syntax unified
 2155              	.L153:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2156              		.loc 2 195 2 is_stmt 0 view .LVU614
 2157              	.LBE141:
 2158              	.LBE140:
1911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2159              		.loc 1 1911 3 is_stmt 1 discriminator 1 view .LVU615
1911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2160              		.loc 1 1911 3 discriminator 1 view .LVU616
1911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2161              		.loc 1 1911 3 discriminator 1 view .LVU617
 2162 007a FEE7     		b	.L153
 2163              	.LVL166:
 2164              	.L157:
1944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2165              		.loc 1 1944 22 is_stmt 0 view .LVU618
 2166 007c 0125     		movs	r5, #1
 2167 007e DDE7     		b	.L156
 2168              	.L155:
1959:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2169              		.loc 1 1959 6 is_stmt 1 view .LVU619
 2170 0080 04F11801 		add	r1, r4, #24
 2171 0084 0648     		ldr	r0, .L160+16
 2172 0086 FFF7FEFF 		bl	vListInsertEnd
 2173              	.LVL167:
1907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = xTaskToResume;
 2174              		.loc 1 1907 13 is_stmt 0 view .LVU620
 2175 008a 0025     		movs	r5, #0
 2176 008c E9E7     		b	.L154
 2177              	.L161:
 2178 008e 00BF     		.align	2
 2179              	.L160:
 2180 0090 00000000 		.word	.LANCHOR16
 2181 0094 00000000 		.word	.LANCHOR10
 2182 0098 00000000 		.word	.LANCHOR13
 2183 009c 00000000 		.word	.LANCHOR4
 2184 00a0 00000000 		.word	.LANCHOR1
ARM GAS  /tmp/cc7Oi1VE.s 			page 145


 2185              		.cfi_endproc
 2186              	.LFE17:
 2188              		.section	.rodata.vTaskStartScheduler.str1.4,"aMS",%progbits,1
 2189              		.align	2
 2190              	.LC0:
 2191 0000 49444C45 		.ascii	"IDLE\000"
 2191      00
 2192              		.section	.text.vTaskStartScheduler,"ax",%progbits
 2193              		.align	1
 2194              		.global	vTaskStartScheduler
 2195              		.syntax unified
 2196              		.thumb
 2197              		.thumb_func
 2198              		.fpu fpv4-sp-d16
 2200              	vTaskStartScheduler:
 2201              	.LFB18:
1976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
 2202              		.loc 1 1976 1 is_stmt 1 view -0
 2203              		.cfi_startproc
 2204              		@ args = 0, pretend = 0, frame = 16
 2205              		@ frame_needed = 0, uses_anonymous_args = 0
 2206 0000 10B5     		push	{r4, lr}
 2207              		.cfi_def_cfa_offset 8
 2208              		.cfi_offset 4, -8
 2209              		.cfi_offset 14, -4
 2210 0002 88B0     		sub	sp, sp, #32
 2211              		.cfi_def_cfa_offset 40
1977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2212              		.loc 1 1977 1 view .LVU622
 2213              	.LBB142:
1982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		StackType_t *pxIdleTaskStackBuffer = NULL;
 2214              		.loc 1 1982 3 view .LVU623
1982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		StackType_t *pxIdleTaskStackBuffer = NULL;
 2215              		.loc 1 1982 17 is_stmt 0 view .LVU624
 2216 0004 0024     		movs	r4, #0
 2217 0006 0594     		str	r4, [sp, #20]
1983:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uint32_t ulIdleTaskStackSize;
 2218              		.loc 1 1983 3 is_stmt 1 view .LVU625
1983:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uint32_t ulIdleTaskStackSize;
 2219              		.loc 1 1983 16 is_stmt 0 view .LVU626
 2220 0008 0694     		str	r4, [sp, #24]
1984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2221              		.loc 1 1984 3 is_stmt 1 view .LVU627
1988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 2222              		.loc 1 1988 3 view .LVU628
 2223 000a 07AA     		add	r2, sp, #28
 2224 000c 06A9     		add	r1, sp, #24
 2225 000e 05A8     		add	r0, sp, #20
 2226 0010 FFF7FEFF 		bl	vApplicationGetIdleTaskMemory
 2227              	.LVL168:
1989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												configIDLE_TASK_NAME,
 2228              		.loc 1 1989 3 view .LVU629
1989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												configIDLE_TASK_NAME,
 2229              		.loc 1 1989 21 is_stmt 0 view .LVU630
 2230 0014 059B     		ldr	r3, [sp, #20]
 2231 0016 0293     		str	r3, [sp, #8]
 2232 0018 069B     		ldr	r3, [sp, #24]
ARM GAS  /tmp/cc7Oi1VE.s 			page 146


 2233 001a 0193     		str	r3, [sp, #4]
 2234 001c 0094     		str	r4, [sp]
 2235 001e 2346     		mov	r3, r4
 2236 0020 079A     		ldr	r2, [sp, #28]
 2237 0022 0E49     		ldr	r1, .L166
 2238 0024 0E48     		ldr	r0, .L166+4
 2239 0026 FFF7FEFF 		bl	xTaskCreateStatic
 2240              	.LVL169:
1989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												configIDLE_TASK_NAME,
 2241              		.loc 1 1989 19 view .LVU631
 2242 002a 0E4B     		ldr	r3, .L166+8
 2243 002c 1860     		str	r0, [r3]
1997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2244              		.loc 1 1997 3 is_stmt 1 view .LVU632
1997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2245              		.loc 1 1997 5 is_stmt 0 view .LVU633
 2246 002e 90B1     		cbz	r0, .L162
 2247              	.LVL170:
1997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2248              		.loc 1 1997 5 view .LVU634
 2249              	.LBE142:
2031:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2250              		.loc 1 2031 2 is_stmt 1 view .LVU635
2047:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2251              		.loc 1 2047 3 view .LVU636
 2252              	.LBB143:
 2253              	.LBI143:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 2254              		.loc 2 191 30 view .LVU637
 2255              	.LBB144:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2256              		.loc 2 193 1 view .LVU638
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2257              		.loc 2 195 2 view .LVU639
 2258              		.syntax unified
 2259              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2260 0030 4FF05003 			mov r3, #80												
 2261 0034 83F31188 		msr basepri, r3											
 2262 0038 BFF36F8F 		isb														
 2263 003c BFF34F8F 		dsb														
 2264              	
 2265              	@ 0 "" 2
 2266              		.thumb
 2267              		.syntax unified
 2268              	.LBE144:
 2269              	.LBE143:
2059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xSchedulerRunning = pdTRUE;
 2270              		.loc 1 2059 3 view .LVU640
2059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xSchedulerRunning = pdTRUE;
 2271              		.loc 1 2059 24 is_stmt 0 view .LVU641
 2272 0040 094B     		ldr	r3, .L166+12
 2273 0042 4FF0FF32 		mov	r2, #-1
 2274 0046 1A60     		str	r2, [r3]
2060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 2275              		.loc 1 2060 3 is_stmt 1 view .LVU642
2060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 2276              		.loc 1 2060 21 is_stmt 0 view .LVU643
ARM GAS  /tmp/cc7Oi1VE.s 			page 147


 2277 0048 084B     		ldr	r3, .L166+16
 2278 004a 0122     		movs	r2, #1
 2279 004c 1A60     		str	r2, [r3]
2061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2280              		.loc 1 2061 3 is_stmt 1 view .LVU644
2061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2281              		.loc 1 2061 14 is_stmt 0 view .LVU645
 2282 004e 084B     		ldr	r3, .L166+20
 2283 0050 1C60     		str	r4, [r3]
2069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2284              		.loc 1 2069 43 is_stmt 1 view .LVU646
2071:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2285              		.loc 1 2071 26 view .LVU647
2075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2286              		.loc 1 2075 3 view .LVU648
2075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2287              		.loc 1 2075 7 is_stmt 0 view .LVU649
 2288 0052 FFF7FEFF 		bl	xPortStartScheduler
 2289              	.LVL171:
 2290              	.L162:
2096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2291              		.loc 1 2096 1 view .LVU650
 2292 0056 08B0     		add	sp, sp, #32
 2293              		.cfi_def_cfa_offset 8
 2294              		@ sp needed
 2295 0058 10BD     		pop	{r4, pc}
 2296              	.L167:
 2297 005a 00BF     		.align	2
 2298              	.L166:
 2299 005c 00000000 		.word	.LC0
 2300 0060 00000000 		.word	prvIdleTask
 2301 0064 00000000 		.word	.LANCHOR17
 2302 0068 00000000 		.word	.LANCHOR3
 2303 006c 00000000 		.word	.LANCHOR11
 2304 0070 00000000 		.word	.LANCHOR15
 2305              		.cfi_endproc
 2306              	.LFE18:
 2308              		.section	.text.vTaskEndScheduler,"ax",%progbits
 2309              		.align	1
 2310              		.global	vTaskEndScheduler
 2311              		.syntax unified
 2312              		.thumb
 2313              		.thumb_func
 2314              		.fpu fpv4-sp-d16
 2316              	vTaskEndScheduler:
 2317              	.LFB19:
2100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Stop the scheduler interrupts and call the portable scheduler end
 2318              		.loc 1 2100 1 is_stmt 1 view -0
 2319              		.cfi_startproc
 2320              		@ args = 0, pretend = 0, frame = 0
 2321              		@ frame_needed = 0, uses_anonymous_args = 0
 2322 0000 08B5     		push	{r3, lr}
 2323              		.cfi_def_cfa_offset 8
 2324              		.cfi_offset 3, -8
 2325              		.cfi_offset 14, -4
2104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xSchedulerRunning = pdFALSE;
 2326              		.loc 1 2104 2 view .LVU652
ARM GAS  /tmp/cc7Oi1VE.s 			page 148


 2327              	.LBB145:
 2328              	.LBI145:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 2329              		.loc 2 191 30 view .LVU653
 2330              	.LBB146:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2331              		.loc 2 193 1 view .LVU654
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2332              		.loc 2 195 2 view .LVU655
 2333              		.syntax unified
 2334              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2335 0002 4FF05003 			mov r3, #80												
 2336 0006 83F31188 		msr basepri, r3											
 2337 000a BFF36F8F 		isb														
 2338 000e BFF34F8F 		dsb														
 2339              	
 2340              	@ 0 "" 2
 2341              		.thumb
 2342              		.syntax unified
 2343              	.LBE146:
 2344              	.LBE145:
2105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vPortEndScheduler();
 2345              		.loc 1 2105 2 view .LVU656
2105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vPortEndScheduler();
 2346              		.loc 1 2105 20 is_stmt 0 view .LVU657
 2347 0012 034B     		ldr	r3, .L170
 2348 0014 0022     		movs	r2, #0
 2349 0016 1A60     		str	r2, [r3]
2106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2350              		.loc 1 2106 2 is_stmt 1 view .LVU658
 2351 0018 FFF7FEFF 		bl	vPortEndScheduler
 2352              	.LVL172:
2107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
 2353              		.loc 1 2107 1 is_stmt 0 view .LVU659
 2354 001c 08BD     		pop	{r3, pc}
 2355              	.L171:
 2356 001e 00BF     		.align	2
 2357              	.L170:
 2358 0020 00000000 		.word	.LANCHOR11
 2359              		.cfi_endproc
 2360              	.LFE19:
 2362              		.section	.text.vTaskSuspendAll,"ax",%progbits
 2363              		.align	1
 2364              		.global	vTaskSuspendAll
 2365              		.syntax unified
 2366              		.thumb
 2367              		.thumb_func
 2368              		.fpu fpv4-sp-d16
 2370              	vTaskSuspendAll:
 2371              	.LFB20:
2111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A critical section is not required as the variable is of type
 2372              		.loc 1 2111 1 is_stmt 1 view -0
 2373              		.cfi_startproc
 2374              		@ args = 0, pretend = 0, frame = 0
 2375              		@ frame_needed = 0, uses_anonymous_args = 0
 2376              		@ link register save eliminated.
2119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cc7Oi1VE.s 			page 149


 2377              		.loc 1 2119 24 view .LVU661
2123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2378              		.loc 1 2123 2 view .LVU662
 2379 0000 024A     		ldr	r2, .L173
 2380 0002 1368     		ldr	r3, [r2]
 2381 0004 0133     		adds	r3, r3, #1
 2382 0006 1360     		str	r3, [r2]
2127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2383              		.loc 1 2127 2 view .LVU663
2128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
 2384              		.loc 1 2128 1 is_stmt 0 view .LVU664
 2385 0008 7047     		bx	lr
 2386              	.L174:
 2387 000a 00BF     		.align	2
 2388              	.L173:
 2389 000c 00000000 		.word	.LANCHOR16
 2390              		.cfi_endproc
 2391              	.LFE20:
 2393              		.section	.text.xTaskGetTickCount,"ax",%progbits
 2394              		.align	1
 2395              		.global	xTaskGetTickCount
 2396              		.syntax unified
 2397              		.thumb
 2398              		.thumb_func
 2399              		.fpu fpv4-sp-d16
 2401              	xTaskGetTickCount:
 2402              	.LFB22:
2305:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xTicks;
 2403              		.loc 1 2305 1 is_stmt 1 view -0
 2404              		.cfi_startproc
 2405              		@ args = 0, pretend = 0, frame = 0
 2406              		@ frame_needed = 0, uses_anonymous_args = 0
 2407              		@ link register save eliminated.
2306:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2408              		.loc 1 2306 1 view .LVU666
2309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2409              		.loc 1 2309 32 view .LVU667
2311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 2410              		.loc 1 2311 3 view .LVU668
2311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 2411              		.loc 1 2311 10 is_stmt 0 view .LVU669
 2412 0000 014B     		ldr	r3, .L176
 2413 0002 1868     		ldr	r0, [r3]
 2414              	.LVL173:
2313:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2415              		.loc 1 2313 31 is_stmt 1 view .LVU670
2315:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2416              		.loc 1 2315 2 view .LVU671
2316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2417              		.loc 1 2316 1 is_stmt 0 view .LVU672
 2418 0004 7047     		bx	lr
 2419              	.L177:
 2420 0006 00BF     		.align	2
 2421              	.L176:
 2422 0008 00000000 		.word	.LANCHOR15
 2423              		.cfi_endproc
 2424              	.LFE22:
ARM GAS  /tmp/cc7Oi1VE.s 			page 150


 2426              		.section	.text.xTaskGetTickCountFromISR,"ax",%progbits
 2427              		.align	1
 2428              		.global	xTaskGetTickCountFromISR
 2429              		.syntax unified
 2430              		.thumb
 2431              		.thumb_func
 2432              		.fpu fpv4-sp-d16
 2434              	xTaskGetTickCountFromISR:
 2435              	.LFB23:
2320:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xReturn;
 2436              		.loc 1 2320 1 is_stmt 1 view -0
 2437              		.cfi_startproc
 2438              		@ args = 0, pretend = 0, frame = 0
 2439              		@ frame_needed = 0, uses_anonymous_args = 0
 2440 0000 08B5     		push	{r3, lr}
 2441              		.cfi_def_cfa_offset 8
 2442              		.cfi_offset 3, -8
 2443              		.cfi_offset 14, -4
2321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t uxSavedInterruptStatus;
 2444              		.loc 1 2321 1 view .LVU674
2322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2445              		.loc 1 2322 1 view .LVU675
2338:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2446              		.loc 1 2338 2 view .LVU676
 2447 0002 FFF7FEFF 		bl	vPortValidateInterruptPriority
 2448              	.LVL174:
2340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2449              		.loc 1 2340 2 view .LVU677
2342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 2450              		.loc 1 2342 3 view .LVU678
2342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 2451              		.loc 1 2342 11 is_stmt 0 view .LVU679
 2452 0006 014B     		ldr	r3, .L180
 2453 0008 1868     		ldr	r0, [r3]
 2454              	.LVL175:
2344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2455              		.loc 1 2344 2 is_stmt 1 view .LVU680
2346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2456              		.loc 1 2346 2 view .LVU681
2347:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2457              		.loc 1 2347 1 is_stmt 0 view .LVU682
 2458 000a 08BD     		pop	{r3, pc}
 2459              	.L181:
 2460              		.align	2
 2461              	.L180:
 2462 000c 00000000 		.word	.LANCHOR15
 2463              		.cfi_endproc
 2464              	.LFE23:
 2466              		.section	.text.uxTaskGetNumberOfTasks,"ax",%progbits
 2467              		.align	1
 2468              		.global	uxTaskGetNumberOfTasks
 2469              		.syntax unified
 2470              		.thumb
 2471              		.thumb_func
 2472              		.fpu fpv4-sp-d16
 2474              	uxTaskGetNumberOfTasks:
 2475              	.LFB24:
ARM GAS  /tmp/cc7Oi1VE.s 			page 151


2351:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A critical section is not required because the variables are of type
 2476              		.loc 1 2351 1 is_stmt 1 view -0
 2477              		.cfi_startproc
 2478              		@ args = 0, pretend = 0, frame = 0
 2479              		@ frame_needed = 0, uses_anonymous_args = 0
 2480              		@ link register save eliminated.
2354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2481              		.loc 1 2354 2 view .LVU684
2354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2482              		.loc 1 2354 9 is_stmt 0 view .LVU685
 2483 0000 014B     		ldr	r3, .L183
 2484 0002 1868     		ldr	r0, [r3]
2355:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2485              		.loc 1 2355 1 view .LVU686
 2486 0004 7047     		bx	lr
 2487              	.L184:
 2488 0006 00BF     		.align	2
 2489              	.L183:
 2490 0008 00000000 		.word	.LANCHOR9
 2491              		.cfi_endproc
 2492              	.LFE24:
 2494              		.section	.text.pcTaskGetName,"ax",%progbits
 2495              		.align	1
 2496              		.global	pcTaskGetName
 2497              		.syntax unified
 2498              		.thumb
 2499              		.thumb_func
 2500              		.fpu fpv4-sp-d16
 2502              	pcTaskGetName:
 2503              	.LVL176:
 2504              	.LFB25:
2359:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxTCB;
 2505              		.loc 1 2359 1 is_stmt 1 view -0
 2506              		.cfi_startproc
 2507              		@ args = 0, pretend = 0, frame = 0
 2508              		@ frame_needed = 0, uses_anonymous_args = 0
 2509              		@ link register save eliminated.
2360:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2510              		.loc 1 2360 1 view .LVU688
2364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTCB );
 2511              		.loc 1 2364 2 view .LVU689
2364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTCB );
 2512              		.loc 1 2364 10 is_stmt 0 view .LVU690
 2513 0000 0346     		mov	r3, r0
 2514 0002 18B1     		cbz	r0, .L189
 2515              	.LVL177:
 2516              	.L186:
2365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 2517              		.loc 1 2365 2 is_stmt 1 discriminator 4 view .LVU691
 2518 0004 2BB1     		cbz	r3, .L190
2365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 2519              		.loc 1 2365 23 discriminator 2 view .LVU692
2366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2520              		.loc 1 2366 2 discriminator 2 view .LVU693
2367:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2521              		.loc 1 2367 1 is_stmt 0 discriminator 2 view .LVU694
 2522 0006 03F13400 		add	r0, r3, #52
ARM GAS  /tmp/cc7Oi1VE.s 			page 152


 2523 000a 7047     		bx	lr
 2524              	.LVL178:
 2525              	.L189:
2364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTCB );
 2526              		.loc 1 2364 10 discriminator 1 view .LVU695
 2527 000c 054B     		ldr	r3, .L191
 2528 000e 1B68     		ldr	r3, [r3]
 2529              	.LVL179:
2364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTCB );
 2530              		.loc 1 2364 10 discriminator 1 view .LVU696
 2531 0010 F8E7     		b	.L186
 2532              	.LVL180:
 2533              	.L190:
2365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 2534              		.loc 1 2365 2 is_stmt 1 view .LVU697
 2535              	.LBB147:
 2536              	.LBI147:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 2537              		.loc 2 191 30 view .LVU698
 2538              	.LBB148:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2539              		.loc 2 193 1 view .LVU699
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2540              		.loc 2 195 2 view .LVU700
 2541              		.syntax unified
 2542              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2543 0012 4FF05003 			mov r3, #80												
 2544 0016 83F31188 		msr basepri, r3											
 2545 001a BFF36F8F 		isb														
 2546 001e BFF34F8F 		dsb														
 2547              	
 2548              	@ 0 "" 2
 2549              	.LVL181:
 2550              		.thumb
 2551              		.syntax unified
 2552              	.L188:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2553              		.loc 2 195 2 is_stmt 0 view .LVU701
 2554              	.LBE148:
 2555              	.LBE147:
2365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 2556              		.loc 1 2365 2 is_stmt 1 discriminator 1 view .LVU702
2365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 2557              		.loc 1 2365 2 discriminator 1 view .LVU703
2365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 2558              		.loc 1 2365 2 discriminator 1 view .LVU704
 2559 0022 FEE7     		b	.L188
 2560              	.L192:
 2561              		.align	2
 2562              	.L191:
 2563 0024 00000000 		.word	.LANCHOR10
 2564              		.cfi_endproc
 2565              	.LFE25:
 2567              		.section	.text.xTaskIncrementTick,"ax",%progbits
 2568              		.align	1
 2569              		.global	xTaskIncrementTick
 2570              		.syntax unified
ARM GAS  /tmp/cc7Oi1VE.s 			page 153


 2571              		.thumb
 2572              		.thumb_func
 2573              		.fpu fpv4-sp-d16
 2575              	xTaskIncrementTick:
 2576              	.LFB27:
2708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t * pxTCB;
 2577              		.loc 1 2708 1 view -0
 2578              		.cfi_startproc
 2579              		@ args = 0, pretend = 0, frame = 0
 2580              		@ frame_needed = 0, uses_anonymous_args = 0
 2581 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2582              		.cfi_def_cfa_offset 24
 2583              		.cfi_offset 3, -24
 2584              		.cfi_offset 4, -20
 2585              		.cfi_offset 5, -16
 2586              		.cfi_offset 6, -12
 2587              		.cfi_offset 7, -8
 2588              		.cfi_offset 14, -4
2709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xItemValue;
 2589              		.loc 1 2709 1 view .LVU706
2710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xSwitchRequired = pdFALSE;
 2590              		.loc 1 2710 1 view .LVU707
2711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2591              		.loc 1 2711 1 view .LVU708
 2592              	.LVL182:
2716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 2593              		.loc 1 2716 40 view .LVU709
2717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2594              		.loc 1 2717 2 view .LVU710
2717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2595              		.loc 1 2717 27 is_stmt 0 view .LVU711
 2596 0002 3A4B     		ldr	r3, .L214
 2597 0004 1B68     		ldr	r3, [r3]
2717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2598              		.loc 1 2717 4 view .LVU712
 2599 0006 002B     		cmp	r3, #0
 2600 0008 69D1     		bne	.L194
 2601              	.LBB149:
2721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2602              		.loc 1 2721 3 is_stmt 1 view .LVU713
2721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2603              		.loc 1 2721 49 is_stmt 0 view .LVU714
 2604 000a 394B     		ldr	r3, .L214+4
 2605 000c 1D68     		ldr	r5, [r3]
2721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2606              		.loc 1 2721 20 view .LVU715
 2607 000e 0135     		adds	r5, r5, #1
 2608              	.LVL183:
2725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2609              		.loc 1 2725 3 is_stmt 1 view .LVU716
2725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2610              		.loc 1 2725 14 is_stmt 0 view .LVU717
 2611 0010 1D60     		str	r5, [r3]
2727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2612              		.loc 1 2727 3 is_stmt 1 view .LVU718
2727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2613              		.loc 1 2727 5 is_stmt 0 view .LVU719
ARM GAS  /tmp/cc7Oi1VE.s 			page 154


 2614 0012 C5B9     		cbnz	r5, .L195
 2615              	.LBB150:
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2616              		.loc 1 2729 4 is_stmt 1 view .LVU720
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2617              		.loc 1 2729 4 view .LVU721
 2618 0014 374B     		ldr	r3, .L214+8
 2619 0016 1B68     		ldr	r3, [r3]
 2620 0018 1B68     		ldr	r3, [r3]
 2621 001a 43B1     		cbz	r3, .L196
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2622              		.loc 1 2729 4 view .LVU722
 2623              	.LBB151:
 2624              	.LBI151:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 2625              		.loc 2 191 30 view .LVU723
 2626              	.LBB152:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2627              		.loc 2 193 1 view .LVU724
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2628              		.loc 2 195 2 view .LVU725
 2629              		.syntax unified
 2630              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2631 001c 4FF05003 			mov r3, #80												
 2632 0020 83F31188 		msr basepri, r3											
 2633 0024 BFF36F8F 		isb														
 2634 0028 BFF34F8F 		dsb														
 2635              	
 2636              	@ 0 "" 2
 2637              	.LVL184:
 2638              		.thumb
 2639              		.syntax unified
 2640              	.L197:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2641              		.loc 2 195 2 is_stmt 0 view .LVU726
 2642              	.LBE152:
 2643              	.LBE151:
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2644              		.loc 1 2729 4 is_stmt 1 discriminator 1 view .LVU727
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2645              		.loc 1 2729 4 discriminator 1 view .LVU728
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2646              		.loc 1 2729 4 discriminator 1 view .LVU729
 2647 002c FEE7     		b	.L197
 2648              	.L196:
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2649              		.loc 1 2729 4 discriminator 2 view .LVU730
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2650              		.loc 1 2729 4 discriminator 2 view .LVU731
 2651 002e 314A     		ldr	r2, .L214+8
 2652 0030 1168     		ldr	r1, [r2]
 2653              	.LVL185:
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2654              		.loc 1 2729 4 discriminator 2 view .LVU732
 2655 0032 314B     		ldr	r3, .L214+12
 2656 0034 1868     		ldr	r0, [r3]
 2657 0036 1060     		str	r0, [r2]
ARM GAS  /tmp/cc7Oi1VE.s 			page 155


2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2658              		.loc 1 2729 4 discriminator 2 view .LVU733
 2659 0038 1960     		str	r1, [r3]
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2660              		.loc 1 2729 4 discriminator 2 view .LVU734
 2661 003a 304A     		ldr	r2, .L214+16
 2662 003c 1368     		ldr	r3, [r2]
 2663 003e 0133     		adds	r3, r3, #1
 2664 0040 1360     		str	r3, [r2]
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2665              		.loc 1 2729 4 discriminator 2 view .LVU735
 2666 0042 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 2667              	.LVL186:
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2668              		.loc 1 2729 4 is_stmt 0 discriminator 2 view .LVU736
 2669              	.LBE150:
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2670              		.loc 1 2729 30 is_stmt 1 discriminator 2 view .LVU737
 2671              	.L195:
2733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2672              		.loc 1 2733 28 view .LVU738
2740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2673              		.loc 1 2740 3 view .LVU739
2740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2674              		.loc 1 2740 23 is_stmt 0 view .LVU740
 2675 0046 2E4B     		ldr	r3, .L214+20
 2676 0048 1B68     		ldr	r3, [r3]
2740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2677              		.loc 1 2740 5 view .LVU741
 2678 004a AB42     		cmp	r3, r5
 2679 004c 3DD9     		bls	.L207
 2680              	.LBE149:
2711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2681              		.loc 1 2711 12 view .LVU742
 2682 004e 0027     		movs	r7, #0
 2683              	.LVL187:
 2684              	.L199:
 2685              	.LBB153:
2823:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2686              		.loc 1 2823 4 is_stmt 1 view .LVU743
2823:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2687              		.loc 1 2823 8 is_stmt 0 view .LVU744
 2688 0050 2C4B     		ldr	r3, .L214+24
 2689 0052 1B68     		ldr	r3, [r3]
 2690 0054 DB6A     		ldr	r3, [r3, #44]
 2691 0056 03EB8303 		add	r3, r3, r3, lsl #2
 2692 005a 9A00     		lsls	r2, r3, #2
 2693 005c 2A4B     		ldr	r3, .L214+28
 2694 005e 9B58     		ldr	r3, [r3, r2]
2823:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2695              		.loc 1 2823 6 view .LVU745
 2696 0060 012B     		cmp	r3, #1
 2697 0062 00D9     		bls	.L205
2825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 2698              		.loc 1 2825 21 view .LVU746
 2699 0064 0127     		movs	r7, #1
 2700              	.LVL188:
ARM GAS  /tmp/cc7Oi1VE.s 			page 156


 2701              	.L205:
2829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 2702              		.loc 1 2829 29 is_stmt 1 view .LVU747
2851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2703              		.loc 1 2851 4 view .LVU748
2851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2704              		.loc 1 2851 22 is_stmt 0 view .LVU749
 2705 0066 294B     		ldr	r3, .L214+32
 2706 0068 1B68     		ldr	r3, [r3]
2851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2707              		.loc 1 2851 6 view .LVU750
 2708 006a 002B     		cmp	r3, #0
 2709 006c 3CD0     		beq	.L193
2853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 2710              		.loc 1 2853 21 view .LVU751
 2711 006e 0127     		movs	r7, #1
 2712              	.LVL189:
2853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 2713              		.loc 1 2853 21 view .LVU752
 2714              	.LBE153:
2875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2715              		.loc 1 2875 2 is_stmt 1 view .LVU753
2875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2716              		.loc 1 2875 9 is_stmt 0 view .LVU754
 2717 0070 3AE0     		b	.L193
 2718              	.LVL190:
 2719              	.L208:
 2720              	.LBB154:
2806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
 2721              		.loc 1 2806 24 view .LVU755
 2722 0072 0127     		movs	r7, #1
 2723              	.LVL191:
 2724              	.L198:
2742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2725              		.loc 1 2742 4 is_stmt 1 view .LVU756
2744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2726              		.loc 1 2744 5 view .LVU757
2744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2727              		.loc 1 2744 9 is_stmt 0 view .LVU758
 2728 0074 1F4B     		ldr	r3, .L214+8
 2729 0076 1B68     		ldr	r3, [r3]
 2730 0078 1B68     		ldr	r3, [r3]
2744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2731              		.loc 1 2744 7 view .LVU759
 2732 007a 43B3     		cbz	r3, .L212
2760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 2733              		.loc 1 2760 6 is_stmt 1 view .LVU760
2760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 2734              		.loc 1 2760 14 is_stmt 0 view .LVU761
 2735 007c 1D4B     		ldr	r3, .L214+8
 2736 007e 1B68     		ldr	r3, [r3]
 2737 0080 DB68     		ldr	r3, [r3, #12]
2760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 2738              		.loc 1 2760 12 view .LVU762
 2739 0082 DC68     		ldr	r4, [r3, #12]
 2740              	.LVL192:
2761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cc7Oi1VE.s 			page 157


 2741              		.loc 1 2761 6 is_stmt 1 view .LVU763
2761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2742              		.loc 1 2761 17 is_stmt 0 view .LVU764
 2743 0084 6368     		ldr	r3, [r4, #4]
 2744              	.LVL193:
2763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2745              		.loc 1 2763 6 is_stmt 1 view .LVU765
2763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2746              		.loc 1 2763 8 is_stmt 0 view .LVU766
 2747 0086 9D42     		cmp	r5, r3
 2748 0088 26D3     		bcc	.L213
2775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2749              		.loc 1 2775 31 is_stmt 1 view .LVU767
2779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2750              		.loc 1 2779 6 view .LVU768
2779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2751              		.loc 1 2779 15 is_stmt 0 view .LVU769
 2752 008a 261D     		adds	r6, r4, #4
 2753 008c 3046     		mov	r0, r6
 2754 008e FFF7FEFF 		bl	uxListRemove
 2755              	.LVL194:
2783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2756              		.loc 1 2783 6 is_stmt 1 view .LVU770
2783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2757              		.loc 1 2783 10 is_stmt 0 view .LVU771
 2758 0092 A36A     		ldr	r3, [r4, #40]
2783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2759              		.loc 1 2783 8 view .LVU772
 2760 0094 1BB1     		cbz	r3, .L202
2785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2761              		.loc 1 2785 7 is_stmt 1 view .LVU773
2785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2762              		.loc 1 2785 16 is_stmt 0 view .LVU774
 2763 0096 04F11800 		add	r0, r4, #24
 2764 009a FFF7FEFF 		bl	uxListRemove
 2765              	.LVL195:
 2766              	.L202:
2789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2767              		.loc 1 2789 31 is_stmt 1 view .LVU775
2794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2768              		.loc 1 2794 6 view .LVU776
2794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2769              		.loc 1 2794 6 view .LVU777
 2770 009e E36A     		ldr	r3, [r4, #44]
 2771 00a0 0122     		movs	r2, #1
 2772 00a2 9A40     		lsls	r2, r2, r3
 2773 00a4 1A49     		ldr	r1, .L214+36
 2774 00a6 0868     		ldr	r0, [r1]
 2775 00a8 0243     		orrs	r2, r2, r0
 2776 00aa 0A60     		str	r2, [r1]
2794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2777              		.loc 1 2794 6 view .LVU778
 2778 00ac 03EB8303 		add	r3, r3, r3, lsl #2
 2779 00b0 9A00     		lsls	r2, r3, #2
 2780 00b2 3146     		mov	r1, r6
 2781 00b4 1448     		ldr	r0, .L214+28
 2782 00b6 1044     		add	r0, r0, r2
ARM GAS  /tmp/cc7Oi1VE.s 			page 158


 2783 00b8 FFF7FEFF 		bl	vListInsertEnd
 2784              	.LVL196:
2794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2785              		.loc 1 2794 36 view .LVU779
2804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 2786              		.loc 1 2804 7 view .LVU780
2804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 2787              		.loc 1 2804 16 is_stmt 0 view .LVU781
 2788 00bc E26A     		ldr	r2, [r4, #44]
2804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 2789              		.loc 1 2804 44 view .LVU782
 2790 00be 114B     		ldr	r3, .L214+24
 2791 00c0 1B68     		ldr	r3, [r3]
 2792 00c2 DB6A     		ldr	r3, [r3, #44]
2804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 2793              		.loc 1 2804 9 view .LVU783
 2794 00c4 9A42     		cmp	r2, r3
 2795 00c6 D4D2     		bcs	.L208
 2796 00c8 D4E7     		b	.L198
 2797              	.LVL197:
 2798              	.L207:
2804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 2799              		.loc 1 2804 9 view .LVU784
 2800              	.LBE154:
2711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2801              		.loc 1 2711 12 view .LVU785
 2802 00ca 0027     		movs	r7, #0
 2803 00cc D2E7     		b	.L198
 2804              	.LVL198:
 2805              	.L212:
 2806              	.LBB155:
2751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 2807              		.loc 1 2751 6 is_stmt 1 view .LVU786
2751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 2808              		.loc 1 2751 27 is_stmt 0 view .LVU787
 2809 00ce 0C4B     		ldr	r3, .L214+20
 2810 00d0 4FF0FF32 		mov	r2, #-1
 2811 00d4 1A60     		str	r2, [r3]
2752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2812              		.loc 1 2752 6 is_stmt 1 view .LVU788
 2813 00d6 BBE7     		b	.L199
 2814              	.LVL199:
 2815              	.L213:
2770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks
 2816              		.loc 1 2770 7 view .LVU789
2770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks
 2817              		.loc 1 2770 28 is_stmt 0 view .LVU790
 2818 00d8 094A     		ldr	r2, .L214+20
 2819 00da 1360     		str	r3, [r2]
2771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2820              		.loc 1 2771 7 is_stmt 1 view .LVU791
 2821 00dc B8E7     		b	.L199
 2822              	.LVL200:
 2823              	.L194:
2771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2824              		.loc 1 2771 7 is_stmt 0 view .LVU792
 2825              	.LBE155:
ARM GAS  /tmp/cc7Oi1VE.s 			page 159


2864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2826              		.loc 1 2864 3 is_stmt 1 view .LVU793
 2827 00de 0D4A     		ldr	r2, .L214+40
 2828 00e0 1368     		ldr	r3, [r2]
 2829 00e2 0133     		adds	r3, r3, #1
 2830 00e4 1360     		str	r3, [r2]
2711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2831              		.loc 1 2711 12 is_stmt 0 view .LVU794
 2832 00e6 0027     		movs	r7, #0
 2833              	.LVL201:
 2834              	.L193:
2876:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2835              		.loc 1 2876 1 view .LVU795
 2836 00e8 3846     		mov	r0, r7
 2837 00ea F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2838              	.L215:
 2839              		.align	2
 2840              	.L214:
 2841 00ec 00000000 		.word	.LANCHOR16
 2842 00f0 00000000 		.word	.LANCHOR15
 2843 00f4 00000000 		.word	.LANCHOR2
 2844 00f8 00000000 		.word	.LANCHOR8
 2845 00fc 00000000 		.word	.LANCHOR18
 2846 0100 00000000 		.word	.LANCHOR3
 2847 0104 00000000 		.word	.LANCHOR10
 2848 0108 00000000 		.word	.LANCHOR4
 2849 010c 00000000 		.word	.LANCHOR19
 2850 0110 00000000 		.word	.LANCHOR13
 2851 0114 00000000 		.word	.LANCHOR20
 2852              		.cfi_endproc
 2853              	.LFE27:
 2855              		.section	.text.xTaskResumeAll,"ax",%progbits
 2856              		.align	1
 2857              		.global	xTaskResumeAll
 2858              		.syntax unified
 2859              		.thumb
 2860              		.thumb_func
 2861              		.fpu fpv4-sp-d16
 2863              	xTaskResumeAll:
 2864              	.LFB21:
2195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxTCB = NULL;
 2865              		.loc 1 2195 1 is_stmt 1 view -0
 2866              		.cfi_startproc
 2867              		@ args = 0, pretend = 0, frame = 0
 2868              		@ frame_needed = 0, uses_anonymous_args = 0
 2869 0000 38B5     		push	{r3, r4, r5, lr}
 2870              		.cfi_def_cfa_offset 16
 2871              		.cfi_offset 3, -16
 2872              		.cfi_offset 4, -12
 2873              		.cfi_offset 5, -8
 2874              		.cfi_offset 14, -4
2196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xAlreadyYielded = pdFALSE;
 2875              		.loc 1 2196 1 view .LVU797
 2876              	.LVL202:
2197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2877              		.loc 1 2197 1 view .LVU798
2201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cc7Oi1VE.s 			page 160


 2878              		.loc 1 2201 2 view .LVU799
 2879 0002 354B     		ldr	r3, .L232
 2880 0004 1B68     		ldr	r3, [r3]
 2881 0006 43B9     		cbnz	r3, .L217
2201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2882              		.loc 1 2201 2 view .LVU800
 2883              	.LBB156:
 2884              	.LBI156:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 2885              		.loc 2 191 30 view .LVU801
 2886              	.LBB157:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2887              		.loc 2 193 1 view .LVU802
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2888              		.loc 2 195 2 view .LVU803
 2889              		.syntax unified
 2890              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2891 0008 4FF05003 			mov r3, #80												
 2892 000c 83F31188 		msr basepri, r3											
 2893 0010 BFF36F8F 		isb														
 2894 0014 BFF34F8F 		dsb														
 2895              	
 2896              	@ 0 "" 2
 2897              	.LVL203:
 2898              		.thumb
 2899              		.syntax unified
 2900              	.L218:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2901              		.loc 2 195 2 is_stmt 0 view .LVU804
 2902              	.LBE157:
 2903              	.LBE156:
2201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2904              		.loc 1 2201 2 is_stmt 1 discriminator 1 view .LVU805
2201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2905              		.loc 1 2201 2 discriminator 1 view .LVU806
2201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2906              		.loc 1 2201 2 discriminator 1 view .LVU807
 2907 0018 FEE7     		b	.L218
 2908              	.L217:
2201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2909              		.loc 1 2201 38 discriminator 2 view .LVU808
2208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2910              		.loc 1 2208 2 discriminator 2 view .LVU809
 2911 001a FFF7FEFF 		bl	vPortEnterCritical
 2912              	.LVL204:
2210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2913              		.loc 1 2210 3 discriminator 2 view .LVU810
 2914 001e 2E4B     		ldr	r3, .L232
 2915 0020 1A68     		ldr	r2, [r3]
 2916 0022 013A     		subs	r2, r2, #1
 2917 0024 1A60     		str	r2, [r3]
2212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2918              		.loc 1 2212 3 discriminator 2 view .LVU811
2212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2919              		.loc 1 2212 28 is_stmt 0 discriminator 2 view .LVU812
 2920 0026 1B68     		ldr	r3, [r3]
2212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
ARM GAS  /tmp/cc7Oi1VE.s 			page 161


 2921              		.loc 1 2212 5 discriminator 2 view .LVU813
 2922 0028 002B     		cmp	r3, #0
 2923 002a 4FD1     		bne	.L227
2214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2924              		.loc 1 2214 4 is_stmt 1 view .LVU814
2214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2925              		.loc 1 2214 31 is_stmt 0 view .LVU815
 2926 002c 2B4B     		ldr	r3, .L232+4
 2927 002e 1B68     		ldr	r3, [r3]
2214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2928              		.loc 1 2214 6 view .LVU816
 2929 0030 0BB9     		cbnz	r3, .L228
2197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2930              		.loc 1 2197 12 view .LVU817
 2931 0032 0024     		movs	r4, #0
 2932 0034 4BE0     		b	.L219
 2933              	.L228:
2196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xAlreadyYielded = pdFALSE;
 2934              		.loc 1 2196 8 view .LVU818
 2935 0036 0024     		movs	r4, #0
 2936              	.LVL205:
 2937              	.L220:
2233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2938              		.loc 1 2233 31 is_stmt 1 view .LVU819
2218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2939              		.loc 1 2218 10 view .LVU820
2218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2940              		.loc 1 2218 12 is_stmt 0 view .LVU821
 2941 0038 294B     		ldr	r3, .L232+8
 2942 003a 1B68     		ldr	r3, [r3]
2218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2943              		.loc 1 2218 10 view .LVU822
 2944 003c 1BB3     		cbz	r3, .L230
2220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 2945              		.loc 1 2220 6 is_stmt 1 view .LVU823
2220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 2946              		.loc 1 2220 14 is_stmt 0 view .LVU824
 2947 003e 284B     		ldr	r3, .L232+8
 2948 0040 DB68     		ldr	r3, [r3, #12]
2220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 2949              		.loc 1 2220 12 view .LVU825
 2950 0042 DC68     		ldr	r4, [r3, #12]
 2951              	.LVL206:
2221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 2952              		.loc 1 2221 6 is_stmt 1 view .LVU826
2221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 2953              		.loc 1 2221 15 is_stmt 0 view .LVU827
 2954 0044 04F11800 		add	r0, r4, #24
 2955 0048 FFF7FEFF 		bl	uxListRemove
 2956              	.LVL207:
2222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 2957              		.loc 1 2222 6 is_stmt 1 view .LVU828
2222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 2958              		.loc 1 2222 15 is_stmt 0 view .LVU829
 2959 004c 251D     		adds	r5, r4, #4
 2960 004e 2846     		mov	r0, r5
 2961 0050 FFF7FEFF 		bl	uxListRemove
ARM GAS  /tmp/cc7Oi1VE.s 			page 162


 2962              	.LVL208:
2223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2963              		.loc 1 2223 6 is_stmt 1 view .LVU830
2223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2964              		.loc 1 2223 6 view .LVU831
 2965 0054 E06A     		ldr	r0, [r4, #44]
 2966 0056 0123     		movs	r3, #1
 2967 0058 8340     		lsls	r3, r3, r0
 2968 005a 224A     		ldr	r2, .L232+12
 2969 005c 1168     		ldr	r1, [r2]
 2970 005e 0B43     		orrs	r3, r3, r1
 2971 0060 1360     		str	r3, [r2]
2223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2972              		.loc 1 2223 6 view .LVU832
 2973 0062 00EB8000 		add	r0, r0, r0, lsl #2
 2974 0066 2946     		mov	r1, r5
 2975 0068 1F4B     		ldr	r3, .L232+16
 2976 006a 03EB8000 		add	r0, r3, r0, lsl #2
 2977 006e FFF7FEFF 		bl	vListInsertEnd
 2978              	.LVL209:
2223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2979              		.loc 1 2223 36 view .LVU833
2227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2980              		.loc 1 2227 6 view .LVU834
2227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2981              		.loc 1 2227 15 is_stmt 0 view .LVU835
 2982 0072 E26A     		ldr	r2, [r4, #44]
2227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2983              		.loc 1 2227 43 view .LVU836
 2984 0074 1D4B     		ldr	r3, .L232+20
 2985 0076 1B68     		ldr	r3, [r3]
 2986 0078 DB6A     		ldr	r3, [r3, #44]
2227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2987              		.loc 1 2227 8 view .LVU837
 2988 007a 9A42     		cmp	r2, r3
 2989 007c DCD3     		bcc	.L220
2229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2990              		.loc 1 2229 7 is_stmt 1 view .LVU838
2229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2991              		.loc 1 2229 21 is_stmt 0 view .LVU839
 2992 007e 1C4B     		ldr	r3, .L232+24
 2993 0080 0122     		movs	r2, #1
 2994 0082 1A60     		str	r2, [r3]
 2995 0084 D8E7     		b	.L220
 2996              	.L230:
2237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2997              		.loc 1 2237 5 is_stmt 1 view .LVU840
2237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2998              		.loc 1 2237 7 is_stmt 0 view .LVU841
 2999 0086 0CB1     		cbz	r4, .L223
2245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3000              		.loc 1 2245 6 is_stmt 1 view .LVU842
 3001 0088 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 3002              	.LVL210:
 3003              	.L223:
 3004              	.LBB158:
2253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cc7Oi1VE.s 			page 163


 3005              		.loc 1 2253 6 view .LVU843
2253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3006              		.loc 1 2253 17 is_stmt 0 view .LVU844
 3007 008c 194B     		ldr	r3, .L232+28
 3008 008e 1C68     		ldr	r4, [r3]
 3009              	.LVL211:
2255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 3010              		.loc 1 2255 6 is_stmt 1 view .LVU845
2255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 3011              		.loc 1 2255 8 is_stmt 0 view .LVU846
 3012 0090 84B9     		cbnz	r4, .L226
 3013              	.L224:
2274:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 3014              		.loc 1 2274 31 is_stmt 1 view .LVU847
 3015              	.LBE158:
2278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3016              		.loc 1 2278 5 view .LVU848
2278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3017              		.loc 1 2278 23 is_stmt 0 view .LVU849
 3018 0092 174B     		ldr	r3, .L232+24
 3019 0094 1C68     		ldr	r4, [r3]
 3020              	.LVL212:
2278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3021              		.loc 1 2278 7 view .LVU850
 3022 0096 D4B1     		cbz	r4, .L219
2282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 3023              		.loc 1 2282 7 is_stmt 1 view .LVU851
 3024              	.LVL213:
2285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3025              		.loc 1 2285 6 view .LVU852
 3026 0098 4FF0E023 		mov	r3, #-536813568
 3027 009c 4FF08052 		mov	r2, #268435456
 3028 00a0 C3F8042D 		str	r2, [r3, #3332]
2285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3029              		.loc 1 2285 6 view .LVU853
 3030              		.syntax unified
 3031              	@ 2285 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 3032 00a4 BFF34F8F 		dsb
 3033              	@ 0 "" 2
2285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3034              		.loc 1 2285 6 view .LVU854
 3035              	@ 2285 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 3036 00a8 BFF36F8F 		isb
 3037              	@ 0 "" 2
2285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3038              		.loc 1 2285 37 view .LVU855
2282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 3039              		.loc 1 2282 23 is_stmt 0 view .LVU856
 3040              		.thumb
 3041              		.syntax unified
 3042 00ac 0124     		movs	r4, #1
 3043 00ae 0EE0     		b	.L219
 3044              	.LVL214:
 3045              	.L225:
 3046              	.LBB159:
2265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
 3047              		.loc 1 2265 33 is_stmt 1 view .LVU857
ARM GAS  /tmp/cc7Oi1VE.s 			page 164


2267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						} while( xPendedCounts > ( TickType_t ) 0U );
 3048              		.loc 1 2267 8 view .LVU858
2268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3049              		.loc 1 2268 14 view .LVU859
2268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3050              		.loc 1 2268 7 is_stmt 0 view .LVU860
 3051 00b0 013C     		subs	r4, r4, #1
 3052              	.LVL215:
2268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3053              		.loc 1 2268 7 view .LVU861
 3054 00b2 07D0     		beq	.L231
 3055              	.L226:
2257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 3056              		.loc 1 2257 7 is_stmt 1 view .LVU862
2259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
 3057              		.loc 1 2259 8 view .LVU863
2259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
 3058              		.loc 1 2259 12 is_stmt 0 view .LVU864
 3059 00b4 FFF7FEFF 		bl	xTaskIncrementTick
 3060              	.LVL216:
2259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
 3061              		.loc 1 2259 10 view .LVU865
 3062 00b8 0028     		cmp	r0, #0
 3063 00ba F9D0     		beq	.L225
2261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
 3064              		.loc 1 2261 9 is_stmt 1 view .LVU866
2261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
 3065              		.loc 1 2261 23 is_stmt 0 view .LVU867
 3066 00bc 0C4B     		ldr	r3, .L232+24
 3067 00be 0122     		movs	r2, #1
 3068 00c0 1A60     		str	r2, [r3]
 3069 00c2 F5E7     		b	.L225
 3070              	.L231:
2270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 3071              		.loc 1 2270 7 is_stmt 1 view .LVU868
2270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 3072              		.loc 1 2270 20 is_stmt 0 view .LVU869
 3073 00c4 0B4B     		ldr	r3, .L232+28
 3074 00c6 0022     		movs	r2, #0
 3075 00c8 1A60     		str	r2, [r3]
 3076 00ca E2E7     		b	.L224
 3077              	.LVL217:
 3078              	.L227:
2270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 3079              		.loc 1 2270 20 view .LVU870
 3080              	.LBE159:
2197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3081              		.loc 1 2197 12 view .LVU871
 3082 00cc 0024     		movs	r4, #0
 3083              	.LVL218:
 3084              	.L219:
2295:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3085              		.loc 1 2295 28 is_stmt 1 view .LVU872
2298:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3086              		.loc 1 2298 2 view .LVU873
 3087 00ce FFF7FEFF 		bl	vPortExitCritical
 3088              	.LVL219:
ARM GAS  /tmp/cc7Oi1VE.s 			page 165


2300:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3089              		.loc 1 2300 2 view .LVU874
2301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3090              		.loc 1 2301 1 is_stmt 0 view .LVU875
 3091 00d2 2046     		mov	r0, r4
 3092 00d4 38BD     		pop	{r3, r4, r5, pc}
 3093              	.LVL220:
 3094              	.L233:
2301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3095              		.loc 1 2301 1 view .LVU876
 3096 00d6 00BF     		.align	2
 3097              	.L232:
 3098 00d8 00000000 		.word	.LANCHOR16
 3099 00dc 00000000 		.word	.LANCHOR9
 3100 00e0 00000000 		.word	.LANCHOR1
 3101 00e4 00000000 		.word	.LANCHOR13
 3102 00e8 00000000 		.word	.LANCHOR4
 3103 00ec 00000000 		.word	.LANCHOR10
 3104 00f0 00000000 		.word	.LANCHOR19
 3105 00f4 00000000 		.word	.LANCHOR20
 3106              		.cfi_endproc
 3107              	.LFE21:
 3109              		.section	.text.vTaskDelay,"ax",%progbits
 3110              		.align	1
 3111              		.global	vTaskDelay
 3112              		.syntax unified
 3113              		.thumb
 3114              		.thumb_func
 3115              		.fpu fpv4-sp-d16
 3117              	vTaskDelay:
 3118              	.LVL221:
 3119              	.LFB10:
1342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xAlreadyYielded = pdFALSE;
 3120              		.loc 1 1342 2 is_stmt 1 view -0
 3121              		.cfi_startproc
 3122              		@ args = 0, pretend = 0, frame = 0
 3123              		@ frame_needed = 0, uses_anonymous_args = 0
1342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xAlreadyYielded = pdFALSE;
 3124              		.loc 1 1342 2 is_stmt 0 view .LVU878
 3125 0000 10B5     		push	{r4, lr}
 3126              		.cfi_def_cfa_offset 8
 3127              		.cfi_offset 4, -8
 3128              		.cfi_offset 14, -4
1343:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3129              		.loc 1 1343 2 is_stmt 1 view .LVU879
 3130              	.LVL222:
1346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3131              		.loc 1 1346 3 view .LVU880
1346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3132              		.loc 1 1346 5 is_stmt 0 view .LVU881
 3133 0002 A8B1     		cbz	r0, .L235
 3134 0004 0446     		mov	r4, r0
1348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
 3135              		.loc 1 1348 4 is_stmt 1 view .LVU882
 3136 0006 104B     		ldr	r3, .L240
 3137 0008 1B68     		ldr	r3, [r3]
 3138 000a 43B1     		cbz	r3, .L236
ARM GAS  /tmp/cc7Oi1VE.s 			page 166


1348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
 3139              		.loc 1 1348 4 view .LVU883
 3140              	.LBB160:
 3141              	.LBI160:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 3142              		.loc 2 191 30 view .LVU884
 3143              	.LBB161:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3144              		.loc 2 193 1 view .LVU885
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3145              		.loc 2 195 2 view .LVU886
 3146              		.syntax unified
 3147              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3148 000c 4FF05003 			mov r3, #80												
 3149 0010 83F31188 		msr basepri, r3											
 3150 0014 BFF36F8F 		isb														
 3151 0018 BFF34F8F 		dsb														
 3152              	
 3153              	@ 0 "" 2
 3154              	.LVL223:
 3155              		.thumb
 3156              		.syntax unified
 3157              	.L237:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3158              		.loc 2 195 2 is_stmt 0 view .LVU887
 3159              	.LBE161:
 3160              	.LBE160:
1348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
 3161              		.loc 1 1348 4 is_stmt 1 discriminator 1 view .LVU888
1348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
 3162              		.loc 1 1348 4 discriminator 1 view .LVU889
1348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
 3163              		.loc 1 1348 4 discriminator 1 view .LVU890
 3164 001c FEE7     		b	.L237
 3165              	.L236:
1348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
 3166              		.loc 1 1348 45 discriminator 2 view .LVU891
1349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3167              		.loc 1 1349 4 discriminator 2 view .LVU892
 3168 001e FFF7FEFF 		bl	vTaskSuspendAll
 3169              	.LVL224:
1351:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3170              		.loc 1 1351 22 discriminator 2 view .LVU893
1360:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3171              		.loc 1 1360 5 discriminator 2 view .LVU894
 3172 0022 0021     		movs	r1, #0
 3173 0024 2046     		mov	r0, r4
 3174 0026 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 3175              	.LVL225:
1362:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3176              		.loc 1 1362 4 discriminator 2 view .LVU895
1362:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3177              		.loc 1 1362 22 is_stmt 0 discriminator 2 view .LVU896
 3178 002a FFF7FEFF 		bl	xTaskResumeAll
 3179              	.LVL226:
1366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3180              		.loc 1 1366 28 is_stmt 1 discriminator 2 view .LVU897
ARM GAS  /tmp/cc7Oi1VE.s 			page 167


1371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3181              		.loc 1 1371 3 discriminator 2 view .LVU898
1371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3182              		.loc 1 1371 5 is_stmt 0 discriminator 2 view .LVU899
 3183 002e 48B9     		cbnz	r0, .L234
 3184              	.LVL227:
 3185              	.L235:
1373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3186              		.loc 1 1373 4 is_stmt 1 view .LVU900
 3187 0030 4FF0E023 		mov	r3, #-536813568
 3188 0034 4FF08052 		mov	r2, #268435456
 3189 0038 C3F8042D 		str	r2, [r3, #3332]
1373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3190              		.loc 1 1373 4 view .LVU901
 3191              		.syntax unified
 3192              	@ 1373 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 3193 003c BFF34F8F 		dsb
 3194              	@ 0 "" 2
1373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3195              		.loc 1 1373 4 view .LVU902
 3196              	@ 1373 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 3197 0040 BFF36F8F 		isb
 3198              	@ 0 "" 2
1373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3199              		.loc 1 1373 26 view .LVU903
1377:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3200              		.loc 1 1377 28 view .LVU904
 3201              		.thumb
 3202              		.syntax unified
 3203              	.L234:
1379:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3204              		.loc 1 1379 2 is_stmt 0 view .LVU905
 3205 0044 10BD     		pop	{r4, pc}
 3206              	.L241:
 3207 0046 00BF     		.align	2
 3208              	.L240:
 3209 0048 00000000 		.word	.LANCHOR16
 3210              		.cfi_endproc
 3211              	.LFE10:
 3213              		.section	.text.xTaskCatchUpTicks,"ax",%progbits
 3214              		.align	1
 3215              		.global	xTaskCatchUpTicks
 3216              		.syntax unified
 3217              		.thumb
 3218              		.thumb_func
 3219              		.fpu fpv4-sp-d16
 3221              	xTaskCatchUpTicks:
 3222              	.LVL228:
 3223              	.LFB26:
2610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xYieldRequired = pdFALSE;
 3224              		.loc 1 2610 1 is_stmt 1 view -0
 3225              		.cfi_startproc
 3226              		@ args = 0, pretend = 0, frame = 0
 3227              		@ frame_needed = 0, uses_anonymous_args = 0
2611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3228              		.loc 1 2611 1 view .LVU907
2615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cc7Oi1VE.s 			page 168


 3229              		.loc 1 2615 2 view .LVU908
 3230 0000 0B4B     		ldr	r3, .L247
 3231 0002 1B68     		ldr	r3, [r3]
 3232 0004 43B1     		cbz	r3, .L243
2615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3233              		.loc 1 2615 2 view .LVU909
 3234              	.LBB162:
 3235              	.LBI162:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 3236              		.loc 2 191 30 view .LVU910
 3237              	.LBB163:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3238              		.loc 2 193 1 view .LVU911
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3239              		.loc 2 195 2 view .LVU912
 3240              		.syntax unified
 3241              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3242 0006 4FF05003 			mov r3, #80												
 3243 000a 83F31188 		msr basepri, r3											
 3244 000e BFF36F8F 		isb														
 3245 0012 BFF34F8F 		dsb														
 3246              	
 3247              	@ 0 "" 2
 3248              	.LVL229:
 3249              		.thumb
 3250              		.syntax unified
 3251              	.L244:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3252              		.loc 2 195 2 is_stmt 0 view .LVU913
 3253              	.LBE163:
 3254              	.LBE162:
2615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3255              		.loc 1 2615 2 is_stmt 1 discriminator 1 view .LVU914
2615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3256              		.loc 1 2615 2 discriminator 1 view .LVU915
2615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3257              		.loc 1 2615 2 discriminator 1 view .LVU916
 3258 0016 FEE7     		b	.L244
 3259              	.L243:
2610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xYieldRequired = pdFALSE;
 3260              		.loc 1 2610 1 is_stmt 0 discriminator 2 view .LVU917
 3261 0018 10B5     		push	{r4, lr}
 3262              		.cfi_def_cfa_offset 8
 3263              		.cfi_offset 4, -8
 3264              		.cfi_offset 14, -4
 3265 001a 0446     		mov	r4, r0
2615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3266              		.loc 1 2615 43 is_stmt 1 discriminator 2 view .LVU918
2619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xPendedTicks += xTicksToCatchUp;
 3267              		.loc 1 2619 2 discriminator 2 view .LVU919
 3268 001c FFF7FEFF 		bl	vTaskSuspendAll
 3269              	.LVL230:
2620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xYieldRequired = xTaskResumeAll();
 3270              		.loc 1 2620 2 discriminator 2 view .LVU920
2620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xYieldRequired = xTaskResumeAll();
 3271              		.loc 1 2620 15 is_stmt 0 discriminator 2 view .LVU921
 3272 0020 044B     		ldr	r3, .L247+4
ARM GAS  /tmp/cc7Oi1VE.s 			page 169


 3273 0022 1868     		ldr	r0, [r3]
 3274 0024 2044     		add	r0, r0, r4
 3275 0026 1860     		str	r0, [r3]
2621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3276              		.loc 1 2621 2 is_stmt 1 discriminator 2 view .LVU922
2621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3277              		.loc 1 2621 19 is_stmt 0 discriminator 2 view .LVU923
 3278 0028 FFF7FEFF 		bl	xTaskResumeAll
 3279              	.LVL231:
2623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3280              		.loc 1 2623 2 is_stmt 1 discriminator 2 view .LVU924
2624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
 3281              		.loc 1 2624 1 is_stmt 0 discriminator 2 view .LVU925
 3282 002c 10BD     		pop	{r4, pc}
 3283              	.LVL232:
 3284              	.L248:
2624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
 3285              		.loc 1 2624 1 discriminator 2 view .LVU926
 3286 002e 00BF     		.align	2
 3287              	.L247:
 3288 0030 00000000 		.word	.LANCHOR16
 3289 0034 00000000 		.word	.LANCHOR20
 3290              		.cfi_endproc
 3291              	.LFE26:
 3293              		.section	.text.vTaskSwitchContext,"ax",%progbits
 3294              		.align	1
 3295              		.global	vTaskSwitchContext
 3296              		.syntax unified
 3297              		.thumb
 3298              		.thumb_func
 3299              		.fpu fpv4-sp-d16
 3301              	vTaskSwitchContext:
 3302              	.LFB28:
2990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 3303              		.loc 1 2990 1 is_stmt 1 view -0
 3304              		.cfi_startproc
 3305              		@ args = 0, pretend = 0, frame = 0
 3306              		@ frame_needed = 0, uses_anonymous_args = 0
 3307              		@ link register save eliminated.
2991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3308              		.loc 1 2991 2 view .LVU928
2991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3309              		.loc 1 2991 27 is_stmt 0 view .LVU929
 3310 0000 204B     		ldr	r3, .L256
 3311 0002 1B68     		ldr	r3, [r3]
2991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3312              		.loc 1 2991 4 view .LVU930
 3313 0004 1BB1     		cbz	r3, .L250
2995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3314              		.loc 1 2995 3 is_stmt 1 view .LVU931
2995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3315              		.loc 1 2995 17 is_stmt 0 view .LVU932
 3316 0006 204B     		ldr	r3, .L256+4
 3317 0008 0122     		movs	r2, #1
 3318 000a 1A60     		str	r2, [r3]
 3319 000c 7047     		bx	lr
 3320              	.L250:
ARM GAS  /tmp/cc7Oi1VE.s 			page 170


2999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_OUT();
 3321              		.loc 1 2999 3 is_stmt 1 view .LVU933
2999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_OUT();
 3322              		.loc 1 2999 17 is_stmt 0 view .LVU934
 3323 000e 1E4B     		ldr	r3, .L256+4
 3324 0010 0022     		movs	r2, #0
 3325 0012 1A60     		str	r2, [r3]
3000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3326              		.loc 1 3000 27 is_stmt 1 view .LVU935
3030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3327              		.loc 1 3030 33 view .LVU936
 3328              	.LBB164:
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3329              		.loc 1 3041 3 view .LVU937
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3330              		.loc 1 3041 3 view .LVU938
 3331 0014 1D4B     		ldr	r3, .L256+8
 3332 0016 1B68     		ldr	r3, [r3]
 3333              	.LVL233:
 3334              	.LBB165:
 3335              	.LBI165:
 130:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 3336              		.loc 2 130 59 view .LVU939
 3337              	.LBB166:
 132:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3338              		.loc 2 132 2 view .LVU940
 134:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		return ucReturn;
 3339              		.loc 2 134 3 view .LVU941
 3340              		.syntax unified
 3341              	@ 134 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3342 0018 B3FA83F3 		clz r3, r3
 3343              	@ 0 "" 2
 3344              	.LVL234:
 134:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		return ucReturn;
 3345              		.loc 2 134 3 is_stmt 0 view .LVU942
 3346              		.thumb
 3347              		.syntax unified
 3348 001c DBB2     		uxtb	r3, r3
 3349              	.LVL235:
 135:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 3350              		.loc 2 135 3 is_stmt 1 view .LVU943
 135:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 3351              		.loc 2 135 3 is_stmt 0 view .LVU944
 3352              	.LBE166:
 3353              	.LBE165:
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3354              		.loc 1 3041 3 view .LVU945
 3355 001e C3F11F03 		rsb	r3, r3, #31
 3356              	.LVL236:
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3357              		.loc 1 3041 3 is_stmt 1 view .LVU946
 3358 0022 03EB8301 		add	r1, r3, r3, lsl #2
 3359 0026 8A00     		lsls	r2, r1, #2
 3360 0028 1949     		ldr	r1, .L256+12
 3361 002a 8A58     		ldr	r2, [r1, r2]
 3362 002c 42B9     		cbnz	r2, .L252
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
ARM GAS  /tmp/cc7Oi1VE.s 			page 171


 3363              		.loc 1 3041 3 view .LVU947
 3364              	.LBB167:
 3365              	.LBI167:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 3366              		.loc 2 191 30 view .LVU948
 3367              	.LBB168:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3368              		.loc 2 193 1 view .LVU949
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3369              		.loc 2 195 2 view .LVU950
 3370              		.syntax unified
 3371              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3372 002e 4FF05003 			mov r3, #80												
 3373 0032 83F31188 		msr basepri, r3											
 3374 0036 BFF36F8F 		isb														
 3375 003a BFF34F8F 		dsb														
 3376              	
 3377              	@ 0 "" 2
 3378              	.LVL237:
 3379              		.thumb
 3380              		.syntax unified
 3381              	.L253:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3382              		.loc 2 195 2 is_stmt 0 view .LVU951
 3383              	.LBE168:
 3384              	.LBE167:
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3385              		.loc 1 3041 3 is_stmt 1 discriminator 1 view .LVU952
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3386              		.loc 1 3041 3 discriminator 1 view .LVU953
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3387              		.loc 1 3041 3 discriminator 1 view .LVU954
 3388 003e FEE7     		b	.L253
 3389              	.LVL238:
 3390              	.L252:
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3391              		.loc 1 3041 3 discriminator 2 view .LVU955
 3392              	.LBB169:
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3393              		.loc 1 3041 3 discriminator 2 view .LVU956
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3394              		.loc 1 3041 3 discriminator 2 view .LVU957
 3395 0040 1349     		ldr	r1, .L256+12
 3396 0042 03EB8300 		add	r0, r3, r3, lsl #2
 3397 0046 8200     		lsls	r2, r0, #2
 3398 0048 0A44     		add	r2, r2, r1
 3399 004a 5068     		ldr	r0, [r2, #4]
 3400 004c 4068     		ldr	r0, [r0, #4]
 3401 004e 5060     		str	r0, [r2, #4]
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3402              		.loc 1 3041 3 discriminator 2 view .LVU958
 3403 0050 03EB830C 		add	ip, r3, r3, lsl #2
 3404 0054 4FEA8C02 		lsl	r2, ip, #2
 3405 0058 0832     		adds	r2, r2, #8
 3406 005a 1144     		add	r1, r1, r2
 3407 005c 8842     		cmp	r0, r1
 3408 005e 09D0     		beq	.L255
ARM GAS  /tmp/cc7Oi1VE.s 			page 172


 3409              	.L254:
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3410              		.loc 1 3041 3 discriminator 6 view .LVU959
 3411 0060 03EB8303 		add	r3, r3, r3, lsl #2
 3412              	.LVL239:
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3413              		.loc 1 3041 3 is_stmt 0 discriminator 6 view .LVU960
 3414 0064 9A00     		lsls	r2, r3, #2
 3415 0066 0A4B     		ldr	r3, .L256+12
 3416 0068 1344     		add	r3, r3, r2
 3417 006a 5B68     		ldr	r3, [r3, #4]
 3418 006c DA68     		ldr	r2, [r3, #12]
 3419 006e 094B     		ldr	r3, .L256+16
 3420 0070 1A60     		str	r2, [r3]
 3421              	.LBE169:
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3422              		.loc 1 3041 3 is_stmt 1 discriminator 6 view .LVU961
 3423              	.LBE164:
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3424              		.loc 1 3041 37 discriminator 6 view .LVU962
3042:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3425              		.loc 1 3042 26 discriminator 6 view .LVU963
3061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3426              		.loc 1 3061 1 is_stmt 0 discriminator 6 view .LVU964
 3427 0072 7047     		bx	lr
 3428              	.LVL240:
 3429              	.L255:
 3430              	.LBB171:
 3431              	.LBB170:
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3432              		.loc 1 3041 3 is_stmt 1 discriminator 4 view .LVU965
 3433 0074 4068     		ldr	r0, [r0, #4]
 3434 0076 6246     		mov	r2, ip
 3435 0078 9100     		lsls	r1, r2, #2
 3436 007a 054A     		ldr	r2, .L256+12
 3437 007c 0A44     		add	r2, r2, r1
 3438 007e 5060     		str	r0, [r2, #4]
 3439 0080 EEE7     		b	.L254
 3440              	.L257:
 3441 0082 00BF     		.align	2
 3442              	.L256:
 3443 0084 00000000 		.word	.LANCHOR16
 3444 0088 00000000 		.word	.LANCHOR19
 3445 008c 00000000 		.word	.LANCHOR13
 3446 0090 00000000 		.word	.LANCHOR4
 3447 0094 00000000 		.word	.LANCHOR10
 3448              	.LBE170:
 3449              	.LBE171:
 3450              		.cfi_endproc
 3451              	.LFE28:
 3453              		.section	.text.vTaskSuspend,"ax",%progbits
 3454              		.align	1
 3455              		.global	vTaskSuspend
 3456              		.syntax unified
 3457              		.thumb
 3458              		.thumb_func
 3459              		.fpu fpv4-sp-d16
ARM GAS  /tmp/cc7Oi1VE.s 			page 173


 3461              	vTaskSuspend:
 3462              	.LVL241:
 3463              	.LFB14:
1705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 3464              		.loc 1 1705 2 view -0
 3465              		.cfi_startproc
 3466              		@ args = 0, pretend = 0, frame = 0
 3467              		@ frame_needed = 0, uses_anonymous_args = 0
1705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 3468              		.loc 1 1705 2 is_stmt 0 view .LVU967
 3469 0000 38B5     		push	{r3, r4, r5, lr}
 3470              		.cfi_def_cfa_offset 16
 3471              		.cfi_offset 3, -16
 3472              		.cfi_offset 4, -12
 3473              		.cfi_offset 5, -8
 3474              		.cfi_offset 14, -4
 3475 0002 0446     		mov	r4, r0
1706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3476              		.loc 1 1706 2 is_stmt 1 view .LVU968
1708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3477              		.loc 1 1708 3 view .LVU969
 3478 0004 FFF7FEFF 		bl	vPortEnterCritical
 3479              	.LVL242:
1712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3480              		.loc 1 1712 4 view .LVU970
1712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3481              		.loc 1 1712 12 is_stmt 0 view .LVU971
 3482 0008 5CB3     		cbz	r4, .L270
 3483              	.LVL243:
 3484              	.L259:
1714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3485              		.loc 1 1714 30 is_stmt 1 discriminator 4 view .LVU972
1718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3486              		.loc 1 1718 4 discriminator 4 view .LVU973
1718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3487              		.loc 1 1718 8 is_stmt 0 discriminator 4 view .LVU974
 3488 000a 251D     		adds	r5, r4, #4
 3489 000c 2846     		mov	r0, r5
 3490 000e FFF7FEFF 		bl	uxListRemove
 3491              	.LVL244:
1718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3492              		.loc 1 1718 6 discriminator 4 view .LVU975
 3493 0012 68B9     		cbnz	r0, .L260
1720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3494              		.loc 1 1720 5 is_stmt 1 view .LVU976
 3495 0014 E26A     		ldr	r2, [r4, #44]
 3496 0016 02EB8203 		add	r3, r2, r2, lsl #2
 3497 001a 9B00     		lsls	r3, r3, #2
 3498 001c 2B49     		ldr	r1, .L274
 3499 001e CB58     		ldr	r3, [r1, r3]
 3500 0020 33B9     		cbnz	r3, .L260
1720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3501              		.loc 1 1720 5 discriminator 1 view .LVU977
 3502 0022 0123     		movs	r3, #1
 3503 0024 9340     		lsls	r3, r3, r2
 3504 0026 2A49     		ldr	r1, .L274+4
 3505 0028 0A68     		ldr	r2, [r1]
ARM GAS  /tmp/cc7Oi1VE.s 			page 174


 3506 002a 22EA0302 		bic	r2, r2, r3
 3507 002e 0A60     		str	r2, [r1]
 3508              	.L260:
1724:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3509              		.loc 1 1724 29 view .LVU978
1728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3510              		.loc 1 1728 4 view .LVU979
1728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3511              		.loc 1 1728 8 is_stmt 0 view .LVU980
 3512 0030 A36A     		ldr	r3, [r4, #40]
1728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3513              		.loc 1 1728 6 view .LVU981
 3514 0032 1BB1     		cbz	r3, .L261
1730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3515              		.loc 1 1730 5 is_stmt 1 view .LVU982
1730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3516              		.loc 1 1730 14 is_stmt 0 view .LVU983
 3517 0034 04F11800 		add	r0, r4, #24
 3518 0038 FFF7FEFF 		bl	uxListRemove
 3519              	.LVL245:
 3520              	.L261:
1734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3521              		.loc 1 1734 29 is_stmt 1 view .LVU984
1737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3522              		.loc 1 1737 4 view .LVU985
 3523 003c 2946     		mov	r1, r5
 3524 003e 2548     		ldr	r0, .L274+8
 3525 0040 FFF7FEFF 		bl	vListInsertEnd
 3526              	.LVL246:
1741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3527              		.loc 1 1741 5 view .LVU986
1741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3528              		.loc 1 1741 14 is_stmt 0 view .LVU987
 3529 0044 94F85030 		ldrb	r3, [r4, #80]	@ zero_extendqisi2
 3530 0048 DBB2     		uxtb	r3, r3
1741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3531              		.loc 1 1741 7 view .LVU988
 3532 004a 012B     		cmp	r3, #1
 3533 004c 0CD0     		beq	.L271
 3534              	.L262:
1750:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3535              		.loc 1 1750 3 is_stmt 1 view .LVU989
 3536 004e FFF7FEFF 		bl	vPortExitCritical
 3537              	.LVL247:
1752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3538              		.loc 1 1752 3 view .LVU990
1752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3539              		.loc 1 1752 25 is_stmt 0 view .LVU991
 3540 0052 214B     		ldr	r3, .L274+12
 3541 0054 1B68     		ldr	r3, [r3]
1752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3542              		.loc 1 1752 5 view .LVU992
 3543 0056 5BB9     		cbnz	r3, .L272
 3544              	.L263:
1764:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3545              		.loc 1 1764 28 is_stmt 1 view .LVU993
1767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
ARM GAS  /tmp/cc7Oi1VE.s 			page 175


 3546              		.loc 1 1767 3 view .LVU994
1767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3547              		.loc 1 1767 13 is_stmt 0 view .LVU995
 3548 0058 204B     		ldr	r3, .L274+16
 3549 005a 1B68     		ldr	r3, [r3]
1767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3550              		.loc 1 1767 5 view .LVU996
 3551 005c A342     		cmp	r3, r4
 3552 005e 0ED0     		beq	.L273
 3553              	.L258:
1798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3554              		.loc 1 1798 2 view .LVU997
 3555 0060 38BD     		pop	{r3, r4, r5, pc}
 3556              	.LVL248:
 3557              	.L270:
1712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3558              		.loc 1 1712 12 discriminator 1 view .LVU998
 3559 0062 1E4B     		ldr	r3, .L274+16
 3560 0064 1C68     		ldr	r4, [r3]
 3561              	.LVL249:
1712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3562              		.loc 1 1712 12 discriminator 1 view .LVU999
 3563 0066 D0E7     		b	.L259
 3564              	.LVL250:
 3565              	.L271:
1745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3566              		.loc 1 1745 6 is_stmt 1 view .LVU1000
1745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3567              		.loc 1 1745 27 is_stmt 0 view .LVU1001
 3568 0068 0023     		movs	r3, #0
 3569 006a 84F85030 		strb	r3, [r4, #80]
 3570 006e EEE7     		b	.L262
 3571              	.L272:
1756:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3572              		.loc 1 1756 4 is_stmt 1 view .LVU1002
 3573 0070 FFF7FEFF 		bl	vPortEnterCritical
 3574              	.LVL251:
1758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3575              		.loc 1 1758 5 view .LVU1003
 3576 0074 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 3577              	.LVL252:
1760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3578              		.loc 1 1760 4 view .LVU1004
 3579 0078 FFF7FEFF 		bl	vPortExitCritical
 3580              	.LVL253:
 3581 007c ECE7     		b	.L263
 3582              	.L273:
1769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3583              		.loc 1 1769 4 view .LVU1005
1769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3584              		.loc 1 1769 26 is_stmt 0 view .LVU1006
 3585 007e 164B     		ldr	r3, .L274+12
 3586 0080 1B68     		ldr	r3, [r3]
1769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3587              		.loc 1 1769 6 view .LVU1007
 3588 0082 B3B1     		cbz	r3, .L265
1772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
ARM GAS  /tmp/cc7Oi1VE.s 			page 176


 3589              		.loc 1 1772 5 is_stmt 1 view .LVU1008
 3590 0084 164B     		ldr	r3, .L274+20
 3591 0086 1B68     		ldr	r3, [r3]
 3592 0088 43B1     		cbz	r3, .L266
1772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 3593              		.loc 1 1772 5 view .LVU1009
 3594              	.LBB172:
 3595              	.LBI172:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 3596              		.loc 2 191 30 view .LVU1010
 3597              	.LBB173:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3598              		.loc 2 193 1 view .LVU1011
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3599              		.loc 2 195 2 view .LVU1012
 3600              		.syntax unified
 3601              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3602 008a 4FF05003 			mov r3, #80												
 3603 008e 83F31188 		msr basepri, r3											
 3604 0092 BFF36F8F 		isb														
 3605 0096 BFF34F8F 		dsb														
 3606              	
 3607              	@ 0 "" 2
 3608              	.LVL254:
 3609              		.thumb
 3610              		.syntax unified
 3611              	.L267:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3612              		.loc 2 195 2 is_stmt 0 view .LVU1013
 3613              	.LBE173:
 3614              	.LBE172:
1772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 3615              		.loc 1 1772 5 is_stmt 1 discriminator 1 view .LVU1014
1772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 3616              		.loc 1 1772 5 discriminator 1 view .LVU1015
1772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 3617              		.loc 1 1772 5 discriminator 1 view .LVU1016
 3618 009a FEE7     		b	.L267
 3619              	.L266:
1772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 3620              		.loc 1 1772 46 discriminator 2 view .LVU1017
1773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3621              		.loc 1 1773 5 discriminator 2 view .LVU1018
 3622 009c 4FF0E023 		mov	r3, #-536813568
 3623 00a0 4FF08052 		mov	r2, #268435456
 3624 00a4 C3F8042D 		str	r2, [r3, #3332]
1773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3625              		.loc 1 1773 5 discriminator 2 view .LVU1019
 3626              		.syntax unified
 3627              	@ 1773 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 3628 00a8 BFF34F8F 		dsb
 3629              	@ 0 "" 2
1773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3630              		.loc 1 1773 5 discriminator 2 view .LVU1020
 3631              	@ 1773 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 3632 00ac BFF36F8F 		isb
 3633              	@ 0 "" 2
ARM GAS  /tmp/cc7Oi1VE.s 			page 177


1773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3634              		.loc 1 1773 27 discriminator 2 view .LVU1021
 3635              		.thumb
 3636              		.syntax unified
 3637 00b0 D6E7     		b	.L258
 3638              	.L265:
1780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3639              		.loc 1 1780 5 view .LVU1022
1780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3640              		.loc 1 1780 9 is_stmt 0 view .LVU1023
 3641 00b2 084B     		ldr	r3, .L274+8
 3642 00b4 1A68     		ldr	r2, [r3]
1780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3643              		.loc 1 1780 56 view .LVU1024
 3644 00b6 0B4B     		ldr	r3, .L274+24
 3645 00b8 1B68     		ldr	r3, [r3]
1780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3646              		.loc 1 1780 7 view .LVU1025
 3647 00ba 9A42     		cmp	r2, r3
 3648 00bc 03D1     		bne	.L268
1786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3649              		.loc 1 1786 6 is_stmt 1 view .LVU1026
1786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3650              		.loc 1 1786 19 is_stmt 0 view .LVU1027
 3651 00be 074B     		ldr	r3, .L274+16
 3652 00c0 0022     		movs	r2, #0
 3653 00c2 1A60     		str	r2, [r3]
 3654 00c4 CCE7     		b	.L258
 3655              	.L268:
1790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3656              		.loc 1 1790 6 is_stmt 1 view .LVU1028
 3657 00c6 FFF7FEFF 		bl	vTaskSwitchContext
 3658              	.LVL255:
1796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3659              		.loc 1 1796 28 view .LVU1029
1798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3660              		.loc 1 1798 2 is_stmt 0 view .LVU1030
 3661 00ca C9E7     		b	.L258
 3662              	.L275:
 3663              		.align	2
 3664              	.L274:
 3665 00cc 00000000 		.word	.LANCHOR4
 3666 00d0 00000000 		.word	.LANCHOR13
 3667 00d4 00000000 		.word	.LANCHOR0
 3668 00d8 00000000 		.word	.LANCHOR11
 3669 00dc 00000000 		.word	.LANCHOR10
 3670 00e0 00000000 		.word	.LANCHOR16
 3671 00e4 00000000 		.word	.LANCHOR9
 3672              		.cfi_endproc
 3673              	.LFE14:
 3675              		.section	.text.vTaskPlaceOnEventList,"ax",%progbits
 3676              		.align	1
 3677              		.global	vTaskPlaceOnEventList
 3678              		.syntax unified
 3679              		.thumb
 3680              		.thumb_func
 3681              		.fpu fpv4-sp-d16
ARM GAS  /tmp/cc7Oi1VE.s 			page 178


 3683              	vTaskPlaceOnEventList:
 3684              	.LVL256:
 3685              	.LFB29:
3065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
 3686              		.loc 1 3065 1 is_stmt 1 view -0
 3687              		.cfi_startproc
 3688              		@ args = 0, pretend = 0, frame = 0
 3689              		@ frame_needed = 0, uses_anonymous_args = 0
3066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3690              		.loc 1 3066 2 view .LVU1032
 3691 0000 58B1     		cbz	r0, .L281
3065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
 3692              		.loc 1 3065 1 is_stmt 0 discriminator 2 view .LVU1033
 3693 0002 10B5     		push	{r4, lr}
 3694              		.cfi_def_cfa_offset 8
 3695              		.cfi_offset 4, -8
 3696              		.cfi_offset 14, -4
 3697 0004 0C46     		mov	r4, r1
3066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3698              		.loc 1 3066 29 is_stmt 1 discriminator 2 view .LVU1034
3075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3699              		.loc 1 3075 2 discriminator 2 view .LVU1035
3075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3700              		.loc 1 3075 43 is_stmt 0 discriminator 2 view .LVU1036
 3701 0006 094A     		ldr	r2, .L282
 3702 0008 1168     		ldr	r1, [r2]
 3703              	.LVL257:
3075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3704              		.loc 1 3075 2 discriminator 2 view .LVU1037
 3705 000a 1831     		adds	r1, r1, #24
 3706 000c FFF7FEFF 		bl	vListInsert
 3707              	.LVL258:
3077:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3708              		.loc 1 3077 2 is_stmt 1 discriminator 2 view .LVU1038
 3709 0010 0121     		movs	r1, #1
 3710 0012 2046     		mov	r0, r4
 3711 0014 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 3712              	.LVL259:
3078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3713              		.loc 1 3078 1 is_stmt 0 discriminator 2 view .LVU1039
 3714 0018 10BD     		pop	{r4, pc}
 3715              	.LVL260:
 3716              	.L281:
 3717              		.cfi_def_cfa_offset 0
 3718              		.cfi_restore 4
 3719              		.cfi_restore 14
3066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3720              		.loc 1 3066 2 is_stmt 1 view .LVU1040
 3721              	.LBB174:
 3722              	.LBI174:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 3723              		.loc 2 191 30 view .LVU1041
 3724              	.LBB175:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3725              		.loc 2 193 1 view .LVU1042
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3726              		.loc 2 195 2 view .LVU1043
ARM GAS  /tmp/cc7Oi1VE.s 			page 179


 3727              		.syntax unified
 3728              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3729 001a 4FF05003 			mov r3, #80												
 3730 001e 83F31188 		msr basepri, r3											
 3731 0022 BFF36F8F 		isb														
 3732 0026 BFF34F8F 		dsb														
 3733              	
 3734              	@ 0 "" 2
 3735              	.LVL261:
 3736              		.thumb
 3737              		.syntax unified
 3738              	.L278:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3739              		.loc 2 195 2 is_stmt 0 view .LVU1044
 3740              	.LBE175:
 3741              	.LBE174:
3066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3742              		.loc 1 3066 2 is_stmt 1 discriminator 1 view .LVU1045
3066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3743              		.loc 1 3066 2 discriminator 1 view .LVU1046
3066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3744              		.loc 1 3066 2 discriminator 1 view .LVU1047
 3745 002a FEE7     		b	.L278
 3746              	.L283:
 3747              		.align	2
 3748              	.L282:
 3749 002c 00000000 		.word	.LANCHOR10
 3750              		.cfi_endproc
 3751              	.LFE29:
 3753              		.section	.text.vTaskPlaceOnUnorderedEventList,"ax",%progbits
 3754              		.align	1
 3755              		.global	vTaskPlaceOnUnorderedEventList
 3756              		.syntax unified
 3757              		.thumb
 3758              		.thumb_func
 3759              		.fpu fpv4-sp-d16
 3761              	vTaskPlaceOnUnorderedEventList:
 3762              	.LVL262:
 3763              	.LFB30:
3082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
 3764              		.loc 1 3082 1 view -0
 3765              		.cfi_startproc
 3766              		@ args = 0, pretend = 0, frame = 0
 3767              		@ frame_needed = 0, uses_anonymous_args = 0
3083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3768              		.loc 1 3083 2 view .LVU1049
 3769 0000 70B1     		cbz	r0, .L291
3082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
 3770              		.loc 1 3082 1 is_stmt 0 discriminator 2 view .LVU1050
 3771 0002 10B5     		push	{r4, lr}
 3772              		.cfi_def_cfa_offset 8
 3773              		.cfi_offset 4, -8
 3774              		.cfi_offset 14, -4
 3775 0004 1446     		mov	r4, r2
 3776 0006 0246     		mov	r2, r0
 3777              	.LVL263:
3083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cc7Oi1VE.s 			page 180


 3778              		.loc 1 3083 29 is_stmt 1 discriminator 2 view .LVU1051
3087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3779              		.loc 1 3087 2 discriminator 2 view .LVU1052
 3780 0008 114B     		ldr	r3, .L292
 3781 000a 1B68     		ldr	r3, [r3]
 3782 000c 8BB9     		cbnz	r3, .L287
3087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3783              		.loc 1 3087 2 view .LVU1053
 3784              	.LBB176:
 3785              	.LBI176:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 3786              		.loc 2 191 30 view .LVU1054
 3787              	.LBB177:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3788              		.loc 2 193 1 view .LVU1055
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3789              		.loc 2 195 2 view .LVU1056
 3790              		.syntax unified
 3791              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3792 000e 4FF05003 			mov r3, #80												
 3793 0012 83F31188 		msr basepri, r3											
 3794 0016 BFF36F8F 		isb														
 3795 001a BFF34F8F 		dsb														
 3796              	
 3797              	@ 0 "" 2
 3798              	.LVL264:
 3799              		.thumb
 3800              		.syntax unified
 3801              	.L288:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3802              		.loc 2 195 2 is_stmt 0 view .LVU1057
 3803              	.LBE177:
 3804              	.LBE176:
3087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3805              		.loc 1 3087 2 is_stmt 1 discriminator 2 view .LVU1058
3087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3806              		.loc 1 3087 2 discriminator 2 view .LVU1059
3087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3807              		.loc 1 3087 2 discriminator 2 view .LVU1060
 3808 001e FEE7     		b	.L288
 3809              	.LVL265:
 3810              	.L291:
 3811              		.cfi_def_cfa_offset 0
 3812              		.cfi_restore 4
 3813              		.cfi_restore 14
3083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3814              		.loc 1 3083 2 view .LVU1061
 3815              	.LBB178:
 3816              	.LBI178:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 3817              		.loc 2 191 30 view .LVU1062
 3818              	.LBB179:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3819              		.loc 2 193 1 view .LVU1063
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3820              		.loc 2 195 2 view .LVU1064
 3821              		.syntax unified
ARM GAS  /tmp/cc7Oi1VE.s 			page 181


 3822              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3823 0020 4FF05003 			mov r3, #80												
 3824 0024 83F31188 		msr basepri, r3											
 3825 0028 BFF36F8F 		isb														
 3826 002c BFF34F8F 		dsb														
 3827              	
 3828              	@ 0 "" 2
 3829              	.LVL266:
 3830              		.thumb
 3831              		.syntax unified
 3832              	.L286:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3833              		.loc 2 195 2 is_stmt 0 view .LVU1065
 3834              	.LBE179:
 3835              	.LBE178:
3083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3836              		.loc 1 3083 2 is_stmt 1 discriminator 1 view .LVU1066
3083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3837              		.loc 1 3083 2 discriminator 1 view .LVU1067
3083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3838              		.loc 1 3083 2 discriminator 1 view .LVU1068
 3839 0030 FEE7     		b	.L286
 3840              	.LVL267:
 3841              	.L287:
 3842              		.cfi_def_cfa_offset 8
 3843              		.cfi_offset 4, -8
 3844              		.cfi_offset 14, -4
3087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3845              		.loc 1 3087 43 discriminator 2 view .LVU1069
3092:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3846              		.loc 1 3092 2 discriminator 2 view .LVU1070
 3847 0032 084B     		ldr	r3, .L292+4
 3848 0034 1868     		ldr	r0, [r3]
 3849              	.LVL268:
3092:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3850              		.loc 1 3092 2 is_stmt 0 discriminator 2 view .LVU1071
 3851 0036 41F00041 		orr	r1, r1, #-2147483648
 3852              	.LVL269:
3092:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3853              		.loc 1 3092 2 discriminator 2 view .LVU1072
 3854 003a 8161     		str	r1, [r0, #24]
3099:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3855              		.loc 1 3099 2 is_stmt 1 discriminator 2 view .LVU1073
3099:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3856              		.loc 1 3099 46 is_stmt 0 discriminator 2 view .LVU1074
 3857 003c 1968     		ldr	r1, [r3]
3099:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3858              		.loc 1 3099 2 discriminator 2 view .LVU1075
 3859 003e 1831     		adds	r1, r1, #24
 3860 0040 1046     		mov	r0, r2
 3861 0042 FFF7FEFF 		bl	vListInsertEnd
 3862              	.LVL270:
3101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3863              		.loc 1 3101 2 is_stmt 1 discriminator 2 view .LVU1076
 3864 0046 0121     		movs	r1, #1
 3865 0048 2046     		mov	r0, r4
 3866 004a FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
ARM GAS  /tmp/cc7Oi1VE.s 			page 182


 3867              	.LVL271:
3102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3868              		.loc 1 3102 1 is_stmt 0 discriminator 2 view .LVU1077
 3869 004e 10BD     		pop	{r4, pc}
 3870              	.LVL272:
 3871              	.L293:
3102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3872              		.loc 1 3102 1 discriminator 2 view .LVU1078
 3873              		.align	2
 3874              	.L292:
 3875 0050 00000000 		.word	.LANCHOR16
 3876 0054 00000000 		.word	.LANCHOR10
 3877              		.cfi_endproc
 3878              	.LFE30:
 3880              		.section	.text.xTaskRemoveFromEventList,"ax",%progbits
 3881              		.align	1
 3882              		.global	xTaskRemoveFromEventList
 3883              		.syntax unified
 3884              		.thumb
 3885              		.thumb_func
 3886              		.fpu fpv4-sp-d16
 3888              	xTaskRemoveFromEventList:
 3889              	.LVL273:
 3890              	.LFB31:
3139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
 3891              		.loc 1 3139 1 is_stmt 1 view -0
 3892              		.cfi_startproc
 3893              		@ args = 0, pretend = 0, frame = 0
 3894              		@ frame_needed = 0, uses_anonymous_args = 0
3139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
 3895              		.loc 1 3139 1 is_stmt 0 view .LVU1080
 3896 0000 38B5     		push	{r3, r4, r5, lr}
 3897              		.cfi_def_cfa_offset 16
 3898              		.cfi_offset 3, -16
 3899              		.cfi_offset 4, -12
 3900              		.cfi_offset 5, -8
 3901              		.cfi_offset 14, -4
3140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
 3902              		.loc 1 3140 1 is_stmt 1 view .LVU1081
3141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3903              		.loc 1 3141 1 view .LVU1082
3156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 3904              		.loc 1 3156 2 view .LVU1083
3156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 3905              		.loc 1 3156 19 is_stmt 0 view .LVU1084
 3906 0002 C368     		ldr	r3, [r0, #12]
3156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 3907              		.loc 1 3156 17 view .LVU1085
 3908 0004 DC68     		ldr	r4, [r3, #12]
 3909              	.LVL274:
3157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 3910              		.loc 1 3157 2 is_stmt 1 view .LVU1086
 3911 0006 24B3     		cbz	r4, .L302
3157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 3912              		.loc 1 3157 32 discriminator 2 view .LVU1087
3158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3913              		.loc 1 3158 2 discriminator 2 view .LVU1088
ARM GAS  /tmp/cc7Oi1VE.s 			page 183


3158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3914              		.loc 1 3158 11 is_stmt 0 discriminator 2 view .LVU1089
 3915 0008 04F11805 		add	r5, r4, #24
 3916 000c 2846     		mov	r0, r5
 3917              	.LVL275:
3158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3918              		.loc 1 3158 11 discriminator 2 view .LVU1090
 3919 000e FFF7FEFF 		bl	uxListRemove
 3920              	.LVL276:
3160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3921              		.loc 1 3160 2 is_stmt 1 discriminator 2 view .LVU1091
3160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3922              		.loc 1 3160 27 is_stmt 0 discriminator 2 view .LVU1092
 3923 0012 184B     		ldr	r3, .L303
 3924 0014 1B68     		ldr	r3, [r3]
3160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3925              		.loc 1 3160 4 discriminator 2 view .LVU1093
 3926 0016 2BBB     		cbnz	r3, .L297
3162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddTaskToReadyList( pxUnblockedTCB );
 3927              		.loc 1 3162 3 is_stmt 1 view .LVU1094
3162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddTaskToReadyList( pxUnblockedTCB );
 3928              		.loc 1 3162 12 is_stmt 0 view .LVU1095
 3929 0018 251D     		adds	r5, r4, #4
 3930 001a 2846     		mov	r0, r5
 3931 001c FFF7FEFF 		bl	uxListRemove
 3932              	.LVL277:
3163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3933              		.loc 1 3163 3 is_stmt 1 view .LVU1096
3163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3934              		.loc 1 3163 3 view .LVU1097
 3935 0020 E06A     		ldr	r0, [r4, #44]
 3936 0022 0123     		movs	r3, #1
 3937 0024 8340     		lsls	r3, r3, r0
 3938 0026 144A     		ldr	r2, .L303+4
 3939 0028 1168     		ldr	r1, [r2]
 3940 002a 0B43     		orrs	r3, r3, r1
 3941 002c 1360     		str	r3, [r2]
3163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3942              		.loc 1 3163 3 view .LVU1098
 3943 002e 00EB8000 		add	r0, r0, r0, lsl #2
 3944 0032 2946     		mov	r1, r5
 3945 0034 114B     		ldr	r3, .L303+8
 3946 0036 03EB8000 		add	r0, r3, r0, lsl #2
 3947 003a FFF7FEFF 		bl	vListInsertEnd
 3948              	.LVL278:
3163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3949              		.loc 1 3163 42 view .LVU1099
 3950              	.L298:
3186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3951              		.loc 1 3186 2 view .LVU1100
3186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3952              		.loc 1 3186 20 is_stmt 0 view .LVU1101
 3953 003e E26A     		ldr	r2, [r4, #44]
3186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3954              		.loc 1 3186 47 view .LVU1102
 3955 0040 0F4B     		ldr	r3, .L303+12
 3956 0042 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/cc7Oi1VE.s 			page 184


 3957 0044 DB6A     		ldr	r3, [r3, #44]
3186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3958              		.loc 1 3186 4 view .LVU1103
 3959 0046 9A42     		cmp	r2, r3
 3960 0048 11D9     		bls	.L300
3191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3961              		.loc 1 3191 3 is_stmt 1 view .LVU1104
 3962              	.LVL279:
3195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3963              		.loc 1 3195 3 view .LVU1105
3195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3964              		.loc 1 3195 17 is_stmt 0 view .LVU1106
 3965 004a 0120     		movs	r0, #1
 3966 004c 0D4B     		ldr	r3, .L303+16
 3967 004e 1860     		str	r0, [r3]
 3968              	.LVL280:
 3969              	.L294:
3203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3970              		.loc 1 3203 1 view .LVU1107
 3971 0050 38BD     		pop	{r3, r4, r5, pc}
 3972              	.LVL281:
 3973              	.L302:
3157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 3974              		.loc 1 3157 2 is_stmt 1 view .LVU1108
 3975              	.LBB180:
 3976              	.LBI180:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 3977              		.loc 2 191 30 view .LVU1109
 3978              	.LBB181:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3979              		.loc 2 193 1 view .LVU1110
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3980              		.loc 2 195 2 view .LVU1111
 3981              		.syntax unified
 3982              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3983 0052 4FF05003 			mov r3, #80												
 3984 0056 83F31188 		msr basepri, r3											
 3985 005a BFF36F8F 		isb														
 3986 005e BFF34F8F 		dsb														
 3987              	
 3988              	@ 0 "" 2
 3989              	.LVL282:
 3990              		.thumb
 3991              		.syntax unified
 3992              	.L296:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3993              		.loc 2 195 2 is_stmt 0 view .LVU1112
 3994              	.LBE181:
 3995              	.LBE180:
3157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 3996              		.loc 1 3157 2 is_stmt 1 discriminator 1 view .LVU1113
3157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 3997              		.loc 1 3157 2 discriminator 1 view .LVU1114
3157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 3998              		.loc 1 3157 2 discriminator 1 view .LVU1115
 3999 0062 FEE7     		b	.L296
 4000              	.LVL283:
ARM GAS  /tmp/cc7Oi1VE.s 			page 185


 4001              	.L297:
3183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4002              		.loc 1 3183 3 view .LVU1116
 4003 0064 2946     		mov	r1, r5
 4004 0066 0848     		ldr	r0, .L303+20
 4005 0068 FFF7FEFF 		bl	vListInsertEnd
 4006              	.LVL284:
 4007 006c E7E7     		b	.L298
 4008              	.L300:
3199:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4009              		.loc 1 3199 11 is_stmt 0 view .LVU1117
 4010 006e 0020     		movs	r0, #0
 4011              	.LVL285:
3202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 4012              		.loc 1 3202 2 is_stmt 1 view .LVU1118
3202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 4013              		.loc 1 3202 9 is_stmt 0 view .LVU1119
 4014 0070 EEE7     		b	.L294
 4015              	.L304:
 4016 0072 00BF     		.align	2
 4017              	.L303:
 4018 0074 00000000 		.word	.LANCHOR16
 4019 0078 00000000 		.word	.LANCHOR13
 4020 007c 00000000 		.word	.LANCHOR4
 4021 0080 00000000 		.word	.LANCHOR10
 4022 0084 00000000 		.word	.LANCHOR19
 4023 0088 00000000 		.word	.LANCHOR1
 4024              		.cfi_endproc
 4025              	.LFE31:
 4027              		.section	.text.vTaskRemoveFromUnorderedEventList,"ax",%progbits
 4028              		.align	1
 4029              		.global	vTaskRemoveFromUnorderedEventList
 4030              		.syntax unified
 4031              		.thumb
 4032              		.thumb_func
 4033              		.fpu fpv4-sp-d16
 4035              	vTaskRemoveFromUnorderedEventList:
 4036              	.LVL286:
 4037              	.LFB32:
3207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
 4038              		.loc 1 3207 1 is_stmt 1 view -0
 4039              		.cfi_startproc
 4040              		@ args = 0, pretend = 0, frame = 0
 4041              		@ frame_needed = 0, uses_anonymous_args = 0
3207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
 4042              		.loc 1 3207 1 is_stmt 0 view .LVU1121
 4043 0000 38B5     		push	{r3, r4, r5, lr}
 4044              		.cfi_def_cfa_offset 16
 4045              		.cfi_offset 3, -16
 4046              		.cfi_offset 4, -12
 4047              		.cfi_offset 5, -8
 4048              		.cfi_offset 14, -4
3208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4049              		.loc 1 3208 1 is_stmt 1 view .LVU1122
3212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4050              		.loc 1 3212 2 view .LVU1123
 4051 0002 1C4B     		ldr	r3, .L313
ARM GAS  /tmp/cc7Oi1VE.s 			page 186


 4052 0004 1B68     		ldr	r3, [r3]
 4053 0006 43B9     		cbnz	r3, .L306
3212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4054              		.loc 1 3212 2 view .LVU1124
 4055              	.LBB182:
 4056              	.LBI182:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 4057              		.loc 2 191 30 view .LVU1125
 4058              	.LBB183:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 4059              		.loc 2 193 1 view .LVU1126
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4060              		.loc 2 195 2 view .LVU1127
 4061              		.syntax unified
 4062              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 4063 0008 4FF05003 			mov r3, #80												
 4064 000c 83F31188 		msr basepri, r3											
 4065 0010 BFF36F8F 		isb														
 4066 0014 BFF34F8F 		dsb														
 4067              	
 4068              	@ 0 "" 2
 4069              	.LVL287:
 4070              		.thumb
 4071              		.syntax unified
 4072              	.L307:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4073              		.loc 2 195 2 is_stmt 0 view .LVU1128
 4074              	.LBE183:
 4075              	.LBE182:
3212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4076              		.loc 1 3212 2 is_stmt 1 discriminator 1 view .LVU1129
3212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4077              		.loc 1 3212 2 discriminator 1 view .LVU1130
3212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4078              		.loc 1 3212 2 discriminator 1 view .LVU1131
 4079 0018 FEE7     		b	.L307
 4080              	.L306:
3212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4081              		.loc 1 3212 49 discriminator 2 view .LVU1132
3215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4082              		.loc 1 3215 2 discriminator 2 view .LVU1133
 4083 001a 41F00041 		orr	r1, r1, #-2147483648
 4084              	.LVL288:
3215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4085              		.loc 1 3215 2 is_stmt 0 discriminator 2 view .LVU1134
 4086 001e 0160     		str	r1, [r0]
3219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 4087              		.loc 1 3219 2 is_stmt 1 discriminator 2 view .LVU1135
3219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 4088              		.loc 1 3219 17 is_stmt 0 discriminator 2 view .LVU1136
 4089 0020 C468     		ldr	r4, [r0, #12]
 4090              	.LVL289:
3220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 4091              		.loc 1 3220 2 is_stmt 1 discriminator 2 view .LVU1137
 4092 0022 F4B1     		cbz	r4, .L312
3220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 4093              		.loc 1 3220 32 discriminator 2 view .LVU1138
ARM GAS  /tmp/cc7Oi1VE.s 			page 187


3221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4094              		.loc 1 3221 2 discriminator 2 view .LVU1139
3221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4095              		.loc 1 3221 11 is_stmt 0 discriminator 2 view .LVU1140
 4096 0024 FFF7FEFF 		bl	uxListRemove
 4097              	.LVL290:
3240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvAddTaskToReadyList( pxUnblockedTCB );
 4098              		.loc 1 3240 2 is_stmt 1 discriminator 2 view .LVU1141
3240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvAddTaskToReadyList( pxUnblockedTCB );
 4099              		.loc 1 3240 11 is_stmt 0 discriminator 2 view .LVU1142
 4100 0028 251D     		adds	r5, r4, #4
 4101 002a 2846     		mov	r0, r5
 4102 002c FFF7FEFF 		bl	uxListRemove
 4103              	.LVL291:
3241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4104              		.loc 1 3241 2 is_stmt 1 discriminator 2 view .LVU1143
3241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4105              		.loc 1 3241 2 discriminator 2 view .LVU1144
 4106 0030 E06A     		ldr	r0, [r4, #44]
 4107 0032 0123     		movs	r3, #1
 4108 0034 8340     		lsls	r3, r3, r0
 4109 0036 104A     		ldr	r2, .L313+4
 4110 0038 1168     		ldr	r1, [r2]
 4111 003a 0B43     		orrs	r3, r3, r1
 4112 003c 1360     		str	r3, [r2]
3241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4113              		.loc 1 3241 2 discriminator 2 view .LVU1145
 4114 003e 00EB8000 		add	r0, r0, r0, lsl #2
 4115 0042 2946     		mov	r1, r5
 4116 0044 0D4B     		ldr	r3, .L313+8
 4117 0046 03EB8000 		add	r0, r3, r0, lsl #2
 4118 004a FFF7FEFF 		bl	vListInsertEnd
 4119              	.LVL292:
3241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4120              		.loc 1 3241 41 discriminator 2 view .LVU1146
3243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 4121              		.loc 1 3243 2 discriminator 2 view .LVU1147
3243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 4122              		.loc 1 3243 20 is_stmt 0 discriminator 2 view .LVU1148
 4123 004e E26A     		ldr	r2, [r4, #44]
3243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 4124              		.loc 1 3243 47 discriminator 2 view .LVU1149
 4125 0050 0B4B     		ldr	r3, .L313+12
 4126 0052 1B68     		ldr	r3, [r3]
 4127 0054 DB6A     		ldr	r3, [r3, #44]
3243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 4128              		.loc 1 3243 4 discriminator 2 view .LVU1150
 4129 0056 9A42     		cmp	r2, r3
 4130 0058 02D9     		bls	.L305
3249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4131              		.loc 1 3249 3 is_stmt 1 view .LVU1151
3249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4132              		.loc 1 3249 17 is_stmt 0 view .LVU1152
 4133 005a 0A4B     		ldr	r3, .L313+16
 4134 005c 0122     		movs	r2, #1
 4135 005e 1A60     		str	r2, [r3]
 4136              	.L305:
ARM GAS  /tmp/cc7Oi1VE.s 			page 188


3251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 4137              		.loc 1 3251 1 view .LVU1153
 4138 0060 38BD     		pop	{r3, r4, r5, pc}
 4139              	.LVL293:
 4140              	.L312:
3220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 4141              		.loc 1 3220 2 is_stmt 1 view .LVU1154
 4142              	.LBB184:
 4143              	.LBI184:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 4144              		.loc 2 191 30 view .LVU1155
 4145              	.LBB185:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 4146              		.loc 2 193 1 view .LVU1156
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4147              		.loc 2 195 2 view .LVU1157
 4148              		.syntax unified
 4149              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 4150 0062 4FF05003 			mov r3, #80												
 4151 0066 83F31188 		msr basepri, r3											
 4152 006a BFF36F8F 		isb														
 4153 006e BFF34F8F 		dsb														
 4154              	
 4155              	@ 0 "" 2
 4156              	.LVL294:
 4157              		.thumb
 4158              		.syntax unified
 4159              	.L309:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4160              		.loc 2 195 2 is_stmt 0 view .LVU1158
 4161              	.LBE185:
 4162              	.LBE184:
3220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 4163              		.loc 1 3220 2 is_stmt 1 discriminator 2 view .LVU1159
3220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 4164              		.loc 1 3220 2 discriminator 2 view .LVU1160
3220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 4165              		.loc 1 3220 2 discriminator 2 view .LVU1161
 4166 0072 FEE7     		b	.L309
 4167              	.L314:
 4168              		.align	2
 4169              	.L313:
 4170 0074 00000000 		.word	.LANCHOR16
 4171 0078 00000000 		.word	.LANCHOR13
 4172 007c 00000000 		.word	.LANCHOR4
 4173 0080 00000000 		.word	.LANCHOR10
 4174 0084 00000000 		.word	.LANCHOR19
 4175              		.cfi_endproc
 4176              	.LFE32:
 4178              		.section	.text.vTaskSetTimeOutState,"ax",%progbits
 4179              		.align	1
 4180              		.global	vTaskSetTimeOutState
 4181              		.syntax unified
 4182              		.thumb
 4183              		.thumb_func
 4184              		.fpu fpv4-sp-d16
 4186              	vTaskSetTimeOutState:
ARM GAS  /tmp/cc7Oi1VE.s 			page 189


 4187              	.LVL295:
 4188              	.LFB33:
3255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTimeOut );
 4189              		.loc 1 3255 1 view -0
 4190              		.cfi_startproc
 4191              		@ args = 0, pretend = 0, frame = 0
 4192              		@ frame_needed = 0, uses_anonymous_args = 0
3256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
 4193              		.loc 1 3256 2 view .LVU1163
 4194 0000 60B1     		cbz	r0, .L320
3255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTimeOut );
 4195              		.loc 1 3255 1 is_stmt 0 discriminator 2 view .LVU1164
 4196 0002 10B5     		push	{r4, lr}
 4197              		.cfi_def_cfa_offset 8
 4198              		.cfi_offset 4, -8
 4199              		.cfi_offset 14, -4
 4200 0004 0446     		mov	r4, r0
3256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
 4201              		.loc 1 3256 27 is_stmt 1 discriminator 2 view .LVU1165
3257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 4202              		.loc 1 3257 2 discriminator 2 view .LVU1166
 4203 0006 FFF7FEFF 		bl	vPortEnterCritical
 4204              	.LVL296:
3259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTimeOut->xTimeOnEntering = xTickCount;
 4205              		.loc 1 3259 3 discriminator 2 view .LVU1167
3259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTimeOut->xTimeOnEntering = xTickCount;
 4206              		.loc 1 3259 29 is_stmt 0 discriminator 2 view .LVU1168
 4207 000a 094B     		ldr	r3, .L321
 4208 000c 1B68     		ldr	r3, [r3]
 4209 000e 2360     		str	r3, [r4]
3260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4210              		.loc 1 3260 3 is_stmt 1 discriminator 2 view .LVU1169
3260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4211              		.loc 1 3260 30 is_stmt 0 discriminator 2 view .LVU1170
 4212 0010 084B     		ldr	r3, .L321+4
 4213 0012 1B68     		ldr	r3, [r3]
 4214 0014 6360     		str	r3, [r4, #4]
3262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 4215              		.loc 1 3262 2 is_stmt 1 discriminator 2 view .LVU1171
 4216 0016 FFF7FEFF 		bl	vPortExitCritical
 4217              	.LVL297:
3263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 4218              		.loc 1 3263 1 is_stmt 0 discriminator 2 view .LVU1172
 4219 001a 10BD     		pop	{r4, pc}
 4220              	.LVL298:
 4221              	.L320:
 4222              		.cfi_def_cfa_offset 0
 4223              		.cfi_restore 4
 4224              		.cfi_restore 14
3256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
 4225              		.loc 1 3256 2 is_stmt 1 view .LVU1173
 4226              	.LBB186:
 4227              	.LBI186:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 4228              		.loc 2 191 30 view .LVU1174
 4229              	.LBB187:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
ARM GAS  /tmp/cc7Oi1VE.s 			page 190


 4230              		.loc 2 193 1 view .LVU1175
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4231              		.loc 2 195 2 view .LVU1176
 4232              		.syntax unified
 4233              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 4234 001c 4FF05003 			mov r3, #80												
 4235 0020 83F31188 		msr basepri, r3											
 4236 0024 BFF36F8F 		isb														
 4237 0028 BFF34F8F 		dsb														
 4238              	
 4239              	@ 0 "" 2
 4240              	.LVL299:
 4241              		.thumb
 4242              		.syntax unified
 4243              	.L317:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4244              		.loc 2 195 2 is_stmt 0 view .LVU1177
 4245              	.LBE187:
 4246              	.LBE186:
3256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
 4247              		.loc 1 3256 2 is_stmt 1 discriminator 1 view .LVU1178
3256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
 4248              		.loc 1 3256 2 discriminator 1 view .LVU1179
3256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
 4249              		.loc 1 3256 2 discriminator 1 view .LVU1180
 4250 002c FEE7     		b	.L317
 4251              	.L322:
 4252 002e 00BF     		.align	2
 4253              	.L321:
 4254 0030 00000000 		.word	.LANCHOR18
 4255 0034 00000000 		.word	.LANCHOR15
 4256              		.cfi_endproc
 4257              	.LFE33:
 4259              		.section	.text.vTaskInternalSetTimeOutState,"ax",%progbits
 4260              		.align	1
 4261              		.global	vTaskInternalSetTimeOutState
 4262              		.syntax unified
 4263              		.thumb
 4264              		.thumb_func
 4265              		.fpu fpv4-sp-d16
 4267              	vTaskInternalSetTimeOutState:
 4268              	.LVL300:
 4269              	.LFB34:
3267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* For internal use only as it does not use a critical section. */
 4270              		.loc 1 3267 1 view -0
 4271              		.cfi_startproc
 4272              		@ args = 0, pretend = 0, frame = 0
 4273              		@ frame_needed = 0, uses_anonymous_args = 0
 4274              		@ link register save eliminated.
3269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTimeOut->xTimeOnEntering = xTickCount;
 4275              		.loc 1 3269 2 view .LVU1182
3269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTimeOut->xTimeOnEntering = xTickCount;
 4276              		.loc 1 3269 28 is_stmt 0 view .LVU1183
 4277 0000 034B     		ldr	r3, .L324
 4278 0002 1B68     		ldr	r3, [r3]
 4279 0004 0360     		str	r3, [r0]
3270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
ARM GAS  /tmp/cc7Oi1VE.s 			page 191


 4280              		.loc 1 3270 2 is_stmt 1 view .LVU1184
3270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 4281              		.loc 1 3270 29 is_stmt 0 view .LVU1185
 4282 0006 034B     		ldr	r3, .L324+4
 4283 0008 1B68     		ldr	r3, [r3]
 4284 000a 4360     		str	r3, [r0, #4]
3271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 4285              		.loc 1 3271 1 view .LVU1186
 4286 000c 7047     		bx	lr
 4287              	.L325:
 4288 000e 00BF     		.align	2
 4289              	.L324:
 4290 0010 00000000 		.word	.LANCHOR18
 4291 0014 00000000 		.word	.LANCHOR15
 4292              		.cfi_endproc
 4293              	.LFE34:
 4295              		.section	.text.xTaskCheckForTimeOut,"ax",%progbits
 4296              		.align	1
 4297              		.global	xTaskCheckForTimeOut
 4298              		.syntax unified
 4299              		.thumb
 4300              		.thumb_func
 4301              		.fpu fpv4-sp-d16
 4303              	xTaskCheckForTimeOut:
 4304              	.LVL301:
 4305              	.LFB35:
3275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
 4306              		.loc 1 3275 1 is_stmt 1 view -0
 4307              		.cfi_startproc
 4308              		@ args = 0, pretend = 0, frame = 0
 4309              		@ frame_needed = 0, uses_anonymous_args = 0
3275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
 4310              		.loc 1 3275 1 is_stmt 0 view .LVU1188
 4311 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 4312              		.cfi_def_cfa_offset 24
 4313              		.cfi_offset 3, -24
 4314              		.cfi_offset 4, -20
 4315              		.cfi_offset 5, -16
 4316              		.cfi_offset 6, -12
 4317              		.cfi_offset 7, -8
 4318              		.cfi_offset 14, -4
3276:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4319              		.loc 1 3276 1 is_stmt 1 view .LVU1189
3278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
 4320              		.loc 1 3278 2 view .LVU1190
 4321 0002 C8B1     		cbz	r0, .L337
 4322 0004 0C46     		mov	r4, r1
 4323 0006 0546     		mov	r5, r0
3278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
 4324              		.loc 1 3278 27 discriminator 2 view .LVU1191
3279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4325              		.loc 1 3279 2 discriminator 2 view .LVU1192
 4326 0008 F9B1     		cbz	r1, .L338
3279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4327              		.loc 1 3279 31 discriminator 2 view .LVU1193
3281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 4328              		.loc 1 3281 2 discriminator 2 view .LVU1194
ARM GAS  /tmp/cc7Oi1VE.s 			page 192


 4329 000a FFF7FEFF 		bl	vPortEnterCritical
 4330              	.LVL302:
 4331              	.LBB188:
3284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 4332              		.loc 1 3284 3 discriminator 2 view .LVU1195
3284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 4333              		.loc 1 3284 20 is_stmt 0 discriminator 2 view .LVU1196
 4334 000e 1B4B     		ldr	r3, .L340
 4335 0010 1968     		ldr	r1, [r3]
 4336              	.LVL303:
3285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4337              		.loc 1 3285 3 is_stmt 1 discriminator 2 view .LVU1197
3285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4338              		.loc 1 3285 62 is_stmt 0 discriminator 2 view .LVU1198
 4339 0012 6B68     		ldr	r3, [r5, #4]
3285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4340              		.loc 1 3285 20 discriminator 2 view .LVU1199
 4341 0014 C81A     		subs	r0, r1, r3
 4342              	.LVL304:
3299:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4343              		.loc 1 3299 4 is_stmt 1 discriminator 2 view .LVU1200
3299:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4344              		.loc 1 3299 8 is_stmt 0 discriminator 2 view .LVU1201
 4345 0016 2268     		ldr	r2, [r4]
3299:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4346              		.loc 1 3299 6 discriminator 2 view .LVU1202
 4347 0018 B2F1FF3F 		cmp	r2, #-1
 4348 001c 26D0     		beq	.L334
3309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4349              		.loc 1 3309 3 is_stmt 1 view .LVU1203
3309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4350              		.loc 1 3309 25 is_stmt 0 view .LVU1204
 4351 001e 184E     		ldr	r6, .L340+4
 4352 0020 3668     		ldr	r6, [r6]
3309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4353              		.loc 1 3309 5 view .LVU1205
 4354 0022 2F68     		ldr	r7, [r5]
 4355 0024 B742     		cmp	r7, r6
 4356 0026 01D0     		beq	.L332
3309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4357              		.loc 1 3309 56 discriminator 1 view .LVU1206
 4358 0028 8B42     		cmp	r3, r1
 4359 002a 24D9     		bls	.L335
 4360              	.L332:
3318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4361              		.loc 1 3318 8 is_stmt 1 view .LVU1207
3318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4362              		.loc 1 3318 10 is_stmt 0 view .LVU1208
 4363 002c 8242     		cmp	r2, r0
 4364 002e 15D8     		bhi	.L339
3327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdTRUE;
 4365              		.loc 1 3327 4 is_stmt 1 view .LVU1209
3327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdTRUE;
 4366              		.loc 1 3327 19 is_stmt 0 view .LVU1210
 4367 0030 0023     		movs	r3, #0
 4368 0032 2360     		str	r3, [r4]
3328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
ARM GAS  /tmp/cc7Oi1VE.s 			page 193


 4369              		.loc 1 3328 4 is_stmt 1 view .LVU1211
 4370              	.LVL305:
3328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4371              		.loc 1 3328 12 is_stmt 0 view .LVU1212
 4372 0034 0124     		movs	r4, #1
 4373              	.LVL306:
3328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4374              		.loc 1 3328 12 view .LVU1213
 4375 0036 1AE0     		b	.L331
 4376              	.LVL307:
 4377              	.L337:
3328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4378              		.loc 1 3328 12 view .LVU1214
 4379              	.LBE188:
3278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
 4380              		.loc 1 3278 2 is_stmt 1 view .LVU1215
 4381              	.LBB189:
 4382              	.LBI189:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 4383              		.loc 2 191 30 view .LVU1216
 4384              	.LBB190:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 4385              		.loc 2 193 1 view .LVU1217
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4386              		.loc 2 195 2 view .LVU1218
 4387              		.syntax unified
 4388              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 4389 0038 4FF05003 			mov r3, #80												
 4390 003c 83F31188 		msr basepri, r3											
 4391 0040 BFF36F8F 		isb														
 4392 0044 BFF34F8F 		dsb														
 4393              	
 4394              	@ 0 "" 2
 4395              	.LVL308:
 4396              		.thumb
 4397              		.syntax unified
 4398              	.L328:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4399              		.loc 2 195 2 is_stmt 0 view .LVU1219
 4400              	.LBE190:
 4401              	.LBE189:
3278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
 4402              		.loc 1 3278 2 is_stmt 1 discriminator 1 view .LVU1220
3278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
 4403              		.loc 1 3278 2 discriminator 1 view .LVU1221
3278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
 4404              		.loc 1 3278 2 discriminator 1 view .LVU1222
 4405 0048 FEE7     		b	.L328
 4406              	.L338:
3279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4407              		.loc 1 3279 2 view .LVU1223
 4408              	.LBB191:
 4409              	.LBI191:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 4410              		.loc 2 191 30 view .LVU1224
 4411              	.LBB192:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
ARM GAS  /tmp/cc7Oi1VE.s 			page 194


 4412              		.loc 2 193 1 view .LVU1225
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4413              		.loc 2 195 2 view .LVU1226
 4414              		.syntax unified
 4415              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 4416 004a 4FF05003 			mov r3, #80												
 4417 004e 83F31188 		msr basepri, r3											
 4418 0052 BFF36F8F 		isb														
 4419 0056 BFF34F8F 		dsb														
 4420              	
 4421              	@ 0 "" 2
 4422              	.LVL309:
 4423              		.thumb
 4424              		.syntax unified
 4425              	.L330:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4426              		.loc 2 195 2 is_stmt 0 view .LVU1227
 4427              	.LBE192:
 4428              	.LBE191:
3279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4429              		.loc 1 3279 2 is_stmt 1 discriminator 2 view .LVU1228
3279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4430              		.loc 1 3279 2 discriminator 2 view .LVU1229
3279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4431              		.loc 1 3279 2 discriminator 2 view .LVU1230
 4432 005a FEE7     		b	.L330
 4433              	.LVL310:
 4434              	.L339:
 4435              	.LBB193:
3321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskInternalSetTimeOutState( pxTimeOut );
 4436              		.loc 1 3321 4 view .LVU1231
3321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskInternalSetTimeOutState( pxTimeOut );
 4437              		.loc 1 3321 19 is_stmt 0 view .LVU1232
 4438 005c 5B1A     		subs	r3, r3, r1
 4439 005e 1344     		add	r3, r3, r2
 4440 0060 2360     		str	r3, [r4]
3322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdFALSE;
 4441              		.loc 1 3322 4 is_stmt 1 view .LVU1233
 4442 0062 2846     		mov	r0, r5
 4443              	.LVL311:
3322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdFALSE;
 4444              		.loc 1 3322 4 is_stmt 0 view .LVU1234
 4445 0064 FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 4446              	.LVL312:
3323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4447              		.loc 1 3323 4 is_stmt 1 view .LVU1235
3323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4448              		.loc 1 3323 12 is_stmt 0 view .LVU1236
 4449 0068 0024     		movs	r4, #0
 4450              	.LVL313:
3323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4451              		.loc 1 3323 12 view .LVU1237
 4452 006a 00E0     		b	.L331
 4453              	.LVL314:
 4454              	.L334:
3304:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4455              		.loc 1 3304 13 view .LVU1238
ARM GAS  /tmp/cc7Oi1VE.s 			page 195


 4456 006c 0024     		movs	r4, #0
 4457              	.LVL315:
 4458              	.L331:
3304:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4459              		.loc 1 3304 13 view .LVU1239
 4460              	.LBE193:
3331:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4461              		.loc 1 3331 2 is_stmt 1 view .LVU1240
 4462 006e FFF7FEFF 		bl	vPortExitCritical
 4463              	.LVL316:
3333:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 4464              		.loc 1 3333 2 view .LVU1241
3334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 4465              		.loc 1 3334 1 is_stmt 0 view .LVU1242
 4466 0072 2046     		mov	r0, r4
 4467 0074 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 4468              	.LVL317:
 4469              	.L335:
 4470              	.LBB194:
3316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4471              		.loc 1 3316 12 view .LVU1243
 4472 0076 0124     		movs	r4, #1
 4473              	.LVL318:
3316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4474              		.loc 1 3316 12 view .LVU1244
 4475 0078 F9E7     		b	.L331
 4476              	.L341:
 4477 007a 00BF     		.align	2
 4478              	.L340:
 4479 007c 00000000 		.word	.LANCHOR15
 4480 0080 00000000 		.word	.LANCHOR18
 4481              	.LBE194:
 4482              		.cfi_endproc
 4483              	.LFE35:
 4485              		.section	.text.vTaskMissedYield,"ax",%progbits
 4486              		.align	1
 4487              		.global	vTaskMissedYield
 4488              		.syntax unified
 4489              		.thumb
 4490              		.thumb_func
 4491              		.fpu fpv4-sp-d16
 4493              	vTaskMissedYield:
 4494              	.LFB36:
3338:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xYieldPending = pdTRUE;
 4495              		.loc 1 3338 1 is_stmt 1 view -0
 4496              		.cfi_startproc
 4497              		@ args = 0, pretend = 0, frame = 0
 4498              		@ frame_needed = 0, uses_anonymous_args = 0
 4499              		@ link register save eliminated.
3339:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 4500              		.loc 1 3339 2 view .LVU1246
3339:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 4501              		.loc 1 3339 16 is_stmt 0 view .LVU1247
 4502 0000 014B     		ldr	r3, .L343
 4503 0002 0122     		movs	r2, #1
 4504 0004 1A60     		str	r2, [r3]
3340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
ARM GAS  /tmp/cc7Oi1VE.s 			page 196


 4505              		.loc 1 3340 1 view .LVU1248
 4506 0006 7047     		bx	lr
 4507              	.L344:
 4508              		.align	2
 4509              	.L343:
 4510 0008 00000000 		.word	.LANCHOR19
 4511              		.cfi_endproc
 4512              	.LFE36:
 4514              		.section	.text.xTaskGetCurrentTaskHandle,"ax",%progbits
 4515              		.align	1
 4516              		.global	xTaskGetCurrentTaskHandle
 4517              		.syntax unified
 4518              		.thumb
 4519              		.thumb_func
 4520              		.fpu fpv4-sp-d16
 4522              	xTaskGetCurrentTaskHandle:
 4523              	.LFB42:
3970:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xReturn;
 4524              		.loc 1 3970 2 is_stmt 1 view -0
 4525              		.cfi_startproc
 4526              		@ args = 0, pretend = 0, frame = 0
 4527              		@ frame_needed = 0, uses_anonymous_args = 0
 4528              		@ link register save eliminated.
3971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4529              		.loc 1 3971 2 view .LVU1250
3976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4530              		.loc 1 3976 3 view .LVU1251
3976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4531              		.loc 1 3976 11 is_stmt 0 view .LVU1252
 4532 0000 014B     		ldr	r3, .L346
 4533 0002 1868     		ldr	r0, [r3]
 4534              	.LVL319:
3978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4535              		.loc 1 3978 3 is_stmt 1 view .LVU1253
3979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4536              		.loc 1 3979 2 is_stmt 0 view .LVU1254
 4537 0004 7047     		bx	lr
 4538              	.L347:
 4539 0006 00BF     		.align	2
 4540              	.L346:
 4541 0008 00000000 		.word	.LANCHOR10
 4542              		.cfi_endproc
 4543              	.LFE42:
 4545              		.section	.text.xTaskGetSchedulerState,"ax",%progbits
 4546              		.align	1
 4547              		.global	xTaskGetSchedulerState
 4548              		.syntax unified
 4549              		.thumb
 4550              		.thumb_func
 4551              		.fpu fpv4-sp-d16
 4553              	xTaskGetSchedulerState:
 4554              	.LFB43:
3987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 4555              		.loc 1 3987 2 is_stmt 1 view -0
 4556              		.cfi_startproc
 4557              		@ args = 0, pretend = 0, frame = 0
 4558              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cc7Oi1VE.s 			page 197


 4559              		@ link register save eliminated.
3988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4560              		.loc 1 3988 2 view .LVU1256
3990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4561              		.loc 1 3990 3 view .LVU1257
3990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4562              		.loc 1 3990 25 is_stmt 0 view .LVU1258
 4563 0000 054B     		ldr	r3, .L353
 4564 0002 1B68     		ldr	r3, [r3]
3990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4565              		.loc 1 3990 5 view .LVU1259
 4566 0004 33B1     		cbz	r3, .L350
3996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4567              		.loc 1 3996 4 is_stmt 1 view .LVU1260
3996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4568              		.loc 1 3996 29 is_stmt 0 view .LVU1261
 4569 0006 054B     		ldr	r3, .L353+4
 4570 0008 1B68     		ldr	r3, [r3]
3996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4571              		.loc 1 3996 6 view .LVU1262
 4572 000a 0BB1     		cbz	r3, .L352
4002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4573              		.loc 1 4002 13 view .LVU1263
 4574 000c 0020     		movs	r0, #0
 4575              	.LVL320:
4006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4576              		.loc 1 4006 3 is_stmt 1 view .LVU1264
4007:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4577              		.loc 1 4007 2 is_stmt 0 view .LVU1265
 4578 000e 7047     		bx	lr
 4579              	.LVL321:
 4580              	.L352:
3998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4581              		.loc 1 3998 13 view .LVU1266
 4582 0010 0220     		movs	r0, #2
 4583 0012 7047     		bx	lr
 4584              	.L350:
3992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4585              		.loc 1 3992 12 view .LVU1267
 4586 0014 0120     		movs	r0, #1
 4587 0016 7047     		bx	lr
 4588              	.L354:
 4589              		.align	2
 4590              	.L353:
 4591 0018 00000000 		.word	.LANCHOR11
 4592 001c 00000000 		.word	.LANCHOR16
 4593              		.cfi_endproc
 4594              	.LFE43:
 4596              		.section	.text.xTaskPriorityInherit,"ax",%progbits
 4597              		.align	1
 4598              		.global	xTaskPriorityInherit
 4599              		.syntax unified
 4600              		.thumb
 4601              		.thumb_func
 4602              		.fpu fpv4-sp-d16
 4604              	xTaskPriorityInherit:
 4605              	.LVL322:
ARM GAS  /tmp/cc7Oi1VE.s 			page 198


 4606              	.LFB44:
4015:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxMutexHolderTCB = pxMutexHolder;
 4607              		.loc 1 4015 2 is_stmt 1 view -0
 4608              		.cfi_startproc
 4609              		@ args = 0, pretend = 0, frame = 0
 4610              		@ frame_needed = 0, uses_anonymous_args = 0
4016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
 4611              		.loc 1 4016 2 view .LVU1269
4017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4612              		.loc 1 4017 2 view .LVU1270
4022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4613              		.loc 1 4022 3 view .LVU1271
4022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4614              		.loc 1 4022 5 is_stmt 0 view .LVU1272
 4615 0000 0028     		cmp	r0, #0
 4616 0002 49D0     		beq	.L361
4015:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxMutexHolderTCB = pxMutexHolder;
 4617              		.loc 1 4015 2 view .LVU1273
 4618 0004 38B5     		push	{r3, r4, r5, lr}
 4619              		.cfi_def_cfa_offset 16
 4620              		.cfi_offset 3, -16
 4621              		.cfi_offset 4, -12
 4622              		.cfi_offset 5, -8
 4623              		.cfi_offset 14, -4
 4624 0006 0446     		mov	r4, r0
4027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4625              		.loc 1 4027 4 is_stmt 1 view .LVU1274
4027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4626              		.loc 1 4027 24 is_stmt 0 view .LVU1275
 4627 0008 C36A     		ldr	r3, [r0, #44]
4027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4628              		.loc 1 4027 51 view .LVU1276
 4629 000a 254A     		ldr	r2, .L368
 4630 000c 1268     		ldr	r2, [r2]
 4631 000e D26A     		ldr	r2, [r2, #44]
4027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4632              		.loc 1 4027 6 view .LVU1277
 4633 0010 9342     		cmp	r3, r2
 4634 0012 39D2     		bcs	.L357
4032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4635              		.loc 1 4032 5 is_stmt 1 view .LVU1278
4032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4636              		.loc 1 4032 11 is_stmt 0 view .LVU1279
 4637 0014 8269     		ldr	r2, [r0, #24]
4032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4638              		.loc 1 4032 7 view .LVU1280
 4639 0016 002A     		cmp	r2, #0
 4640 0018 05DB     		blt	.L358
4034:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4641              		.loc 1 4034 6 is_stmt 1 view .LVU1281
 4642 001a 214A     		ldr	r2, .L368
 4643 001c 1268     		ldr	r2, [r2]
 4644 001e D26A     		ldr	r2, [r2, #44]
 4645 0020 C2F10702 		rsb	r2, r2, #7
 4646 0024 8261     		str	r2, [r0, #24]
 4647              	.L358:
4038:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
ARM GAS  /tmp/cc7Oi1VE.s 			page 199


 4648              		.loc 1 4038 30 view .LVU1282
4043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4649              		.loc 1 4043 5 view .LVU1283
4043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4650              		.loc 1 4043 9 is_stmt 0 view .LVU1284
 4651 0026 6169     		ldr	r1, [r4, #20]
 4652 0028 03EB8303 		add	r3, r3, r3, lsl #2
 4653 002c 1D4A     		ldr	r2, .L368+4
 4654 002e 02EB8303 		add	r3, r2, r3, lsl #2
4043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4655              		.loc 1 4043 7 view .LVU1285
 4656 0032 9942     		cmp	r1, r3
 4657 0034 05D0     		beq	.L367
4064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4658              		.loc 1 4064 6 is_stmt 1 view .LVU1286
4064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4659              		.loc 1 4064 49 is_stmt 0 view .LVU1287
 4660 0036 1A4B     		ldr	r3, .L368
 4661 0038 1B68     		ldr	r3, [r3]
 4662 003a DB6A     		ldr	r3, [r3, #44]
4064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4663              		.loc 1 4064 35 view .LVU1288
 4664 003c E362     		str	r3, [r4, #44]
4070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4665              		.loc 1 4070 13 view .LVU1289
 4666 003e 0120     		movs	r0, #1
 4667              	.LVL323:
 4668              	.L355:
4097:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4669              		.loc 1 4097 2 view .LVU1290
 4670 0040 38BD     		pop	{r3, r4, r5, pc}
 4671              	.LVL324:
 4672              	.L367:
4045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4673              		.loc 1 4045 6 is_stmt 1 view .LVU1291
4045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4674              		.loc 1 4045 10 is_stmt 0 view .LVU1292
 4675 0042 251D     		adds	r5, r4, #4
 4676 0044 2846     		mov	r0, r5
 4677              	.LVL325:
4045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4678              		.loc 1 4045 10 view .LVU1293
 4679 0046 FFF7FEFF 		bl	uxListRemove
 4680              	.LVL326:
4045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4681              		.loc 1 4045 8 view .LVU1294
 4682 004a 40B9     		cbnz	r0, .L360
4050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4683              		.loc 1 4050 7 is_stmt 1 view .LVU1295
 4684 004c E26A     		ldr	r2, [r4, #44]
 4685 004e 0123     		movs	r3, #1
 4686 0050 03FA02F2 		lsl	r2, r3, r2
 4687 0054 1449     		ldr	r1, .L368+8
 4688 0056 0B68     		ldr	r3, [r1]
 4689 0058 23EA0203 		bic	r3, r3, r2
 4690 005c 0B60     		str	r3, [r1]
 4691              	.L360:
ARM GAS  /tmp/cc7Oi1VE.s 			page 200


4054:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4692              		.loc 1 4054 31 view .LVU1296
4058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxMutexHolderTCB );
 4693              		.loc 1 4058 6 view .LVU1297
4058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxMutexHolderTCB );
 4694              		.loc 1 4058 49 is_stmt 0 view .LVU1298
 4695 005e 104B     		ldr	r3, .L368
 4696 0060 1B68     		ldr	r3, [r3]
 4697 0062 D86A     		ldr	r0, [r3, #44]
4058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxMutexHolderTCB );
 4698              		.loc 1 4058 35 view .LVU1299
 4699 0064 E062     		str	r0, [r4, #44]
4059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4700              		.loc 1 4059 6 is_stmt 1 view .LVU1300
4059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4701              		.loc 1 4059 6 view .LVU1301
 4702 0066 0124     		movs	r4, #1
 4703              	.LVL327:
4059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4704              		.loc 1 4059 6 is_stmt 0 view .LVU1302
 4705 0068 04FA00F3 		lsl	r3, r4, r0
 4706 006c 0E4A     		ldr	r2, .L368+8
 4707 006e 1168     		ldr	r1, [r2]
 4708 0070 0B43     		orrs	r3, r3, r1
 4709 0072 1360     		str	r3, [r2]
4059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4710              		.loc 1 4059 6 is_stmt 1 view .LVU1303
 4711 0074 00EB8000 		add	r0, r0, r0, lsl #2
 4712 0078 2946     		mov	r1, r5
 4713 007a 0A4B     		ldr	r3, .L368+4
 4714 007c 03EB8000 		add	r0, r3, r0, lsl #2
 4715 0080 FFF7FEFF 		bl	vListInsertEnd
 4716              	.LVL328:
4059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4717              		.loc 1 4059 47 view .LVU1304
4070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4718              		.loc 1 4070 13 is_stmt 0 view .LVU1305
 4719 0084 2046     		mov	r0, r4
 4720 0086 DBE7     		b	.L355
 4721              	.LVL329:
 4722              	.L357:
4074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4723              		.loc 1 4074 5 is_stmt 1 view .LVU1306
4074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4724              		.loc 1 4074 25 is_stmt 0 view .LVU1307
 4725 0088 426C     		ldr	r2, [r0, #68]
4074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4726              		.loc 1 4074 56 view .LVU1308
 4727 008a 054B     		ldr	r3, .L368
 4728 008c 1B68     		ldr	r3, [r3]
 4729 008e DB6A     		ldr	r3, [r3, #44]
4074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4730              		.loc 1 4074 7 view .LVU1309
 4731 0090 9A42     		cmp	r2, r3
 4732 0092 03D3     		bcc	.L362
4017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4733              		.loc 1 4017 13 view .LVU1310
ARM GAS  /tmp/cc7Oi1VE.s 			page 201


 4734 0094 0020     		movs	r0, #0
 4735              	.LVL330:
4017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4736              		.loc 1 4017 13 view .LVU1311
 4737 0096 D3E7     		b	.L355
 4738              	.LVL331:
 4739              	.L361:
 4740              		.cfi_def_cfa_offset 0
 4741              		.cfi_restore 3
 4742              		.cfi_restore 4
 4743              		.cfi_restore 5
 4744              		.cfi_restore 14
4017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4745              		.loc 1 4017 13 view .LVU1312
 4746 0098 0020     		movs	r0, #0
 4747              	.LVL332:
4097:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4748              		.loc 1 4097 2 view .LVU1313
 4749 009a 7047     		bx	lr
 4750              	.LVL333:
 4751              	.L362:
 4752              		.cfi_def_cfa_offset 16
 4753              		.cfi_offset 3, -16
 4754              		.cfi_offset 4, -12
 4755              		.cfi_offset 5, -8
 4756              		.cfi_offset 14, -4
4083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4757              		.loc 1 4083 14 view .LVU1314
 4758 009c 0120     		movs	r0, #1
 4759              	.LVL334:
4093:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4760              		.loc 1 4093 28 is_stmt 1 view .LVU1315
4096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4761              		.loc 1 4096 3 view .LVU1316
4096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4762              		.loc 1 4096 10 is_stmt 0 view .LVU1317
 4763 009e CFE7     		b	.L355
 4764              	.L369:
 4765              		.align	2
 4766              	.L368:
 4767 00a0 00000000 		.word	.LANCHOR10
 4768 00a4 00000000 		.word	.LANCHOR4
 4769 00a8 00000000 		.word	.LANCHOR13
 4770              		.cfi_endproc
 4771              	.LFE44:
 4773              		.section	.text.xTaskPriorityDisinherit,"ax",%progbits
 4774              		.align	1
 4775              		.global	xTaskPriorityDisinherit
 4776              		.syntax unified
 4777              		.thumb
 4778              		.thumb_func
 4779              		.fpu fpv4-sp-d16
 4781              	xTaskPriorityDisinherit:
 4782              	.LVL335:
 4783              	.LFB45:
4105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = pxMutexHolder;
 4784              		.loc 1 4105 2 is_stmt 1 view -0
ARM GAS  /tmp/cc7Oi1VE.s 			page 202


 4785              		.cfi_startproc
 4786              		@ args = 0, pretend = 0, frame = 0
 4787              		@ frame_needed = 0, uses_anonymous_args = 0
4106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
 4788              		.loc 1 4106 2 view .LVU1319
4107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4789              		.loc 1 4107 2 view .LVU1320
4109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4790              		.loc 1 4109 3 view .LVU1321
4109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4791              		.loc 1 4109 5 is_stmt 0 view .LVU1322
 4792 0000 0028     		cmp	r0, #0
 4793 0002 4CD0     		beq	.L377
4105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = pxMutexHolder;
 4794              		.loc 1 4105 2 view .LVU1323
 4795 0004 38B5     		push	{r3, r4, r5, lr}
 4796              		.cfi_def_cfa_offset 16
 4797              		.cfi_offset 3, -16
 4798              		.cfi_offset 4, -12
 4799              		.cfi_offset 5, -8
 4800              		.cfi_offset 14, -4
 4801 0006 0446     		mov	r4, r0
4115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
 4802              		.loc 1 4115 4 is_stmt 1 view .LVU1324
 4803 0008 274B     		ldr	r3, .L385
 4804 000a 1B68     		ldr	r3, [r3]
 4805 000c 8342     		cmp	r3, r0
 4806 000e 08D0     		beq	.L372
4115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
 4807              		.loc 1 4115 4 view .LVU1325
 4808              	.LBB195:
 4809              	.LBI195:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 4810              		.loc 2 191 30 view .LVU1326
 4811              	.LBB196:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 4812              		.loc 2 193 1 view .LVU1327
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4813              		.loc 2 195 2 view .LVU1328
 4814              		.syntax unified
 4815              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 4816 0010 4FF05003 			mov r3, #80												
 4817 0014 83F31188 		msr basepri, r3											
 4818 0018 BFF36F8F 		isb														
 4819 001c BFF34F8F 		dsb														
 4820              	
 4821              	@ 0 "" 2
 4822              	.LVL336:
 4823              		.thumb
 4824              		.syntax unified
 4825              	.L373:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4826              		.loc 2 195 2 is_stmt 0 view .LVU1329
 4827              	.LBE196:
 4828              	.LBE195:
4115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
 4829              		.loc 1 4115 4 is_stmt 1 discriminator 1 view .LVU1330
ARM GAS  /tmp/cc7Oi1VE.s 			page 203


4115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
 4830              		.loc 1 4115 4 discriminator 1 view .LVU1331
4115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
 4831              		.loc 1 4115 4 discriminator 1 view .LVU1332
 4832 0020 FEE7     		b	.L373
 4833              	.L372:
4115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
 4834              		.loc 1 4115 41 discriminator 2 view .LVU1333
4116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
 4835              		.loc 1 4116 4 discriminator 2 view .LVU1334
 4836 0022 836C     		ldr	r3, [r0, #72]
 4837 0024 43B9     		cbnz	r3, .L374
4116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
 4838              		.loc 1 4116 4 view .LVU1335
 4839              	.LBB197:
 4840              	.LBI197:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 4841              		.loc 2 191 30 view .LVU1336
 4842              	.LBB198:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 4843              		.loc 2 193 1 view .LVU1337
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4844              		.loc 2 195 2 view .LVU1338
 4845              		.syntax unified
 4846              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 4847 0026 4FF05003 			mov r3, #80												
 4848 002a 83F31188 		msr basepri, r3											
 4849 002e BFF36F8F 		isb														
 4850 0032 BFF34F8F 		dsb														
 4851              	
 4852              	@ 0 "" 2
 4853              	.LVL337:
 4854              		.thumb
 4855              		.syntax unified
 4856              	.L375:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4857              		.loc 2 195 2 is_stmt 0 view .LVU1339
 4858              	.LBE198:
 4859              	.LBE197:
4116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
 4860              		.loc 1 4116 4 is_stmt 1 discriminator 2 view .LVU1340
4116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
 4861              		.loc 1 4116 4 discriminator 2 view .LVU1341
4116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
 4862              		.loc 1 4116 4 discriminator 2 view .LVU1342
 4863 0036 FEE7     		b	.L375
 4864              	.L374:
4116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
 4865              		.loc 1 4116 40 discriminator 2 view .LVU1343
4117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4866              		.loc 1 4117 4 discriminator 2 view .LVU1344
4117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4867              		.loc 1 4117 28 is_stmt 0 discriminator 2 view .LVU1345
 4868 0038 013B     		subs	r3, r3, #1
 4869 003a 8364     		str	r3, [r0, #72]
4121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4870              		.loc 1 4121 4 is_stmt 1 discriminator 2 view .LVU1346
ARM GAS  /tmp/cc7Oi1VE.s 			page 204


4121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4871              		.loc 1 4121 13 is_stmt 0 discriminator 2 view .LVU1347
 4872 003c C16A     		ldr	r1, [r0, #44]
4121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4873              		.loc 1 4121 34 discriminator 2 view .LVU1348
 4874 003e 426C     		ldr	r2, [r0, #68]
4121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4875              		.loc 1 4121 6 discriminator 2 view .LVU1349
 4876 0040 9142     		cmp	r1, r2
 4877 0042 2ED0     		beq	.L378
4124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4878              		.loc 1 4124 5 is_stmt 1 view .LVU1350
4124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4879              		.loc 1 4124 7 is_stmt 0 view .LVU1351
 4880 0044 0BB1     		cbz	r3, .L384
4107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4881              		.loc 1 4107 13 view .LVU1352
 4882 0046 0020     		movs	r0, #0
 4883              	.LVL338:
4173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4884              		.loc 1 4173 28 is_stmt 1 view .LVU1353
4176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4885              		.loc 1 4176 3 view .LVU1354
 4886              	.L370:
4177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4887              		.loc 1 4177 2 is_stmt 0 view .LVU1355
 4888 0048 38BD     		pop	{r3, r4, r5, pc}
 4889              	.LVL339:
 4890              	.L384:
4131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4891              		.loc 1 4131 6 is_stmt 1 view .LVU1356
4131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4892              		.loc 1 4131 10 is_stmt 0 view .LVU1357
 4893 004a 051D     		adds	r5, r0, #4
 4894 004c 2846     		mov	r0, r5
 4895              	.LVL340:
4131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4896              		.loc 1 4131 10 view .LVU1358
 4897 004e FFF7FEFF 		bl	uxListRemove
 4898              	.LVL341:
4131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4899              		.loc 1 4131 8 view .LVU1359
 4900 0052 70B9     		cbnz	r0, .L376
4133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4901              		.loc 1 4133 7 is_stmt 1 view .LVU1360
 4902 0054 E26A     		ldr	r2, [r4, #44]
 4903 0056 02EB8203 		add	r3, r2, r2, lsl #2
 4904 005a 9B00     		lsls	r3, r3, #2
 4905 005c 1349     		ldr	r1, .L385+4
 4906 005e CB58     		ldr	r3, [r1, r3]
 4907 0060 3BB9     		cbnz	r3, .L376
4133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4908              		.loc 1 4133 7 discriminator 1 view .LVU1361
 4909 0062 0123     		movs	r3, #1
 4910 0064 03FA02F2 		lsl	r2, r3, r2
 4911 0068 1149     		ldr	r1, .L385+8
 4912 006a 0B68     		ldr	r3, [r1]
ARM GAS  /tmp/cc7Oi1VE.s 			page 205


 4913 006c 23EA0203 		bic	r3, r3, r2
 4914 0070 0B60     		str	r3, [r1]
 4915              	.L376:
4137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4916              		.loc 1 4137 31 view .LVU1362
4142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxPriority = pxTCB->uxBasePriority;
 4917              		.loc 1 4142 67 view .LVU1363
4143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4918              		.loc 1 4143 6 view .LVU1364
4143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4919              		.loc 1 4143 31 is_stmt 0 view .LVU1365
 4920 0072 606C     		ldr	r0, [r4, #68]
4143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4921              		.loc 1 4143 24 view .LVU1366
 4922 0074 E062     		str	r0, [r4, #44]
4148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 4923              		.loc 1 4148 6 is_stmt 1 view .LVU1367
 4924 0076 C0F10703 		rsb	r3, r0, #7
 4925 007a A361     		str	r3, [r4, #24]
4149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4926              		.loc 1 4149 6 view .LVU1368
4149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4927              		.loc 1 4149 6 view .LVU1369
 4928 007c 0124     		movs	r4, #1
 4929              	.LVL342:
4149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4930              		.loc 1 4149 6 is_stmt 0 view .LVU1370
 4931 007e 04FA00F3 		lsl	r3, r4, r0
 4932 0082 0B4A     		ldr	r2, .L385+8
 4933 0084 1168     		ldr	r1, [r2]
 4934 0086 0B43     		orrs	r3, r3, r1
 4935 0088 1360     		str	r3, [r2]
4149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4936              		.loc 1 4149 6 is_stmt 1 view .LVU1371
 4937 008a 00EB8000 		add	r0, r0, r0, lsl #2
 4938 008e 2946     		mov	r1, r5
 4939 0090 064B     		ldr	r3, .L385+4
 4940 0092 03EB8000 		add	r0, r3, r0, lsl #2
 4941 0096 FFF7FEFF 		bl	vListInsertEnd
 4942              	.LVL343:
4149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4943              		.loc 1 4149 36 view .LVU1372
4159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4944              		.loc 1 4159 6 view .LVU1373
4159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4945              		.loc 1 4159 14 is_stmt 0 view .LVU1374
 4946 009a 2046     		mov	r0, r4
 4947 009c D4E7     		b	.L370
 4948              	.LVL344:
 4949              	.L377:
 4950              		.cfi_def_cfa_offset 0
 4951              		.cfi_restore 3
 4952              		.cfi_restore 4
 4953              		.cfi_restore 5
 4954              		.cfi_restore 14
4107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4955              		.loc 1 4107 13 view .LVU1375
ARM GAS  /tmp/cc7Oi1VE.s 			page 206


 4956 009e 0020     		movs	r0, #0
 4957              	.LVL345:
4177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4958              		.loc 1 4177 2 view .LVU1376
 4959 00a0 7047     		bx	lr
 4960              	.LVL346:
 4961              	.L378:
 4962              		.cfi_def_cfa_offset 16
 4963              		.cfi_offset 3, -16
 4964              		.cfi_offset 4, -12
 4965              		.cfi_offset 5, -8
 4966              		.cfi_offset 14, -4
4107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4967              		.loc 1 4107 13 view .LVU1377
 4968 00a2 0020     		movs	r0, #0
 4969              	.LVL347:
4107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4970              		.loc 1 4107 13 view .LVU1378
 4971 00a4 D0E7     		b	.L370
 4972              	.L386:
 4973 00a6 00BF     		.align	2
 4974              	.L385:
 4975 00a8 00000000 		.word	.LANCHOR10
 4976 00ac 00000000 		.word	.LANCHOR4
 4977 00b0 00000000 		.word	.LANCHOR13
 4978              		.cfi_endproc
 4979              	.LFE45:
 4981              		.section	.text.vTaskPriorityDisinheritAfterTimeout,"ax",%progbits
 4982              		.align	1
 4983              		.global	vTaskPriorityDisinheritAfterTimeout
 4984              		.syntax unified
 4985              		.thumb
 4986              		.thumb_func
 4987              		.fpu fpv4-sp-d16
 4989              	vTaskPriorityDisinheritAfterTimeout:
 4990              	.LVL348:
 4991              	.LFB46:
4185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = pxMutexHolder;
 4992              		.loc 1 4185 2 is_stmt 1 view -0
 4993              		.cfi_startproc
 4994              		@ args = 0, pretend = 0, frame = 0
 4995              		@ frame_needed = 0, uses_anonymous_args = 0
4186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxPriorityUsedOnEntry, uxPriorityToUse;
 4996              		.loc 1 4186 2 view .LVU1380
4187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const UBaseType_t uxOnlyOneMutexHeld = ( UBaseType_t ) 1;
 4997              		.loc 1 4187 2 view .LVU1381
4188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4998              		.loc 1 4188 2 view .LVU1382
4190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4999              		.loc 1 4190 3 view .LVU1383
4190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5000              		.loc 1 4190 5 is_stmt 0 view .LVU1384
 5001 0000 0028     		cmp	r0, #0
 5002 0002 50D0     		beq	.L397
4185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = pxMutexHolder;
 5003              		.loc 1 4185 2 view .LVU1385
 5004 0004 38B5     		push	{r3, r4, r5, lr}
ARM GAS  /tmp/cc7Oi1VE.s 			page 207


 5005              		.cfi_def_cfa_offset 16
 5006              		.cfi_offset 3, -16
 5007              		.cfi_offset 4, -12
 5008              		.cfi_offset 5, -8
 5009              		.cfi_offset 14, -4
 5010 0006 0446     		mov	r4, r0
4194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5011              		.loc 1 4194 4 is_stmt 1 view .LVU1386
 5012 0008 836C     		ldr	r3, [r0, #72]
 5013 000a 43B9     		cbnz	r3, .L389
4194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5014              		.loc 1 4194 4 view .LVU1387
 5015              	.LBB199:
 5016              	.LBI199:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 5017              		.loc 2 191 30 view .LVU1388
 5018              	.LBB200:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 5019              		.loc 2 193 1 view .LVU1389
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5020              		.loc 2 195 2 view .LVU1390
 5021              		.syntax unified
 5022              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 5023 000c 4FF05003 			mov r3, #80												
 5024 0010 83F31188 		msr basepri, r3											
 5025 0014 BFF36F8F 		isb														
 5026 0018 BFF34F8F 		dsb														
 5027              	
 5028              	@ 0 "" 2
 5029              	.LVL349:
 5030              		.thumb
 5031              		.syntax unified
 5032              	.L390:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5033              		.loc 2 195 2 is_stmt 0 view .LVU1391
 5034              	.LBE200:
 5035              	.LBE199:
4194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5036              		.loc 1 4194 4 is_stmt 1 discriminator 1 view .LVU1392
4194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5037              		.loc 1 4194 4 discriminator 1 view .LVU1393
4194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5038              		.loc 1 4194 4 discriminator 1 view .LVU1394
 5039 001c FEE7     		b	.L390
 5040              	.L389:
4194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5041              		.loc 1 4194 40 discriminator 2 view .LVU1395
4200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5042              		.loc 1 4200 4 discriminator 2 view .LVU1396
4200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5043              		.loc 1 4200 13 is_stmt 0 discriminator 2 view .LVU1397
 5044 001e 426C     		ldr	r2, [r0, #68]
4200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5045              		.loc 1 4200 6 discriminator 2 view .LVU1398
 5046 0020 8A42     		cmp	r2, r1
 5047 0022 00D2     		bcs	.L391
4202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
ARM GAS  /tmp/cc7Oi1VE.s 			page 208


 5048              		.loc 1 4202 21 view .LVU1399
 5049 0024 0A46     		mov	r2, r1
 5050              	.L391:
 5051              	.LVL350:
4210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5052              		.loc 1 4210 4 is_stmt 1 view .LVU1400
4210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5053              		.loc 1 4210 13 is_stmt 0 view .LVU1401
 5054 0026 E16A     		ldr	r1, [r4, #44]
 5055              	.LVL351:
4210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5056              		.loc 1 4210 6 view .LVU1402
 5057 0028 9142     		cmp	r1, r2
 5058 002a 01D0     		beq	.L387
4216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5059              		.loc 1 4216 5 is_stmt 1 view .LVU1403
4216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5060              		.loc 1 4216 7 is_stmt 0 view .LVU1404
 5061 002c 012B     		cmp	r3, #1
 5062 002e 00D0     		beq	.L400
 5063              	.LVL352:
 5064              	.L387:
4282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5065              		.loc 1 4282 2 view .LVU1405
 5066 0030 38BD     		pop	{r3, r4, r5, pc}
 5067              	.LVL353:
 5068              	.L400:
4221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5069              		.loc 1 4221 6 is_stmt 1 view .LVU1406
 5070 0032 1D4B     		ldr	r3, .L402
 5071 0034 1B68     		ldr	r3, [r3]
 5072 0036 A342     		cmp	r3, r4
 5073 0038 2CD0     		beq	.L401
4221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5074              		.loc 1 4221 43 discriminator 2 view .LVU1407
4226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxPriorityUsedOnEntry = pxTCB->uxPriority;
 5075              		.loc 1 4226 67 discriminator 2 view .LVU1408
4227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxPriority = uxPriorityToUse;
 5076              		.loc 1 4227 6 discriminator 2 view .LVU1409
 5077              	.LVL354:
4228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5078              		.loc 1 4228 6 discriminator 2 view .LVU1410
4228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5079              		.loc 1 4228 24 is_stmt 0 discriminator 2 view .LVU1411
 5080 003a E262     		str	r2, [r4, #44]
4232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5081              		.loc 1 4232 6 is_stmt 1 discriminator 2 view .LVU1412
4232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5082              		.loc 1 4232 12 is_stmt 0 discriminator 2 view .LVU1413
 5083 003c A369     		ldr	r3, [r4, #24]
4232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5084              		.loc 1 4232 8 discriminator 2 view .LVU1414
 5085 003e 002B     		cmp	r3, #0
 5086 0040 02DB     		blt	.L394
4234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5087              		.loc 1 4234 7 is_stmt 1 view .LVU1415
 5088 0042 C2F10702 		rsb	r2, r2, #7
ARM GAS  /tmp/cc7Oi1VE.s 			page 209


 5089              	.LVL355:
4234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5090              		.loc 1 4234 7 is_stmt 0 view .LVU1416
 5091 0046 A261     		str	r2, [r4, #24]
 5092              	.L394:
4238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5093              		.loc 1 4238 31 is_stmt 1 view .LVU1417
4247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5094              		.loc 1 4247 6 view .LVU1418
4247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5095              		.loc 1 4247 10 is_stmt 0 view .LVU1419
 5096 0048 6269     		ldr	r2, [r4, #20]
 5097 004a 01EB8101 		add	r1, r1, r1, lsl #2
 5098              	.LVL356:
4247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5099              		.loc 1 4247 10 view .LVU1420
 5100 004e 174B     		ldr	r3, .L402+4
 5101 0050 03EB8101 		add	r1, r3, r1, lsl #2
4247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5102              		.loc 1 4247 8 view .LVU1421
 5103 0054 8A42     		cmp	r2, r1
 5104 0056 EBD1     		bne	.L387
4249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 5105              		.loc 1 4249 7 is_stmt 1 view .LVU1422
4249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 5106              		.loc 1 4249 11 is_stmt 0 view .LVU1423
 5107 0058 251D     		adds	r5, r4, #4
 5108 005a 2846     		mov	r0, r5
 5109              	.LVL357:
4249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 5110              		.loc 1 4249 11 view .LVU1424
 5111 005c FFF7FEFF 		bl	uxListRemove
 5112              	.LVL358:
4249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 5113              		.loc 1 4249 9 view .LVU1425
 5114 0060 40B9     		cbnz	r0, .L395
4254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
 5115              		.loc 1 4254 8 is_stmt 1 view .LVU1426
 5116 0062 E26A     		ldr	r2, [r4, #44]
 5117 0064 0123     		movs	r3, #1
 5118 0066 03FA02F2 		lsl	r2, r3, r2
 5119 006a 1149     		ldr	r1, .L402+8
 5120 006c 0B68     		ldr	r3, [r1]
 5121 006e 23EA0203 		bic	r3, r3, r2
 5122 0072 0B60     		str	r3, [r1]
 5123              	.L395:
4258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
 5124              		.loc 1 4258 32 view .LVU1427
4261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5125              		.loc 1 4261 7 view .LVU1428
4261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5126              		.loc 1 4261 7 view .LVU1429
 5127 0074 E06A     		ldr	r0, [r4, #44]
 5128 0076 0123     		movs	r3, #1
 5129 0078 8340     		lsls	r3, r3, r0
 5130 007a 0D4A     		ldr	r2, .L402+8
 5131 007c 1168     		ldr	r1, [r2]
ARM GAS  /tmp/cc7Oi1VE.s 			page 210


 5132 007e 0B43     		orrs	r3, r3, r1
 5133 0080 1360     		str	r3, [r2]
4261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5134              		.loc 1 4261 7 view .LVU1430
 5135 0082 00EB8000 		add	r0, r0, r0, lsl #2
 5136 0086 2946     		mov	r1, r5
 5137 0088 084B     		ldr	r3, .L402+4
 5138 008a 03EB8000 		add	r0, r3, r0, lsl #2
 5139 008e FFF7FEFF 		bl	vListInsertEnd
 5140              	.LVL359:
4261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5141              		.loc 1 4261 37 view .LVU1431
4280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 5142              		.loc 1 4280 28 view .LVU1432
4282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5143              		.loc 1 4282 2 is_stmt 0 view .LVU1433
 5144 0092 CDE7     		b	.L387
 5145              	.LVL360:
 5146              	.L401:
4221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5147              		.loc 1 4221 6 is_stmt 1 view .LVU1434
 5148              	.LBB201:
 5149              	.LBI201:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 5150              		.loc 2 191 30 view .LVU1435
 5151              	.LBB202:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 5152              		.loc 2 193 1 view .LVU1436
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5153              		.loc 2 195 2 view .LVU1437
 5154              		.syntax unified
 5155              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 5156 0094 4FF05003 			mov r3, #80												
 5157 0098 83F31188 		msr basepri, r3											
 5158 009c BFF36F8F 		isb														
 5159 00a0 BFF34F8F 		dsb														
 5160              	
 5161              	@ 0 "" 2
 5162              	.LVL361:
 5163              		.thumb
 5164              		.syntax unified
 5165              	.L393:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5166              		.loc 2 195 2 is_stmt 0 view .LVU1438
 5167              	.LBE202:
 5168              	.LBE201:
4221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5169              		.loc 1 4221 6 is_stmt 1 discriminator 2 view .LVU1439
4221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5170              		.loc 1 4221 6 discriminator 2 view .LVU1440
4221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5171              		.loc 1 4221 6 discriminator 2 view .LVU1441
 5172 00a4 FEE7     		b	.L393
 5173              	.LVL362:
 5174              	.L397:
 5175              		.cfi_def_cfa_offset 0
 5176              		.cfi_restore 3
ARM GAS  /tmp/cc7Oi1VE.s 			page 211


 5177              		.cfi_restore 4
 5178              		.cfi_restore 5
 5179              		.cfi_restore 14
4221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5180              		.loc 1 4221 6 is_stmt 0 discriminator 2 view .LVU1442
 5181 00a6 7047     		bx	lr
 5182              	.L403:
 5183              		.align	2
 5184              	.L402:
 5185 00a8 00000000 		.word	.LANCHOR10
 5186 00ac 00000000 		.word	.LANCHOR4
 5187 00b0 00000000 		.word	.LANCHOR13
 5188              		.cfi_endproc
 5189              	.LFE46:
 5191              		.section	.text.uxTaskResetEventItemValue,"ax",%progbits
 5192              		.align	1
 5193              		.global	uxTaskResetEventItemValue
 5194              		.syntax unified
 5195              		.thumb
 5196              		.thumb_func
 5197              		.fpu fpv4-sp-d16
 5199              	uxTaskResetEventItemValue:
 5200              	.LFB47:
4603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t uxReturn;
 5201              		.loc 1 4603 1 is_stmt 1 view -0
 5202              		.cfi_startproc
 5203              		@ args = 0, pretend = 0, frame = 0
 5204              		@ frame_needed = 0, uses_anonymous_args = 0
 5205              		@ link register save eliminated.
4604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5206              		.loc 1 4604 1 view .LVU1444
4606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5207              		.loc 1 4606 2 view .LVU1445
4606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5208              		.loc 1 4606 13 is_stmt 0 view .LVU1446
 5209 0000 044A     		ldr	r2, .L405
 5210 0002 1368     		ldr	r3, [r2]
4606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5211              		.loc 1 4606 11 view .LVU1447
 5212 0004 9869     		ldr	r0, [r3, #24]
 5213              	.LVL363:
4610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5214              		.loc 1 4610 2 is_stmt 1 view .LVU1448
 5215 0006 1368     		ldr	r3, [r2]
 5216 0008 DB6A     		ldr	r3, [r3, #44]
 5217 000a 1268     		ldr	r2, [r2]
 5218 000c C3F10703 		rsb	r3, r3, #7
 5219 0010 9361     		str	r3, [r2, #24]
4612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 5220              		.loc 1 4612 2 view .LVU1449
4613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 5221              		.loc 1 4613 1 is_stmt 0 view .LVU1450
 5222 0012 7047     		bx	lr
 5223              	.L406:
 5224              		.align	2
 5225              	.L405:
 5226 0014 00000000 		.word	.LANCHOR10
ARM GAS  /tmp/cc7Oi1VE.s 			page 212


 5227              		.cfi_endproc
 5228              	.LFE47:
 5230              		.section	.text.pvTaskIncrementMutexHeldCount,"ax",%progbits
 5231              		.align	1
 5232              		.global	pvTaskIncrementMutexHeldCount
 5233              		.syntax unified
 5234              		.thumb
 5235              		.thumb_func
 5236              		.fpu fpv4-sp-d16
 5238              	pvTaskIncrementMutexHeldCount:
 5239              	.LFB48:
4619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xSemaphoreCreateMutex() is called before any tasks have been created
 5240              		.loc 1 4619 2 is_stmt 1 view -0
 5241              		.cfi_startproc
 5242              		@ args = 0, pretend = 0, frame = 0
 5243              		@ frame_needed = 0, uses_anonymous_args = 0
 5244              		@ link register save eliminated.
4622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5245              		.loc 1 4622 3 view .LVU1452
4622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5246              		.loc 1 4622 20 is_stmt 0 view .LVU1453
 5247 0000 054B     		ldr	r3, .L409
 5248 0002 1B68     		ldr	r3, [r3]
4622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5249              		.loc 1 4622 5 view .LVU1454
 5250 0004 23B1     		cbz	r3, .L408
4624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 5251              		.loc 1 4624 4 is_stmt 1 view .LVU1455
4624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 5252              		.loc 1 4624 18 is_stmt 0 view .LVU1456
 5253 0006 044B     		ldr	r3, .L409
 5254 0008 1A68     		ldr	r2, [r3]
 5255 000a 936C     		ldr	r3, [r2, #72]
4624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 5256              		.loc 1 4624 35 view .LVU1457
 5257 000c 0133     		adds	r3, r3, #1
 5258 000e 9364     		str	r3, [r2, #72]
 5259              	.L408:
4627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 5260              		.loc 1 4627 3 is_stmt 1 view .LVU1458
4627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 5261              		.loc 1 4627 10 is_stmt 0 view .LVU1459
 5262 0010 014B     		ldr	r3, .L409
 5263 0012 1868     		ldr	r0, [r3]
4628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5264              		.loc 1 4628 2 view .LVU1460
 5265 0014 7047     		bx	lr
 5266              	.L410:
 5267 0016 00BF     		.align	2
 5268              	.L409:
 5269 0018 00000000 		.word	.LANCHOR10
 5270              		.cfi_endproc
 5271              	.LFE48:
 5273              		.section	.text.ulTaskNotifyTake,"ax",%progbits
 5274              		.align	1
 5275              		.global	ulTaskNotifyTake
 5276              		.syntax unified
ARM GAS  /tmp/cc7Oi1VE.s 			page 213


 5277              		.thumb
 5278              		.thumb_func
 5279              		.fpu fpv4-sp-d16
 5281              	ulTaskNotifyTake:
 5282              	.LVL364:
 5283              	.LFB49:
4636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulReturn;
 5284              		.loc 1 4636 2 is_stmt 1 view -0
 5285              		.cfi_startproc
 5286              		@ args = 0, pretend = 0, frame = 0
 5287              		@ frame_needed = 0, uses_anonymous_args = 0
4636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulReturn;
 5288              		.loc 1 4636 2 is_stmt 0 view .LVU1462
 5289 0000 38B5     		push	{r3, r4, r5, lr}
 5290              		.cfi_def_cfa_offset 16
 5291              		.cfi_offset 3, -16
 5292              		.cfi_offset 4, -12
 5293              		.cfi_offset 5, -8
 5294              		.cfi_offset 14, -4
 5295 0002 0546     		mov	r5, r0
 5296 0004 0C46     		mov	r4, r1
4637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5297              		.loc 1 4637 2 is_stmt 1 view .LVU1463
4639:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5298              		.loc 1 4639 3 view .LVU1464
 5299 0006 FFF7FEFF 		bl	vPortEnterCritical
 5300              	.LVL365:
4642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5301              		.loc 1 4642 4 view .LVU1465
4642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5302              		.loc 1 4642 20 is_stmt 0 view .LVU1466
 5303 000a 1A4B     		ldr	r3, .L417
 5304 000c 1B68     		ldr	r3, [r3]
 5305 000e DB6C     		ldr	r3, [r3, #76]
4642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5306              		.loc 1 4642 6 view .LVU1467
 5307 0010 2BB9     		cbnz	r3, .L412
4645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5308              		.loc 1 4645 5 is_stmt 1 view .LVU1468
4645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5309              		.loc 1 4645 17 is_stmt 0 view .LVU1469
 5310 0012 184B     		ldr	r3, .L417
 5311 0014 1B68     		ldr	r3, [r3]
4645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5312              		.loc 1 4645 33 view .LVU1470
 5313 0016 0122     		movs	r2, #1
 5314 0018 83F85020 		strb	r2, [r3, #80]
4647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5315              		.loc 1 4647 5 is_stmt 1 view .LVU1471
4647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5316              		.loc 1 4647 7 is_stmt 0 view .LVU1472
 5317 001c ACB9     		cbnz	r4, .L416
 5318              	.L412:
4665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5319              		.loc 1 4665 29 is_stmt 1 view .LVU1473
4668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5320              		.loc 1 4668 3 view .LVU1474
ARM GAS  /tmp/cc7Oi1VE.s 			page 214


 5321 001e FFF7FEFF 		bl	vPortExitCritical
 5322              	.LVL366:
4670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5323              		.loc 1 4670 3 view .LVU1475
 5324 0022 FFF7FEFF 		bl	vPortEnterCritical
 5325              	.LVL367:
4672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ulReturn = pxCurrentTCB->ulNotifiedValue;
 5326              		.loc 1 4672 27 view .LVU1476
4673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5327              		.loc 1 4673 4 view .LVU1477
4673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5328              		.loc 1 4673 27 is_stmt 0 view .LVU1478
 5329 0026 134B     		ldr	r3, .L417
 5330 0028 1B68     		ldr	r3, [r3]
4673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5331              		.loc 1 4673 13 view .LVU1479
 5332 002a DC6C     		ldr	r4, [r3, #76]
 5333              	.LVL368:
4675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5334              		.loc 1 4675 4 is_stmt 1 view .LVU1480
4675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5335              		.loc 1 4675 6 is_stmt 0 view .LVU1481
 5336 002c 24B1     		cbz	r4, .L413
4677:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5337              		.loc 1 4677 5 is_stmt 1 view .LVU1482
4677:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5338              		.loc 1 4677 7 is_stmt 0 view .LVU1483
 5339 002e DDB1     		cbz	r5, .L414
4679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5340              		.loc 1 4679 6 is_stmt 1 view .LVU1484
4679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5341              		.loc 1 4679 18 is_stmt 0 view .LVU1485
 5342 0030 104B     		ldr	r3, .L417
 5343 0032 1B68     		ldr	r3, [r3]
4679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5344              		.loc 1 4679 36 view .LVU1486
 5345 0034 0022     		movs	r2, #0
 5346 0036 DA64     		str	r2, [r3, #76]
 5347              	.L413:
4688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5348              		.loc 1 4688 29 is_stmt 1 view .LVU1487
4691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 5349              		.loc 1 4691 4 view .LVU1488
4691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 5350              		.loc 1 4691 16 is_stmt 0 view .LVU1489
 5351 0038 0E4B     		ldr	r3, .L417
 5352 003a 1B68     		ldr	r3, [r3]
4691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 5353              		.loc 1 4691 32 view .LVU1490
 5354 003c 0022     		movs	r2, #0
 5355 003e 83F85020 		strb	r2, [r3, #80]
4693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5356              		.loc 1 4693 3 is_stmt 1 view .LVU1491
 5357 0042 FFF7FEFF 		bl	vPortExitCritical
 5358              	.LVL369:
4695:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 5359              		.loc 1 4695 3 view .LVU1492
ARM GAS  /tmp/cc7Oi1VE.s 			page 215


4696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5360              		.loc 1 4696 2 is_stmt 0 view .LVU1493
 5361 0046 2046     		mov	r0, r4
 5362 0048 38BD     		pop	{r3, r4, r5, pc}
 5363              	.LVL370:
 5364              	.L416:
4649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_NOTIFY_TAKE_BLOCK();
 5365              		.loc 1 4649 6 is_stmt 1 view .LVU1494
 5366 004a 1146     		mov	r1, r2
 5367 004c 2046     		mov	r0, r4
 5368 004e FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 5369              	.LVL371:
4650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5370              		.loc 1 4650 35 view .LVU1495
4656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5371              		.loc 1 4656 6 view .LVU1496
 5372 0052 4FF0E023 		mov	r3, #-536813568
 5373 0056 4FF08052 		mov	r2, #268435456
 5374 005a C3F8042D 		str	r2, [r3, #3332]
4656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5375              		.loc 1 4656 6 view .LVU1497
 5376              		.syntax unified
 5377              	@ 4656 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 5378 005e BFF34F8F 		dsb
 5379              	@ 0 "" 2
4656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5380              		.loc 1 4656 6 view .LVU1498
 5381              	@ 4656 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 5382 0062 BFF36F8F 		isb
 5383              	@ 0 "" 2
4656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5384              		.loc 1 4656 28 view .LVU1499
 5385              		.thumb
 5386              		.syntax unified
 5387 0066 DAE7     		b	.L412
 5388              	.LVL372:
 5389              	.L414:
4683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5390              		.loc 1 4683 6 view .LVU1500
4683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5391              		.loc 1 4683 18 is_stmt 0 view .LVU1501
 5392 0068 024B     		ldr	r3, .L417
 5393 006a 1B68     		ldr	r3, [r3]
4683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5394              		.loc 1 4683 47 view .LVU1502
 5395 006c 621E     		subs	r2, r4, #1
4683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5396              		.loc 1 4683 36 view .LVU1503
 5397 006e DA64     		str	r2, [r3, #76]
 5398 0070 E2E7     		b	.L413
 5399              	.L418:
 5400 0072 00BF     		.align	2
 5401              	.L417:
 5402 0074 00000000 		.word	.LANCHOR10
 5403              		.cfi_endproc
 5404              	.LFE49:
 5406              		.section	.text.xTaskNotifyWait,"ax",%progbits
ARM GAS  /tmp/cc7Oi1VE.s 			page 216


 5407              		.align	1
 5408              		.global	xTaskNotifyWait
 5409              		.syntax unified
 5410              		.thumb
 5411              		.thumb_func
 5412              		.fpu fpv4-sp-d16
 5414              	xTaskNotifyWait:
 5415              	.LVL373:
 5416              	.LFB50:
4704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 5417              		.loc 1 4704 2 is_stmt 1 view -0
 5418              		.cfi_startproc
 5419              		@ args = 0, pretend = 0, frame = 0
 5420              		@ frame_needed = 0, uses_anonymous_args = 0
4704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 5421              		.loc 1 4704 2 is_stmt 0 view .LVU1505
 5422 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 5423              		.cfi_def_cfa_offset 24
 5424              		.cfi_offset 3, -24
 5425              		.cfi_offset 4, -20
 5426              		.cfi_offset 5, -16
 5427              		.cfi_offset 6, -12
 5428              		.cfi_offset 7, -8
 5429              		.cfi_offset 14, -4
 5430 0002 0646     		mov	r6, r0
 5431 0004 0F46     		mov	r7, r1
 5432 0006 1446     		mov	r4, r2
 5433 0008 1D46     		mov	r5, r3
4705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5434              		.loc 1 4705 2 is_stmt 1 view .LVU1506
4707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5435              		.loc 1 4707 3 view .LVU1507
 5436 000a FFF7FEFF 		bl	vPortEnterCritical
 5437              	.LVL374:
4710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5438              		.loc 1 4710 4 view .LVU1508
4710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5439              		.loc 1 4710 20 is_stmt 0 view .LVU1509
 5440 000e 214B     		ldr	r3, .L427
 5441 0010 1B68     		ldr	r3, [r3]
 5442 0012 93F85020 		ldrb	r2, [r3, #80]	@ zero_extendqisi2
 5443 0016 D2B2     		uxtb	r2, r2
4710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5444              		.loc 1 4710 6 view .LVU1510
 5445 0018 022A     		cmp	r2, #2
 5446 001a 0AD0     		beq	.L420
4715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5447              		.loc 1 4715 5 is_stmt 1 view .LVU1511
4715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5448              		.loc 1 4715 35 is_stmt 0 view .LVU1512
 5449 001c 1D4B     		ldr	r3, .L427
 5450 001e 1A68     		ldr	r2, [r3]
 5451 0020 D06C     		ldr	r0, [r2, #76]
 5452 0022 20EA0606 		bic	r6, r0, r6
 5453              	.LVL375:
4715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5454              		.loc 1 4715 35 view .LVU1513
ARM GAS  /tmp/cc7Oi1VE.s 			page 217


 5455 0026 D664     		str	r6, [r2, #76]
4718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5456              		.loc 1 4718 5 is_stmt 1 view .LVU1514
4718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5457              		.loc 1 4718 17 is_stmt 0 view .LVU1515
 5458 0028 1B68     		ldr	r3, [r3]
4718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5459              		.loc 1 4718 33 view .LVU1516
 5460 002a 0122     		movs	r2, #1
 5461 002c 83F85020 		strb	r2, [r3, #80]
4720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5462              		.loc 1 4720 5 is_stmt 1 view .LVU1517
4720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5463              		.loc 1 4720 7 is_stmt 0 view .LVU1518
 5464 0030 CDB9     		cbnz	r5, .L425
 5465              	.L420:
4738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5466              		.loc 1 4738 29 is_stmt 1 view .LVU1519
4741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5467              		.loc 1 4741 3 view .LVU1520
 5468 0032 FFF7FEFF 		bl	vPortExitCritical
 5469              	.LVL376:
4743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5470              		.loc 1 4743 3 view .LVU1521
 5471 0036 FFF7FEFF 		bl	vPortEnterCritical
 5472              	.LVL377:
4745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5473              		.loc 1 4745 27 view .LVU1522
4747:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5474              		.loc 1 4747 4 view .LVU1523
4747:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5475              		.loc 1 4747 6 is_stmt 0 view .LVU1524
 5476 003a 1CB1     		cbz	r4, .L421
4751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5477              		.loc 1 4751 5 is_stmt 1 view .LVU1525
4751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5478              		.loc 1 4751 41 is_stmt 0 view .LVU1526
 5479 003c 154B     		ldr	r3, .L427
 5480 003e 1B68     		ldr	r3, [r3]
 5481 0040 DB6C     		ldr	r3, [r3, #76]
4751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5482              		.loc 1 4751 27 view .LVU1527
 5483 0042 2360     		str	r3, [r4]
 5484              	.L421:
4758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5485              		.loc 1 4758 4 is_stmt 1 view .LVU1528
4758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5486              		.loc 1 4758 20 is_stmt 0 view .LVU1529
 5487 0044 134B     		ldr	r3, .L427
 5488 0046 1B68     		ldr	r3, [r3]
 5489 0048 93F85030 		ldrb	r3, [r3, #80]	@ zero_extendqisi2
 5490 004c DBB2     		uxtb	r3, r3
4758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5491              		.loc 1 4758 6 view .LVU1530
 5492 004e 022B     		cmp	r3, #2
 5493 0050 18D0     		beq	.L426
4761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
ARM GAS  /tmp/cc7Oi1VE.s 			page 218


 5494              		.loc 1 4761 13 view .LVU1531
 5495 0052 0024     		movs	r4, #0
 5496              	.LVL378:
 5497              	.L422:
4771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 5498              		.loc 1 4771 4 is_stmt 1 view .LVU1532
4771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 5499              		.loc 1 4771 16 is_stmt 0 view .LVU1533
 5500 0054 0F4B     		ldr	r3, .L427
 5501 0056 1B68     		ldr	r3, [r3]
4771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 5502              		.loc 1 4771 32 view .LVU1534
 5503 0058 0022     		movs	r2, #0
 5504 005a 83F85020 		strb	r2, [r3, #80]
4773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5505              		.loc 1 4773 3 is_stmt 1 view .LVU1535
 5506 005e FFF7FEFF 		bl	vPortExitCritical
 5507              	.LVL379:
4775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 5508              		.loc 1 4775 3 view .LVU1536
4776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5509              		.loc 1 4776 2 is_stmt 0 view .LVU1537
 5510 0062 2046     		mov	r0, r4
 5511 0064 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5512              	.LVL380:
 5513              	.L425:
4722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_NOTIFY_WAIT_BLOCK();
 5514              		.loc 1 4722 6 is_stmt 1 view .LVU1538
 5515 0066 1146     		mov	r1, r2
 5516 0068 2846     		mov	r0, r5
 5517 006a FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 5518              	.LVL381:
4723:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5519              		.loc 1 4723 35 view .LVU1539
4729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5520              		.loc 1 4729 6 view .LVU1540
 5521 006e 4FF0E023 		mov	r3, #-536813568
 5522 0072 4FF08052 		mov	r2, #268435456
 5523 0076 C3F8042D 		str	r2, [r3, #3332]
4729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5524              		.loc 1 4729 6 view .LVU1541
 5525              		.syntax unified
 5526              	@ 4729 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 5527 007a BFF34F8F 		dsb
 5528              	@ 0 "" 2
4729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5529              		.loc 1 4729 6 view .LVU1542
 5530              	@ 4729 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 5531 007e BFF36F8F 		isb
 5532              	@ 0 "" 2
4729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5533              		.loc 1 4729 28 view .LVU1543
 5534              		.thumb
 5535              		.syntax unified
 5536 0082 D6E7     		b	.L420
 5537              	.L426:
4767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
ARM GAS  /tmp/cc7Oi1VE.s 			page 219


 5538              		.loc 1 4767 5 view .LVU1544
4767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
 5539              		.loc 1 4767 35 is_stmt 0 view .LVU1545
 5540 0084 034B     		ldr	r3, .L427
 5541 0086 1B68     		ldr	r3, [r3]
 5542 0088 D96C     		ldr	r1, [r3, #76]
 5543 008a 21EA0707 		bic	r7, r1, r7
 5544              	.LVL382:
4767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
 5545              		.loc 1 4767 35 view .LVU1546
 5546 008e DF64     		str	r7, [r3, #76]
4768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5547              		.loc 1 4768 5 is_stmt 1 view .LVU1547
 5548              	.LVL383:
4768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5549              		.loc 1 4768 13 is_stmt 0 view .LVU1548
 5550 0090 0124     		movs	r4, #1
 5551              	.LVL384:
4768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5552              		.loc 1 4768 13 view .LVU1549
 5553 0092 DFE7     		b	.L422
 5554              	.L428:
 5555              		.align	2
 5556              	.L427:
 5557 0094 00000000 		.word	.LANCHOR10
 5558              		.cfi_endproc
 5559              	.LFE50:
 5561              		.section	.text.xTaskGenericNotify,"ax",%progbits
 5562              		.align	1
 5563              		.global	xTaskGenericNotify
 5564              		.syntax unified
 5565              		.thumb
 5566              		.thumb_func
 5567              		.fpu fpv4-sp-d16
 5569              	xTaskGenericNotify:
 5570              	.LVL385:
 5571              	.LFB51:
4784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 5572              		.loc 1 4784 2 is_stmt 1 view -0
 5573              		.cfi_startproc
 5574              		@ args = 0, pretend = 0, frame = 0
 5575              		@ frame_needed = 0, uses_anonymous_args = 0
4784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 5576              		.loc 1 4784 2 is_stmt 0 view .LVU1551
 5577 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 5578              		.cfi_def_cfa_offset 24
 5579              		.cfi_offset 3, -24
 5580              		.cfi_offset 4, -20
 5581              		.cfi_offset 5, -16
 5582              		.cfi_offset 6, -12
 5583              		.cfi_offset 7, -8
 5584              		.cfi_offset 14, -4
4785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
 5585              		.loc 1 4785 2 is_stmt 1 view .LVU1552
4786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 5586              		.loc 1 4786 2 view .LVU1553
 5587              	.LVL386:
ARM GAS  /tmp/cc7Oi1VE.s 			page 220


4787:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5588              		.loc 1 4787 2 view .LVU1554
4789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = xTaskToNotify;
 5589              		.loc 1 4789 3 view .LVU1555
 5590 0002 A8B1     		cbz	r0, .L448
 5591 0004 0F46     		mov	r7, r1
 5592 0006 1446     		mov	r4, r2
 5593 0008 1D46     		mov	r5, r3
 5594 000a 0646     		mov	r6, r0
4789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = xTaskToNotify;
 5595              		.loc 1 4789 32 discriminator 2 view .LVU1556
4790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5596              		.loc 1 4790 3 discriminator 2 view .LVU1557
 5597              	.LVL387:
4792:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5598              		.loc 1 4792 3 discriminator 2 view .LVU1558
 5599 000c FFF7FEFF 		bl	vPortEnterCritical
 5600              	.LVL388:
4794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5601              		.loc 1 4794 4 discriminator 2 view .LVU1559
4794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5602              		.loc 1 4794 6 is_stmt 0 discriminator 2 view .LVU1560
 5603 0010 0DB1     		cbz	r5, .L432
4796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5604              		.loc 1 4796 5 is_stmt 1 view .LVU1561
4796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5605              		.loc 1 4796 42 is_stmt 0 view .LVU1562
 5606 0012 F36C     		ldr	r3, [r6, #76]
4796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5607              		.loc 1 4796 35 view .LVU1563
 5608 0014 2B60     		str	r3, [r5]
 5609              	.L432:
4799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5610              		.loc 1 4799 4 is_stmt 1 view .LVU1564
4799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5611              		.loc 1 4799 26 is_stmt 0 view .LVU1565
 5612 0016 96F85030 		ldrb	r3, [r6, #80]	@ zero_extendqisi2
 5613 001a DBB2     		uxtb	r3, r3
 5614              	.LVL389:
4801:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5615              		.loc 1 4801 4 is_stmt 1 view .LVU1566
4801:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5616              		.loc 1 4801 25 is_stmt 0 view .LVU1567
 5617 001c 0222     		movs	r2, #2
 5618 001e 86F85020 		strb	r2, [r6, #80]
4803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5619              		.loc 1 4803 4 is_stmt 1 view .LVU1568
 5620 0022 042C     		cmp	r4, #4
 5621 0024 1FD8     		bhi	.L433
 5622 0026 DFE804F0 		tbb	[pc, r4]
 5623              	.L435:
 5624 002a 2B       		.byte	(.L444-.L435)/2
 5625 002b 0C       		.byte	(.L438-.L435)/2
 5626 002c 11       		.byte	(.L437-.L435)/2
 5627 002d 16       		.byte	(.L436-.L435)/2
 5628 002e 19       		.byte	(.L434-.L435)/2
 5629              	.LVL390:
ARM GAS  /tmp/cc7Oi1VE.s 			page 221


 5630 002f 00       		.p2align 1
 5631              	.L448:
4789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = xTaskToNotify;
 5632              		.loc 1 4789 3 view .LVU1569
 5633              	.LBB203:
 5634              	.LBI203:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 5635              		.loc 2 191 30 view .LVU1570
 5636              	.LBB204:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 5637              		.loc 2 193 1 view .LVU1571
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5638              		.loc 2 195 2 view .LVU1572
 5639              		.syntax unified
 5640              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 5641 0030 4FF05003 			mov r3, #80												
 5642 0034 83F31188 		msr basepri, r3											
 5643 0038 BFF36F8F 		isb														
 5644 003c BFF34F8F 		dsb														
 5645              	
 5646              	@ 0 "" 2
 5647              	.LVL391:
 5648              		.thumb
 5649              		.syntax unified
 5650              	.L431:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5651              		.loc 2 195 2 is_stmt 0 view .LVU1573
 5652              	.LBE204:
 5653              	.LBE203:
4789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = xTaskToNotify;
 5654              		.loc 1 4789 3 is_stmt 1 discriminator 1 view .LVU1574
4789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = xTaskToNotify;
 5655              		.loc 1 4789 3 discriminator 1 view .LVU1575
4789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = xTaskToNotify;
 5656              		.loc 1 4789 3 discriminator 1 view .LVU1576
 5657 0040 FEE7     		b	.L431
 5658              	.LVL392:
 5659              	.L438:
4806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5660              		.loc 1 4806 6 view .LVU1577
4806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5661              		.loc 1 4806 29 is_stmt 0 view .LVU1578
 5662 0042 F26C     		ldr	r2, [r6, #76]
 5663 0044 1743     		orrs	r7, r7, r2
 5664              	.LVL393:
4806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5665              		.loc 1 4806 29 view .LVU1579
 5666 0046 F764     		str	r7, [r6, #76]
4807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5667              		.loc 1 4807 6 is_stmt 1 view .LVU1580
4786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 5668              		.loc 1 4786 13 is_stmt 0 view .LVU1581
 5669 0048 0124     		movs	r4, #1
4807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5670              		.loc 1 4807 6 view .LVU1582
 5671 004a 1AE0     		b	.L439
 5672              	.LVL394:
ARM GAS  /tmp/cc7Oi1VE.s 			page 222


 5673              	.L437:
4810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5674              		.loc 1 4810 6 is_stmt 1 view .LVU1583
4810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5675              		.loc 1 4810 13 is_stmt 0 view .LVU1584
 5676 004c F26C     		ldr	r2, [r6, #76]
4810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5677              		.loc 1 4810 32 view .LVU1585
 5678 004e 0132     		adds	r2, r2, #1
 5679 0050 F264     		str	r2, [r6, #76]
4811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5680              		.loc 1 4811 6 is_stmt 1 view .LVU1586
4786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 5681              		.loc 1 4786 13 is_stmt 0 view .LVU1587
 5682 0052 0124     		movs	r4, #1
4811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5683              		.loc 1 4811 6 view .LVU1588
 5684 0054 15E0     		b	.L439
 5685              	.L436:
4814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5686              		.loc 1 4814 6 is_stmt 1 view .LVU1589
4814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5687              		.loc 1 4814 29 is_stmt 0 view .LVU1590
 5688 0056 F764     		str	r7, [r6, #76]
4815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5689              		.loc 1 4815 6 is_stmt 1 view .LVU1591
4786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 5690              		.loc 1 4786 13 is_stmt 0 view .LVU1592
 5691 0058 0124     		movs	r4, #1
4815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5692              		.loc 1 4815 6 view .LVU1593
 5693 005a 12E0     		b	.L439
 5694              	.L434:
4818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5695              		.loc 1 4818 6 is_stmt 1 view .LVU1594
4818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5696              		.loc 1 4818 8 is_stmt 0 view .LVU1595
 5697 005c 022B     		cmp	r3, #2
 5698 005e 16D0     		beq	.L445
4820:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5699              		.loc 1 4820 7 is_stmt 1 view .LVU1596
4820:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5700              		.loc 1 4820 30 is_stmt 0 view .LVU1597
 5701 0060 F764     		str	r7, [r6, #76]
4786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 5702              		.loc 1 4786 13 view .LVU1598
 5703 0062 0124     		movs	r4, #1
 5704 0064 0DE0     		b	.L439
 5705              	.L433:
4838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5706              		.loc 1 4838 6 is_stmt 1 view .LVU1599
 5707 0066 F26C     		ldr	r2, [r6, #76]
 5708 0068 B2F1FF3F 		cmp	r2, #-1
 5709 006c 11D0     		beq	.L446
4838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5710              		.loc 1 4838 6 view .LVU1600
 5711              	.LBB205:
ARM GAS  /tmp/cc7Oi1VE.s 			page 223


 5712              	.LBI205:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 5713              		.loc 2 191 30 view .LVU1601
 5714              	.LBB206:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 5715              		.loc 2 193 1 view .LVU1602
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5716              		.loc 2 195 2 view .LVU1603
 5717              		.syntax unified
 5718              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 5719 006e 4FF05003 			mov r3, #80												
 5720 0072 83F31188 		msr basepri, r3											
 5721 0076 BFF36F8F 		isb														
 5722 007a BFF34F8F 		dsb														
 5723              	
 5724              	@ 0 "" 2
 5725              	.LVL395:
 5726              		.thumb
 5727              		.syntax unified
 5728              	.L440:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5729              		.loc 2 195 2 is_stmt 0 view .LVU1604
 5730              	.LBE206:
 5731              	.LBE205:
4838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5732              		.loc 1 4838 6 is_stmt 1 discriminator 2 view .LVU1605
4838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5733              		.loc 1 4838 6 discriminator 2 view .LVU1606
4838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5734              		.loc 1 4838 6 discriminator 2 view .LVU1607
 5735 007e FEE7     		b	.L440
 5736              	.LVL396:
 5737              	.L444:
4803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5738              		.loc 1 4803 4 is_stmt 0 view .LVU1608
 5739 0080 0124     		movs	r4, #1
 5740              	.LVL397:
 5741              	.L439:
4843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5742              		.loc 1 4843 22 is_stmt 1 view .LVU1609
4847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5743              		.loc 1 4847 4 view .LVU1610
4847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5744              		.loc 1 4847 6 is_stmt 0 view .LVU1611
 5745 0082 012B     		cmp	r3, #1
 5746 0084 07D0     		beq	.L449
 5747              	.LVL398:
 5748              	.L441:
4884:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5749              		.loc 1 4884 29 is_stmt 1 view .LVU1612
4887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5750              		.loc 1 4887 3 view .LVU1613
 5751 0086 FFF7FEFF 		bl	vPortExitCritical
 5752              	.LVL399:
4889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 5753              		.loc 1 4889 3 view .LVU1614
4890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cc7Oi1VE.s 			page 224


 5754              		.loc 1 4890 2 is_stmt 0 view .LVU1615
 5755 008a 2046     		mov	r0, r4
 5756 008c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5757              	.LVL400:
 5758              	.L445:
4825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5759              		.loc 1 4825 15 view .LVU1616
 5760 008e 0024     		movs	r4, #0
 5761 0090 F7E7     		b	.L439
 5762              	.L446:
4786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 5763              		.loc 1 4786 13 view .LVU1617
 5764 0092 0124     		movs	r4, #1
 5765 0094 F5E7     		b	.L439
 5766              	.LVL401:
 5767              	.L449:
4849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
 5768              		.loc 1 4849 5 is_stmt 1 view .LVU1618
4849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
 5769              		.loc 1 4849 14 is_stmt 0 view .LVU1619
 5770 0096 351D     		adds	r5, r6, #4
 5771              	.LVL402:
4849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
 5772              		.loc 1 4849 14 view .LVU1620
 5773 0098 2846     		mov	r0, r5
 5774 009a FFF7FEFF 		bl	uxListRemove
 5775              	.LVL403:
4850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5776              		.loc 1 4850 5 is_stmt 1 view .LVU1621
4850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5777              		.loc 1 4850 5 view .LVU1622
 5778 009e F06A     		ldr	r0, [r6, #44]
 5779 00a0 0123     		movs	r3, #1
 5780 00a2 8340     		lsls	r3, r3, r0
 5781 00a4 134A     		ldr	r2, .L450
 5782 00a6 1168     		ldr	r1, [r2]
 5783 00a8 0B43     		orrs	r3, r3, r1
 5784 00aa 1360     		str	r3, [r2]
4850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5785              		.loc 1 4850 5 view .LVU1623
 5786 00ac 00EB8000 		add	r0, r0, r0, lsl #2
 5787 00b0 2946     		mov	r1, r5
 5788 00b2 114B     		ldr	r3, .L450+4
 5789 00b4 03EB8000 		add	r0, r3, r0, lsl #2
 5790 00b8 FFF7FEFF 		bl	vListInsertEnd
 5791              	.LVL404:
4850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5792              		.loc 1 4850 35 view .LVU1624
4853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5793              		.loc 1 4853 5 view .LVU1625
 5794 00bc B36A     		ldr	r3, [r6, #40]
 5795 00be 43B1     		cbz	r3, .L442
4853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5796              		.loc 1 4853 5 view .LVU1626
 5797              	.LBB207:
 5798              	.LBI207:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
ARM GAS  /tmp/cc7Oi1VE.s 			page 225


 5799              		.loc 2 191 30 view .LVU1627
 5800              	.LBB208:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 5801              		.loc 2 193 1 view .LVU1628
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5802              		.loc 2 195 2 view .LVU1629
 5803              		.syntax unified
 5804              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 5805 00c0 4FF05003 			mov r3, #80												
 5806 00c4 83F31188 		msr basepri, r3											
 5807 00c8 BFF36F8F 		isb														
 5808 00cc BFF34F8F 		dsb														
 5809              	
 5810              	@ 0 "" 2
 5811              	.LVL405:
 5812              		.thumb
 5813              		.syntax unified
 5814              	.L443:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5815              		.loc 2 195 2 is_stmt 0 view .LVU1630
 5816              	.LBE208:
 5817              	.LBE207:
4853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5818              		.loc 1 4853 5 is_stmt 1 discriminator 3 view .LVU1631
4853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5819              		.loc 1 4853 5 discriminator 3 view .LVU1632
4853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5820              		.loc 1 4853 5 discriminator 3 view .LVU1633
 5821 00d0 FEE7     		b	.L443
 5822              	.L442:
4853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5823              		.loc 1 4853 82 discriminator 2 view .LVU1634
4871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5824              		.loc 1 4871 5 discriminator 2 view .LVU1635
4871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5825              		.loc 1 4871 14 is_stmt 0 discriminator 2 view .LVU1636
 5826 00d2 F26A     		ldr	r2, [r6, #44]
4871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5827              		.loc 1 4871 41 discriminator 2 view .LVU1637
 5828 00d4 094B     		ldr	r3, .L450+8
 5829 00d6 1B68     		ldr	r3, [r3]
 5830 00d8 DB6A     		ldr	r3, [r3, #44]
4871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5831              		.loc 1 4871 7 discriminator 2 view .LVU1638
 5832 00da 9A42     		cmp	r2, r3
 5833 00dc D3D9     		bls	.L441
4875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5834              		.loc 1 4875 6 is_stmt 1 view .LVU1639
 5835 00de 4FF0E023 		mov	r3, #-536813568
 5836 00e2 4FF08052 		mov	r2, #268435456
 5837 00e6 C3F8042D 		str	r2, [r3, #3332]
4875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5838              		.loc 1 4875 6 view .LVU1640
 5839              		.syntax unified
 5840              	@ 4875 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 5841 00ea BFF34F8F 		dsb
 5842              	@ 0 "" 2
ARM GAS  /tmp/cc7Oi1VE.s 			page 226


4875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5843              		.loc 1 4875 6 view .LVU1641
 5844              	@ 4875 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 5845 00ee BFF36F8F 		isb
 5846              	@ 0 "" 2
4875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5847              		.loc 1 4875 37 view .LVU1642
 5848              		.thumb
 5849              		.syntax unified
 5850 00f2 C8E7     		b	.L441
 5851              	.L451:
 5852              		.align	2
 5853              	.L450:
 5854 00f4 00000000 		.word	.LANCHOR13
 5855 00f8 00000000 		.word	.LANCHOR4
 5856 00fc 00000000 		.word	.LANCHOR10
 5857              		.cfi_endproc
 5858              	.LFE51:
 5860              		.section	.text.xTaskGenericNotifyFromISR,"ax",%progbits
 5861              		.align	1
 5862              		.global	xTaskGenericNotifyFromISR
 5863              		.syntax unified
 5864              		.thumb
 5865              		.thumb_func
 5866              		.fpu fpv4-sp-d16
 5868              	xTaskGenericNotifyFromISR:
 5869              	.LVL406:
 5870              	.LFB52:
4898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 5871              		.loc 1 4898 2 view -0
 5872              		.cfi_startproc
 5873              		@ args = 4, pretend = 0, frame = 0
 5874              		@ frame_needed = 0, uses_anonymous_args = 0
4899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 5875              		.loc 1 4899 2 view .LVU1644
4900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
 5876              		.loc 1 4900 2 view .LVU1645
4901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 5877              		.loc 1 4901 2 view .LVU1646
4902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5878              		.loc 1 4902 2 view .LVU1647
4904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5879              		.loc 1 4904 3 view .LVU1648
 5880 0000 08B3     		cbz	r0, .L475
4898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 5881              		.loc 1 4898 2 is_stmt 0 discriminator 2 view .LVU1649
 5882 0002 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 5883              		.cfi_def_cfa_offset 24
 5884              		.cfi_offset 4, -24
 5885              		.cfi_offset 5, -20
 5886              		.cfi_offset 6, -16
 5887              		.cfi_offset 7, -12
 5888              		.cfi_offset 8, -8
 5889              		.cfi_offset 14, -4
 5890 0006 0E46     		mov	r6, r1
 5891 0008 1446     		mov	r4, r2
 5892 000a 1D46     		mov	r5, r3
ARM GAS  /tmp/cc7Oi1VE.s 			page 227


 5893 000c 0746     		mov	r7, r0
4904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5894              		.loc 1 4904 32 is_stmt 1 discriminator 2 view .LVU1650
4922:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5895              		.loc 1 4922 3 discriminator 2 view .LVU1651
 5896 000e FFF7FEFF 		bl	vPortValidateInterruptPriority
 5897              	.LVL407:
4924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5898              		.loc 1 4924 3 discriminator 2 view .LVU1652
4926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5899              		.loc 1 4926 3 discriminator 2 view .LVU1653
 5900              	.LBB209:
 5901              	.LBI209:
 207:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 5902              		.loc 2 207 34 discriminator 2 view .LVU1654
 5903              	.LBB210:
 209:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 5904              		.loc 2 209 1 discriminator 2 view .LVU1655
 211:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5905              		.loc 2 211 2 discriminator 2 view .LVU1656
 5906              		.syntax unified
 5907              	@ 211 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 5908 0012 EFF31188 			mrs r8, basepri											
 5909 0016 4FF05003 		mov r3, #80												
 5910 001a 83F31188 		msr basepri, r3											
 5911 001e BFF36F8F 		isb														
 5912 0022 BFF34F8F 		dsb														
 5913              	
 5914              	@ 0 "" 2
 5915              	.LVL408:
 223:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 5916              		.loc 2 223 2 discriminator 2 view .LVU1657
 223:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 5917              		.loc 2 223 2 is_stmt 0 discriminator 2 view .LVU1658
 5918              		.thumb
 5919              		.syntax unified
 5920              	.LBE210:
 5921              	.LBE209:
4928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5922              		.loc 1 4928 4 is_stmt 1 discriminator 2 view .LVU1659
4928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5923              		.loc 1 4928 6 is_stmt 0 discriminator 2 view .LVU1660
 5924 0026 0DB1     		cbz	r5, .L455
4930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5925              		.loc 1 4930 5 is_stmt 1 view .LVU1661
4930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5926              		.loc 1 4930 42 is_stmt 0 view .LVU1662
 5927 0028 FB6C     		ldr	r3, [r7, #76]
4930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5928              		.loc 1 4930 35 view .LVU1663
 5929 002a 2B60     		str	r3, [r5]
 5930              	.L455:
4933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 5931              		.loc 1 4933 4 is_stmt 1 view .LVU1664
4933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 5932              		.loc 1 4933 26 is_stmt 0 view .LVU1665
 5933 002c 97F85030 		ldrb	r3, [r7, #80]	@ zero_extendqisi2
ARM GAS  /tmp/cc7Oi1VE.s 			page 228


 5934 0030 DBB2     		uxtb	r3, r3
 5935              	.LVL409:
4934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5936              		.loc 1 4934 4 is_stmt 1 view .LVU1666
4934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5937              		.loc 1 4934 25 is_stmt 0 view .LVU1667
 5938 0032 0222     		movs	r2, #2
 5939 0034 87F85020 		strb	r2, [r7, #80]
4936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5940              		.loc 1 4936 4 is_stmt 1 view .LVU1668
 5941 0038 042C     		cmp	r4, #4
 5942 003a 1FD8     		bhi	.L456
 5943 003c DFE804F0 		tbb	[pc, r4]
 5944              	.L458:
 5945 0040 2B       		.byte	(.L470-.L458)/2
 5946 0041 0C       		.byte	(.L461-.L458)/2
 5947 0042 11       		.byte	(.L460-.L458)/2
 5948 0043 16       		.byte	(.L459-.L458)/2
 5949 0044 19       		.byte	(.L457-.L458)/2
 5950              	.LVL410:
 5951 0045 00       		.p2align 1
 5952              	.L475:
 5953              		.cfi_def_cfa_offset 0
 5954              		.cfi_restore 4
 5955              		.cfi_restore 5
 5956              		.cfi_restore 6
 5957              		.cfi_restore 7
 5958              		.cfi_restore 8
 5959              		.cfi_restore 14
4904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5960              		.loc 1 4904 3 view .LVU1669
 5961              	.LBB211:
 5962              	.LBI211:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 5963              		.loc 2 191 30 view .LVU1670
 5964              	.LBB212:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 5965              		.loc 2 193 1 view .LVU1671
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5966              		.loc 2 195 2 view .LVU1672
 5967              		.syntax unified
 5968              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 5969 0046 4FF05003 			mov r3, #80												
 5970 004a 83F31188 		msr basepri, r3											
 5971 004e BFF36F8F 		isb														
 5972 0052 BFF34F8F 		dsb														
 5973              	
 5974              	@ 0 "" 2
 5975              	.LVL411:
 5976              		.thumb
 5977              		.syntax unified
 5978              	.L454:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5979              		.loc 2 195 2 is_stmt 0 view .LVU1673
 5980              	.LBE212:
 5981              	.LBE211:
4904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cc7Oi1VE.s 			page 229


 5982              		.loc 1 4904 3 is_stmt 1 discriminator 1 view .LVU1674
4904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5983              		.loc 1 4904 3 discriminator 1 view .LVU1675
4904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5984              		.loc 1 4904 3 discriminator 1 view .LVU1676
 5985 0056 FEE7     		b	.L454
 5986              	.LVL412:
 5987              	.L461:
 5988              		.cfi_def_cfa_offset 24
 5989              		.cfi_offset 4, -24
 5990              		.cfi_offset 5, -20
 5991              		.cfi_offset 6, -16
 5992              		.cfi_offset 7, -12
 5993              		.cfi_offset 8, -8
 5994              		.cfi_offset 14, -4
4939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5995              		.loc 1 4939 6 view .LVU1677
4939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5996              		.loc 1 4939 29 is_stmt 0 view .LVU1678
 5997 0058 FA6C     		ldr	r2, [r7, #76]
 5998 005a 1643     		orrs	r6, r6, r2
 5999              	.LVL413:
4939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 6000              		.loc 1 4939 29 view .LVU1679
 6001 005c FE64     		str	r6, [r7, #76]
4940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6002              		.loc 1 4940 6 is_stmt 1 view .LVU1680
4901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 6003              		.loc 1 4901 13 is_stmt 0 view .LVU1681
 6004 005e 0124     		movs	r4, #1
4940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6005              		.loc 1 4940 6 view .LVU1682
 6006 0060 1AE0     		b	.L462
 6007              	.LVL414:
 6008              	.L460:
4943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 6009              		.loc 1 4943 6 is_stmt 1 view .LVU1683
4943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 6010              		.loc 1 4943 13 is_stmt 0 view .LVU1684
 6011 0062 FA6C     		ldr	r2, [r7, #76]
4943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 6012              		.loc 1 4943 32 view .LVU1685
 6013 0064 0132     		adds	r2, r2, #1
 6014 0066 FA64     		str	r2, [r7, #76]
4944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6015              		.loc 1 4944 6 is_stmt 1 view .LVU1686
4901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 6016              		.loc 1 4901 13 is_stmt 0 view .LVU1687
 6017 0068 0124     		movs	r4, #1
4944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6018              		.loc 1 4944 6 view .LVU1688
 6019 006a 15E0     		b	.L462
 6020              	.L459:
4947:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 6021              		.loc 1 4947 6 is_stmt 1 view .LVU1689
4947:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 6022              		.loc 1 4947 29 is_stmt 0 view .LVU1690
ARM GAS  /tmp/cc7Oi1VE.s 			page 230


 6023 006c FE64     		str	r6, [r7, #76]
4948:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6024              		.loc 1 4948 6 is_stmt 1 view .LVU1691
4901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 6025              		.loc 1 4901 13 is_stmt 0 view .LVU1692
 6026 006e 0124     		movs	r4, #1
4948:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6027              		.loc 1 4948 6 view .LVU1693
 6028 0070 12E0     		b	.L462
 6029              	.L457:
4951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 6030              		.loc 1 4951 6 is_stmt 1 view .LVU1694
4951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 6031              		.loc 1 4951 8 is_stmt 0 view .LVU1695
 6032 0072 022B     		cmp	r3, #2
 6033 0074 17D0     		beq	.L471
4953:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 6034              		.loc 1 4953 7 is_stmt 1 view .LVU1696
4953:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 6035              		.loc 1 4953 30 is_stmt 0 view .LVU1697
 6036 0076 FE64     		str	r6, [r7, #76]
4901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 6037              		.loc 1 4901 13 view .LVU1698
 6038 0078 0124     		movs	r4, #1
 6039 007a 0DE0     		b	.L462
 6040              	.L456:
4971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 6041              		.loc 1 4971 6 is_stmt 1 view .LVU1699
 6042 007c FA6C     		ldr	r2, [r7, #76]
 6043 007e B2F1FF3F 		cmp	r2, #-1
 6044 0082 12D0     		beq	.L472
4971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 6045              		.loc 1 4971 6 view .LVU1700
 6046              	.LBB213:
 6047              	.LBI213:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 6048              		.loc 2 191 30 view .LVU1701
 6049              	.LBB214:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 6050              		.loc 2 193 1 view .LVU1702
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 6051              		.loc 2 195 2 view .LVU1703
 6052              		.syntax unified
 6053              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 6054 0084 4FF05003 			mov r3, #80												
 6055 0088 83F31188 		msr basepri, r3											
 6056 008c BFF36F8F 		isb														
 6057 0090 BFF34F8F 		dsb														
 6058              	
 6059              	@ 0 "" 2
 6060              	.LVL415:
 6061              		.thumb
 6062              		.syntax unified
 6063              	.L463:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 6064              		.loc 2 195 2 is_stmt 0 view .LVU1704
 6065              	.LBE214:
ARM GAS  /tmp/cc7Oi1VE.s 			page 231


 6066              	.LBE213:
4971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 6067              		.loc 1 4971 6 is_stmt 1 discriminator 2 view .LVU1705
4971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 6068              		.loc 1 4971 6 discriminator 2 view .LVU1706
4971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 6069              		.loc 1 4971 6 discriminator 2 view .LVU1707
 6070 0094 FEE7     		b	.L463
 6071              	.LVL416:
 6072              	.L470:
4936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 6073              		.loc 1 4936 4 is_stmt 0 view .LVU1708
 6074 0096 0124     		movs	r4, #1
 6075              	.LVL417:
 6076              	.L462:
4975:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6077              		.loc 1 4975 31 is_stmt 1 view .LVU1709
4979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 6078              		.loc 1 4979 4 view .LVU1710
4979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 6079              		.loc 1 4979 6 is_stmt 0 view .LVU1711
 6080 0098 012B     		cmp	r3, #1
 6081 009a 08D0     		beq	.L476
 6082              	.LVL418:
 6083              	.L464:
5012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6084              		.loc 1 5012 30 is_stmt 1 view .LVU1712
5016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6085              		.loc 1 5016 3 view .LVU1713
 6086              	.LBB215:
 6087              	.LBI215:
 227:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 6088              		.loc 2 227 30 view .LVU1714
 6089              	.LBB216:
 6090              		.loc 2 229 2 view .LVU1715
 6091              		.syntax unified
 6092              	@ 229 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 6093 009c 88F31188 			msr basepri, r8	
 6094              	@ 0 "" 2
 6095              	.LVL419:
 6096              		.loc 2 229 2 is_stmt 0 view .LVU1716
 6097              		.thumb
 6098              		.syntax unified
 6099              	.LBE216:
 6100              	.LBE215:
5018:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 6101              		.loc 1 5018 3 is_stmt 1 view .LVU1717
5019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6102              		.loc 1 5019 2 is_stmt 0 view .LVU1718
 6103 00a0 2046     		mov	r0, r4
 6104 00a2 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 6105              	.LVL420:
 6106              	.L471:
4958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 6107              		.loc 1 4958 15 view .LVU1719
 6108 00a6 0024     		movs	r4, #0
 6109 00a8 F6E7     		b	.L462
ARM GAS  /tmp/cc7Oi1VE.s 			page 232


 6110              	.L472:
4901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 6111              		.loc 1 4901 13 view .LVU1720
 6112 00aa 0124     		movs	r4, #1
 6113 00ac F4E7     		b	.L462
 6114              	.LVL421:
 6115              	.L476:
4982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6116              		.loc 1 4982 5 is_stmt 1 view .LVU1721
 6117 00ae BB6A     		ldr	r3, [r7, #40]
 6118              	.LVL422:
4982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6119              		.loc 1 4982 5 is_stmt 0 view .LVU1722
 6120 00b0 43B1     		cbz	r3, .L465
4982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6121              		.loc 1 4982 5 is_stmt 1 view .LVU1723
 6122              	.LBB217:
 6123              	.LBI217:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 6124              		.loc 2 191 30 view .LVU1724
 6125              	.LBB218:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 6126              		.loc 2 193 1 view .LVU1725
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 6127              		.loc 2 195 2 view .LVU1726
 6128              		.syntax unified
 6129              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 6130 00b2 4FF05003 			mov r3, #80												
 6131 00b6 83F31188 		msr basepri, r3											
 6132 00ba BFF36F8F 		isb														
 6133 00be BFF34F8F 		dsb														
 6134              	
 6135              	@ 0 "" 2
 6136              	.LVL423:
 6137              		.thumb
 6138              		.syntax unified
 6139              	.L466:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 6140              		.loc 2 195 2 is_stmt 0 view .LVU1727
 6141              	.LBE218:
 6142              	.LBE217:
4982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6143              		.loc 1 4982 5 is_stmt 1 discriminator 3 view .LVU1728
4982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6144              		.loc 1 4982 5 discriminator 3 view .LVU1729
4982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6145              		.loc 1 4982 5 discriminator 3 view .LVU1730
 6146 00c2 FEE7     		b	.L466
 6147              	.L465:
4982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6148              		.loc 1 4982 82 discriminator 2 view .LVU1731
4984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6149              		.loc 1 4984 5 discriminator 2 view .LVU1732
4984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6150              		.loc 1 4984 30 is_stmt 0 discriminator 2 view .LVU1733
 6151 00c4 154B     		ldr	r3, .L477
 6152 00c6 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/cc7Oi1VE.s 			page 233


4984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6153              		.loc 1 4984 7 discriminator 2 view .LVU1734
 6154 00c8 0BBB     		cbnz	r3, .L467
4986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 6155              		.loc 1 4986 6 is_stmt 1 view .LVU1735
4986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 6156              		.loc 1 4986 15 is_stmt 0 view .LVU1736
 6157 00ca 3D1D     		adds	r5, r7, #4
 6158              	.LVL424:
4986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 6159              		.loc 1 4986 15 view .LVU1737
 6160 00cc 2846     		mov	r0, r5
 6161 00ce FFF7FEFF 		bl	uxListRemove
 6162              	.LVL425:
4987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6163              		.loc 1 4987 6 is_stmt 1 view .LVU1738
4987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6164              		.loc 1 4987 6 view .LVU1739
 6165 00d2 F86A     		ldr	r0, [r7, #44]
 6166 00d4 0123     		movs	r3, #1
 6167 00d6 8340     		lsls	r3, r3, r0
 6168 00d8 114A     		ldr	r2, .L477+4
 6169 00da 1168     		ldr	r1, [r2]
 6170 00dc 0B43     		orrs	r3, r3, r1
 6171 00de 1360     		str	r3, [r2]
4987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6172              		.loc 1 4987 6 view .LVU1740
 6173 00e0 00EB8000 		add	r0, r0, r0, lsl #2
 6174 00e4 2946     		mov	r1, r5
 6175 00e6 0F4B     		ldr	r3, .L477+8
 6176 00e8 03EB8000 		add	r0, r3, r0, lsl #2
 6177 00ec FFF7FEFF 		bl	vListInsertEnd
 6178              	.LVL426:
4987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6179              		.loc 1 4987 36 view .LVU1741
 6180              	.L468:
4996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6181              		.loc 1 4996 5 view .LVU1742
4996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6182              		.loc 1 4996 14 is_stmt 0 view .LVU1743
 6183 00f0 FA6A     		ldr	r2, [r7, #44]
4996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6184              		.loc 1 4996 41 view .LVU1744
 6185 00f2 0D4B     		ldr	r3, .L477+12
 6186 00f4 1B68     		ldr	r3, [r3]
 6187 00f6 DB6A     		ldr	r3, [r3, #44]
4996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6188              		.loc 1 4996 7 view .LVU1745
 6189 00f8 9A42     		cmp	r2, r3
 6190 00fa CFD9     		bls	.L464
5000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 6191              		.loc 1 5000 6 is_stmt 1 view .LVU1746
5000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 6192              		.loc 1 5000 8 is_stmt 0 view .LVU1747
 6193 00fc 069B     		ldr	r3, [sp, #24]
 6194 00fe 13B1     		cbz	r3, .L469
5002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
ARM GAS  /tmp/cc7Oi1VE.s 			page 234


 6195              		.loc 1 5002 7 is_stmt 1 view .LVU1748
5002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 6196              		.loc 1 5002 34 is_stmt 0 view .LVU1749
 6197 0100 0123     		movs	r3, #1
 6198 0102 069A     		ldr	r2, [sp, #24]
 6199 0104 1360     		str	r3, [r2]
 6200              	.L469:
5008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6201              		.loc 1 5008 6 is_stmt 1 view .LVU1750
5008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6202              		.loc 1 5008 20 is_stmt 0 view .LVU1751
 6203 0106 094B     		ldr	r3, .L477+16
 6204 0108 0122     		movs	r2, #1
 6205 010a 1A60     		str	r2, [r3]
 6206 010c C6E7     		b	.L464
 6207              	.LVL427:
 6208              	.L467:
4993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6209              		.loc 1 4993 6 is_stmt 1 view .LVU1752
 6210 010e 07F11801 		add	r1, r7, #24
 6211 0112 0748     		ldr	r0, .L477+20
 6212 0114 FFF7FEFF 		bl	vListInsertEnd
 6213              	.LVL428:
 6214 0118 EAE7     		b	.L468
 6215              	.L478:
 6216 011a 00BF     		.align	2
 6217              	.L477:
 6218 011c 00000000 		.word	.LANCHOR16
 6219 0120 00000000 		.word	.LANCHOR13
 6220 0124 00000000 		.word	.LANCHOR4
 6221 0128 00000000 		.word	.LANCHOR10
 6222 012c 00000000 		.word	.LANCHOR19
 6223 0130 00000000 		.word	.LANCHOR1
 6224              		.cfi_endproc
 6225              	.LFE52:
 6227              		.section	.text.vTaskNotifyGiveFromISR,"ax",%progbits
 6228              		.align	1
 6229              		.global	vTaskNotifyGiveFromISR
 6230              		.syntax unified
 6231              		.thumb
 6232              		.thumb_func
 6233              		.fpu fpv4-sp-d16
 6235              	vTaskNotifyGiveFromISR:
 6236              	.LVL429:
 6237              	.LFB53:
5027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 6238              		.loc 1 5027 2 view -0
 6239              		.cfi_startproc
 6240              		@ args = 0, pretend = 0, frame = 0
 6241              		@ frame_needed = 0, uses_anonymous_args = 0
5027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 6242              		.loc 1 5027 2 is_stmt 0 view .LVU1754
 6243 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 6244              		.cfi_def_cfa_offset 24
 6245              		.cfi_offset 3, -24
 6246              		.cfi_offset 4, -20
 6247              		.cfi_offset 5, -16
ARM GAS  /tmp/cc7Oi1VE.s 			page 235


 6248              		.cfi_offset 6, -12
 6249              		.cfi_offset 7, -8
 6250              		.cfi_offset 14, -4
5028:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 6251              		.loc 1 5028 2 is_stmt 1 view .LVU1755
5029:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 6252              		.loc 1 5029 2 view .LVU1756
5030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6253              		.loc 1 5030 2 view .LVU1757
5032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6254              		.loc 1 5032 3 view .LVU1758
 6255 0002 D8B1     		cbz	r0, .L489
 6256 0004 0D46     		mov	r5, r1
 6257 0006 0446     		mov	r4, r0
5032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6258              		.loc 1 5032 32 discriminator 2 view .LVU1759
5050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6259              		.loc 1 5050 3 discriminator 2 view .LVU1760
 6260 0008 FFF7FEFF 		bl	vPortValidateInterruptPriority
 6261              	.LVL430:
5052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6262              		.loc 1 5052 3 discriminator 2 view .LVU1761
5054:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 6263              		.loc 1 5054 3 discriminator 2 view .LVU1762
 6264              	.LBB219:
 6265              	.LBI219:
 207:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 6266              		.loc 2 207 34 discriminator 2 view .LVU1763
 6267              	.LBB220:
 209:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 6268              		.loc 2 209 1 discriminator 2 view .LVU1764
 211:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 6269              		.loc 2 211 2 discriminator 2 view .LVU1765
 6270              		.syntax unified
 6271              	@ 211 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 6272 000c EFF31186 			mrs r6, basepri											
 6273 0010 4FF05003 		mov r3, #80												
 6274 0014 83F31188 		msr basepri, r3											
 6275 0018 BFF36F8F 		isb														
 6276 001c BFF34F8F 		dsb														
 6277              	
 6278              	@ 0 "" 2
 6279              	.LVL431:
 223:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 6280              		.loc 2 223 2 discriminator 2 view .LVU1766
 223:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 6281              		.loc 2 223 2 is_stmt 0 discriminator 2 view .LVU1767
 6282              		.thumb
 6283              		.syntax unified
 6284              	.LBE220:
 6285              	.LBE219:
5056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 6286              		.loc 1 5056 4 is_stmt 1 discriminator 2 view .LVU1768
5056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 6287              		.loc 1 5056 26 is_stmt 0 discriminator 2 view .LVU1769
 6288 0020 94F85030 		ldrb	r3, [r4, #80]	@ zero_extendqisi2
 6289 0024 DBB2     		uxtb	r3, r3
ARM GAS  /tmp/cc7Oi1VE.s 			page 236


 6290              	.LVL432:
5057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6291              		.loc 1 5057 4 is_stmt 1 discriminator 2 view .LVU1770
5057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6292              		.loc 1 5057 25 is_stmt 0 discriminator 2 view .LVU1771
 6293 0026 0222     		movs	r2, #2
 6294 0028 84F85020 		strb	r2, [r4, #80]
5061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6295              		.loc 1 5061 4 is_stmt 1 discriminator 2 view .LVU1772
5061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6296              		.loc 1 5061 11 is_stmt 0 discriminator 2 view .LVU1773
 6297 002c E26C     		ldr	r2, [r4, #76]
5061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6298              		.loc 1 5061 30 discriminator 2 view .LVU1774
 6299 002e 0132     		adds	r2, r2, #1
 6300 0030 E264     		str	r2, [r4, #76]
5063:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6301              		.loc 1 5063 36 is_stmt 1 discriminator 2 view .LVU1775
5067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 6302              		.loc 1 5067 4 discriminator 2 view .LVU1776
5067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 6303              		.loc 1 5067 6 is_stmt 0 discriminator 2 view .LVU1777
 6304 0032 012B     		cmp	r3, #1
 6305 0034 0BD0     		beq	.L490
 6306              	.LVL433:
 6307              	.L482:
5100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6308              		.loc 1 5100 30 is_stmt 1 view .LVU1778
5104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 6309              		.loc 1 5104 3 view .LVU1779
 6310              	.LBB221:
 6311              	.LBI221:
 227:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 6312              		.loc 2 227 30 view .LVU1780
 6313              	.LBB222:
 6314              		.loc 2 229 2 view .LVU1781
 6315              		.syntax unified
 6316              	@ 229 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 6317 0036 86F31188 			msr basepri, r6	
 6318              	@ 0 "" 2
 6319              	.LVL434:
 6320              		.loc 2 229 2 is_stmt 0 view .LVU1782
 6321              		.thumb
 6322              		.syntax unified
 6323              	.LBE222:
 6324              	.LBE221:
5105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6325              		.loc 1 5105 2 view .LVU1783
 6326 003a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 6327              	.LVL435:
 6328              	.L489:
5032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6329              		.loc 1 5032 3 is_stmt 1 view .LVU1784
 6330              	.LBB223:
 6331              	.LBI223:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 6332              		.loc 2 191 30 view .LVU1785
ARM GAS  /tmp/cc7Oi1VE.s 			page 237


 6333              	.LBB224:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 6334              		.loc 2 193 1 view .LVU1786
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 6335              		.loc 2 195 2 view .LVU1787
 6336              		.syntax unified
 6337              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 6338 003c 4FF05003 			mov r3, #80												
 6339 0040 83F31188 		msr basepri, r3											
 6340 0044 BFF36F8F 		isb														
 6341 0048 BFF34F8F 		dsb														
 6342              	
 6343              	@ 0 "" 2
 6344              	.LVL436:
 6345              		.thumb
 6346              		.syntax unified
 6347              	.L481:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 6348              		.loc 2 195 2 is_stmt 0 view .LVU1788
 6349              	.LBE224:
 6350              	.LBE223:
5032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6351              		.loc 1 5032 3 is_stmt 1 discriminator 1 view .LVU1789
5032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6352              		.loc 1 5032 3 discriminator 1 view .LVU1790
5032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6353              		.loc 1 5032 3 discriminator 1 view .LVU1791
 6354 004c FEE7     		b	.L481
 6355              	.LVL437:
 6356              	.L490:
5070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6357              		.loc 1 5070 5 view .LVU1792
 6358 004e A36A     		ldr	r3, [r4, #40]
 6359              	.LVL438:
5070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6360              		.loc 1 5070 5 is_stmt 0 view .LVU1793
 6361 0050 43B1     		cbz	r3, .L483
5070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6362              		.loc 1 5070 5 is_stmt 1 view .LVU1794
 6363              	.LBB225:
 6364              	.LBI225:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 6365              		.loc 2 191 30 view .LVU1795
 6366              	.LBB226:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 6367              		.loc 2 193 1 view .LVU1796
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 6368              		.loc 2 195 2 view .LVU1797
 6369              		.syntax unified
 6370              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 6371 0052 4FF05003 			mov r3, #80												
 6372 0056 83F31188 		msr basepri, r3											
 6373 005a BFF36F8F 		isb														
 6374 005e BFF34F8F 		dsb														
 6375              	
 6376              	@ 0 "" 2
 6377              	.LVL439:
ARM GAS  /tmp/cc7Oi1VE.s 			page 238


 6378              		.thumb
 6379              		.syntax unified
 6380              	.L484:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 6381              		.loc 2 195 2 is_stmt 0 view .LVU1798
 6382              	.LBE226:
 6383              	.LBE225:
5070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6384              		.loc 1 5070 5 is_stmt 1 discriminator 2 view .LVU1799
5070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6385              		.loc 1 5070 5 discriminator 2 view .LVU1800
5070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6386              		.loc 1 5070 5 discriminator 2 view .LVU1801
 6387 0062 FEE7     		b	.L484
 6388              	.L483:
5070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6389              		.loc 1 5070 82 discriminator 2 view .LVU1802
5072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6390              		.loc 1 5072 5 discriminator 2 view .LVU1803
5072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6391              		.loc 1 5072 30 is_stmt 0 discriminator 2 view .LVU1804
 6392 0064 144B     		ldr	r3, .L491
 6393 0066 1B68     		ldr	r3, [r3]
5072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6394              		.loc 1 5072 7 discriminator 2 view .LVU1805
 6395 0068 FBB9     		cbnz	r3, .L485
5074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 6396              		.loc 1 5074 6 is_stmt 1 view .LVU1806
5074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 6397              		.loc 1 5074 15 is_stmt 0 view .LVU1807
 6398 006a 271D     		adds	r7, r4, #4
 6399 006c 3846     		mov	r0, r7
 6400 006e FFF7FEFF 		bl	uxListRemove
 6401              	.LVL440:
5075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6402              		.loc 1 5075 6 is_stmt 1 view .LVU1808
5075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6403              		.loc 1 5075 6 view .LVU1809
 6404 0072 E06A     		ldr	r0, [r4, #44]
 6405 0074 0123     		movs	r3, #1
 6406 0076 8340     		lsls	r3, r3, r0
 6407 0078 104A     		ldr	r2, .L491+4
 6408 007a 1168     		ldr	r1, [r2]
 6409 007c 0B43     		orrs	r3, r3, r1
 6410 007e 1360     		str	r3, [r2]
5075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6411              		.loc 1 5075 6 view .LVU1810
 6412 0080 00EB8000 		add	r0, r0, r0, lsl #2
 6413 0084 3946     		mov	r1, r7
 6414 0086 0E4B     		ldr	r3, .L491+8
 6415 0088 03EB8000 		add	r0, r3, r0, lsl #2
 6416 008c FFF7FEFF 		bl	vListInsertEnd
 6417              	.LVL441:
5075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6418              		.loc 1 5075 36 view .LVU1811
 6419              	.L486:
5084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
ARM GAS  /tmp/cc7Oi1VE.s 			page 239


 6420              		.loc 1 5084 5 view .LVU1812
5084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6421              		.loc 1 5084 14 is_stmt 0 view .LVU1813
 6422 0090 E26A     		ldr	r2, [r4, #44]
5084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6423              		.loc 1 5084 41 view .LVU1814
 6424 0092 0C4B     		ldr	r3, .L491+12
 6425 0094 1B68     		ldr	r3, [r3]
 6426 0096 DB6A     		ldr	r3, [r3, #44]
5084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6427              		.loc 1 5084 7 view .LVU1815
 6428 0098 9A42     		cmp	r2, r3
 6429 009a CCD9     		bls	.L482
5088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 6430              		.loc 1 5088 6 is_stmt 1 view .LVU1816
5088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 6431              		.loc 1 5088 8 is_stmt 0 view .LVU1817
 6432 009c 0DB1     		cbz	r5, .L487
5090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 6433              		.loc 1 5090 7 is_stmt 1 view .LVU1818
5090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 6434              		.loc 1 5090 34 is_stmt 0 view .LVU1819
 6435 009e 0123     		movs	r3, #1
 6436 00a0 2B60     		str	r3, [r5]
 6437              	.L487:
5096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6438              		.loc 1 5096 6 is_stmt 1 view .LVU1820
5096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6439              		.loc 1 5096 20 is_stmt 0 view .LVU1821
 6440 00a2 094B     		ldr	r3, .L491+16
 6441 00a4 0122     		movs	r2, #1
 6442 00a6 1A60     		str	r2, [r3]
 6443 00a8 C5E7     		b	.L482
 6444              	.L485:
5081:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6445              		.loc 1 5081 6 is_stmt 1 view .LVU1822
 6446 00aa 04F11801 		add	r1, r4, #24
 6447 00ae 0748     		ldr	r0, .L491+20
 6448 00b0 FFF7FEFF 		bl	vListInsertEnd
 6449              	.LVL442:
 6450 00b4 ECE7     		b	.L486
 6451              	.L492:
 6452 00b6 00BF     		.align	2
 6453              	.L491:
 6454 00b8 00000000 		.word	.LANCHOR16
 6455 00bc 00000000 		.word	.LANCHOR13
 6456 00c0 00000000 		.word	.LANCHOR4
 6457 00c4 00000000 		.word	.LANCHOR10
 6458 00c8 00000000 		.word	.LANCHOR19
 6459 00cc 00000000 		.word	.LANCHOR1
 6460              		.cfi_endproc
 6461              	.LFE53:
 6463              		.section	.text.xTaskNotifyStateClear,"ax",%progbits
 6464              		.align	1
 6465              		.global	xTaskNotifyStateClear
 6466              		.syntax unified
 6467              		.thumb
ARM GAS  /tmp/cc7Oi1VE.s 			page 240


 6468              		.thumb_func
 6469              		.fpu fpv4-sp-d16
 6471              	xTaskNotifyStateClear:
 6472              	.LVL443:
 6473              	.LFB54:
5113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 6474              		.loc 1 5113 2 view -0
 6475              		.cfi_startproc
 6476              		@ args = 0, pretend = 0, frame = 0
 6477              		@ frame_needed = 0, uses_anonymous_args = 0
5113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 6478              		.loc 1 5113 2 is_stmt 0 view .LVU1824
 6479 0000 10B5     		push	{r4, lr}
 6480              		.cfi_def_cfa_offset 8
 6481              		.cfi_offset 4, -8
 6482              		.cfi_offset 14, -4
5114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 6483              		.loc 1 5114 2 is_stmt 1 view .LVU1825
5115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6484              		.loc 1 5115 2 view .LVU1826
5119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6485              		.loc 1 5119 3 view .LVU1827
5119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6486              		.loc 1 5119 11 is_stmt 0 view .LVU1828
 6487 0002 0446     		mov	r4, r0
 6488 0004 58B1     		cbz	r0, .L498
 6489              	.LVL444:
 6490              	.L494:
5121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 6491              		.loc 1 5121 3 is_stmt 1 discriminator 4 view .LVU1829
 6492 0006 FFF7FEFF 		bl	vPortEnterCritical
 6493              	.LVL445:
5123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 6494              		.loc 1 5123 4 discriminator 4 view .LVU1830
5123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 6495              		.loc 1 5123 13 is_stmt 0 discriminator 4 view .LVU1831
 6496 000a 94F85030 		ldrb	r3, [r4, #80]	@ zero_extendqisi2
 6497 000e DBB2     		uxtb	r3, r3
5123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 6498              		.loc 1 5123 6 discriminator 4 view .LVU1832
 6499 0010 022B     		cmp	r3, #2
 6500 0012 07D0     		beq	.L499
5130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 6501              		.loc 1 5130 13 view .LVU1833
 6502 0014 0024     		movs	r4, #0
 6503              	.LVL446:
 6504              	.L495:
5133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6505              		.loc 1 5133 3 is_stmt 1 view .LVU1834
 6506 0016 FFF7FEFF 		bl	vPortExitCritical
 6507              	.LVL447:
5135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 6508              		.loc 1 5135 3 view .LVU1835
5136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6509              		.loc 1 5136 2 is_stmt 0 view .LVU1836
 6510 001a 2046     		mov	r0, r4
 6511 001c 10BD     		pop	{r4, pc}
ARM GAS  /tmp/cc7Oi1VE.s 			page 241


 6512              	.LVL448:
 6513              	.L498:
5119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6514              		.loc 1 5119 11 discriminator 1 view .LVU1837
 6515 001e 044B     		ldr	r3, .L500
 6516 0020 1C68     		ldr	r4, [r3]
 6517              	.LVL449:
5119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6518              		.loc 1 5119 11 discriminator 1 view .LVU1838
 6519 0022 F0E7     		b	.L494
 6520              	.LVL450:
 6521              	.L499:
5125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdPASS;
 6522              		.loc 1 5125 5 is_stmt 1 view .LVU1839
5125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdPASS;
 6523              		.loc 1 5125 26 is_stmt 0 view .LVU1840
 6524 0024 0023     		movs	r3, #0
 6525 0026 84F85030 		strb	r3, [r4, #80]
5126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 6526              		.loc 1 5126 5 is_stmt 1 view .LVU1841
 6527              	.LVL451:
5126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 6528              		.loc 1 5126 13 is_stmt 0 view .LVU1842
 6529 002a 0124     		movs	r4, #1
 6530              	.LVL452:
5126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 6531              		.loc 1 5126 13 view .LVU1843
 6532 002c F3E7     		b	.L495
 6533              	.L501:
 6534 002e 00BF     		.align	2
 6535              	.L500:
 6536 0030 00000000 		.word	.LANCHOR10
 6537              		.cfi_endproc
 6538              	.LFE54:
 6540              		.section	.text.ulTaskNotifyValueClear,"ax",%progbits
 6541              		.align	1
 6542              		.global	ulTaskNotifyValueClear
 6543              		.syntax unified
 6544              		.thumb
 6545              		.thumb_func
 6546              		.fpu fpv4-sp-d16
 6548              	ulTaskNotifyValueClear:
 6549              	.LVL453:
 6550              	.LFB55:
5144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 6551              		.loc 1 5144 2 is_stmt 1 view -0
 6552              		.cfi_startproc
 6553              		@ args = 0, pretend = 0, frame = 0
 6554              		@ frame_needed = 0, uses_anonymous_args = 0
5144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 6555              		.loc 1 5144 2 is_stmt 0 view .LVU1845
 6556 0000 70B5     		push	{r4, r5, r6, lr}
 6557              		.cfi_def_cfa_offset 16
 6558              		.cfi_offset 4, -16
 6559              		.cfi_offset 5, -12
 6560              		.cfi_offset 6, -8
 6561              		.cfi_offset 14, -4
ARM GAS  /tmp/cc7Oi1VE.s 			page 242


 6562 0002 0C46     		mov	r4, r1
5145:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulReturn;
 6563              		.loc 1 5145 2 is_stmt 1 view .LVU1846
5146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6564              		.loc 1 5146 2 view .LVU1847
5150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6565              		.loc 1 5150 3 view .LVU1848
5150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6566              		.loc 1 5150 11 is_stmt 0 view .LVU1849
 6567 0004 0546     		mov	r5, r0
 6568 0006 60B1     		cbz	r0, .L505
 6569              	.LVL454:
 6570              	.L503:
5152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 6571              		.loc 1 5152 3 is_stmt 1 discriminator 4 view .LVU1850
 6572 0008 FFF7FEFF 		bl	vPortEnterCritical
 6573              	.LVL455:
5156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ulNotifiedValue &= ~ulBitsToClear;
 6574              		.loc 1 5156 4 discriminator 4 view .LVU1851
5156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ulNotifiedValue &= ~ulBitsToClear;
 6575              		.loc 1 5156 27 is_stmt 0 discriminator 4 view .LVU1852
 6576 000c 064B     		ldr	r3, .L506
 6577 000e 1B68     		ldr	r3, [r3]
5156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ulNotifiedValue &= ~ulBitsToClear;
 6578              		.loc 1 5156 13 discriminator 4 view .LVU1853
 6579 0010 DE6C     		ldr	r6, [r3, #76]
 6580              	.LVL456:
5157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 6581              		.loc 1 5157 4 is_stmt 1 discriminator 4 view .LVU1854
5157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 6582              		.loc 1 5157 27 is_stmt 0 discriminator 4 view .LVU1855
 6583 0012 EB6C     		ldr	r3, [r5, #76]
 6584 0014 23EA0403 		bic	r3, r3, r4
 6585 0018 EB64     		str	r3, [r5, #76]
5159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6586              		.loc 1 5159 3 is_stmt 1 discriminator 4 view .LVU1856
 6587 001a FFF7FEFF 		bl	vPortExitCritical
 6588              	.LVL457:
5161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 6589              		.loc 1 5161 3 discriminator 4 view .LVU1857
5162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6590              		.loc 1 5162 2 is_stmt 0 discriminator 4 view .LVU1858
 6591 001e 3046     		mov	r0, r6
 6592 0020 70BD     		pop	{r4, r5, r6, pc}
 6593              	.LVL458:
 6594              	.L505:
5150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6595              		.loc 1 5150 11 discriminator 1 view .LVU1859
 6596 0022 014B     		ldr	r3, .L506
 6597 0024 1D68     		ldr	r5, [r3]
 6598              	.LVL459:
5150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6599              		.loc 1 5150 11 discriminator 1 view .LVU1860
 6600 0026 EFE7     		b	.L503
 6601              	.L507:
 6602              		.align	2
 6603              	.L506:
ARM GAS  /tmp/cc7Oi1VE.s 			page 243


 6604 0028 00000000 		.word	.LANCHOR10
 6605              		.cfi_endproc
 6606              	.LFE55:
 6608              		.global	pxCurrentTCB
 6609              		.section	.bss.pxCurrentTCB,"aw",%nobits
 6610              		.align	2
 6611              		.set	.LANCHOR10,. + 0
 6614              	pxCurrentTCB:
 6615 0000 00000000 		.space	4
 6616              		.section	.bss.pxDelayedTaskList,"aw",%nobits
 6617              		.align	2
 6618              		.set	.LANCHOR2,. + 0
 6621              	pxDelayedTaskList:
 6622 0000 00000000 		.space	4
 6623              		.section	.bss.pxOverflowDelayedTaskList,"aw",%nobits
 6624              		.align	2
 6625              		.set	.LANCHOR8,. + 0
 6628              	pxOverflowDelayedTaskList:
 6629 0000 00000000 		.space	4
 6630              		.section	.bss.pxReadyTasksLists,"aw",%nobits
 6631              		.align	2
 6632              		.set	.LANCHOR4,. + 0
 6635              	pxReadyTasksLists:
 6636 0000 00000000 		.space	140
 6636      00000000 
 6636      00000000 
 6636      00000000 
 6636      00000000 
 6637              		.section	.bss.uxCurrentNumberOfTasks,"aw",%nobits
 6638              		.align	2
 6639              		.set	.LANCHOR9,. + 0
 6642              	uxCurrentNumberOfTasks:
 6643 0000 00000000 		.space	4
 6644              		.section	.bss.uxDeletedTasksWaitingCleanUp,"aw",%nobits
 6645              		.align	2
 6646              		.set	.LANCHOR14,. + 0
 6649              	uxDeletedTasksWaitingCleanUp:
 6650 0000 00000000 		.space	4
 6651              		.section	.bss.uxSchedulerSuspended,"aw",%nobits
 6652              		.align	2
 6653              		.set	.LANCHOR16,. + 0
 6656              	uxSchedulerSuspended:
 6657 0000 00000000 		.space	4
 6658              		.section	.bss.uxTaskNumber,"aw",%nobits
 6659              		.align	2
 6660              		.set	.LANCHOR12,. + 0
 6663              	uxTaskNumber:
 6664 0000 00000000 		.space	4
 6665              		.section	.bss.uxTopReadyPriority,"aw",%nobits
 6666              		.align	2
 6667              		.set	.LANCHOR13,. + 0
 6670              	uxTopReadyPriority:
 6671 0000 00000000 		.space	4
 6672              		.section	.bss.xDelayedTaskList1,"aw",%nobits
 6673              		.align	2
 6674              		.set	.LANCHOR5,. + 0
 6677              	xDelayedTaskList1:
ARM GAS  /tmp/cc7Oi1VE.s 			page 244


 6678 0000 00000000 		.space	20
 6678      00000000 
 6678      00000000 
 6678      00000000 
 6678      00000000 
 6679              		.section	.bss.xDelayedTaskList2,"aw",%nobits
 6680              		.align	2
 6681              		.set	.LANCHOR6,. + 0
 6684              	xDelayedTaskList2:
 6685 0000 00000000 		.space	20
 6685      00000000 
 6685      00000000 
 6685      00000000 
 6685      00000000 
 6686              		.section	.bss.xIdleTaskHandle,"aw",%nobits
 6687              		.align	2
 6688              		.set	.LANCHOR17,. + 0
 6691              	xIdleTaskHandle:
 6692 0000 00000000 		.space	4
 6693              		.section	.bss.xNextTaskUnblockTime,"aw",%nobits
 6694              		.align	2
 6695              		.set	.LANCHOR3,. + 0
 6698              	xNextTaskUnblockTime:
 6699 0000 00000000 		.space	4
 6700              		.section	.bss.xNumOfOverflows,"aw",%nobits
 6701              		.align	2
 6702              		.set	.LANCHOR18,. + 0
 6705              	xNumOfOverflows:
 6706 0000 00000000 		.space	4
 6707              		.section	.bss.xPendedTicks,"aw",%nobits
 6708              		.align	2
 6709              		.set	.LANCHOR20,. + 0
 6712              	xPendedTicks:
 6713 0000 00000000 		.space	4
 6714              		.section	.bss.xPendingReadyList,"aw",%nobits
 6715              		.align	2
 6716              		.set	.LANCHOR1,. + 0
 6719              	xPendingReadyList:
 6720 0000 00000000 		.space	20
 6720      00000000 
 6720      00000000 
 6720      00000000 
 6720      00000000 
 6721              		.section	.bss.xSchedulerRunning,"aw",%nobits
 6722              		.align	2
 6723              		.set	.LANCHOR11,. + 0
 6726              	xSchedulerRunning:
 6727 0000 00000000 		.space	4
 6728              		.section	.bss.xSuspendedTaskList,"aw",%nobits
 6729              		.align	2
 6730              		.set	.LANCHOR0,. + 0
 6733              	xSuspendedTaskList:
 6734 0000 00000000 		.space	20
 6734      00000000 
 6734      00000000 
 6734      00000000 
 6734      00000000 
ARM GAS  /tmp/cc7Oi1VE.s 			page 245


 6735              		.section	.bss.xTasksWaitingTermination,"aw",%nobits
 6736              		.align	2
 6737              		.set	.LANCHOR7,. + 0
 6740              	xTasksWaitingTermination:
 6741 0000 00000000 		.space	20
 6741      00000000 
 6741      00000000 
 6741      00000000 
 6741      00000000 
 6742              		.section	.bss.xTickCount,"aw",%nobits
 6743              		.align	2
 6744              		.set	.LANCHOR15,. + 0
 6747              	xTickCount:
 6748 0000 00000000 		.space	4
 6749              		.section	.bss.xYieldPending,"aw",%nobits
 6750              		.align	2
 6751              		.set	.LANCHOR19,. + 0
 6754              	xYieldPending:
 6755 0000 00000000 		.space	4
 6756              		.text
 6757              	.Letext0:
 6758              		.file 3 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stddef.h"
 6759              		.file 4 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 6760              		.file 5 "Middlewares/Third_Party/FreeRTOS/Source/include/projdefs.h"
 6761              		.file 6 "Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h"
 6762              		.file 7 "Middlewares/Third_Party/FreeRTOS/Source/include/list.h"
 6763              		.file 8 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 6764              		.file 9 "Middlewares/Third_Party/FreeRTOS/Source/include/portable.h"
ARM GAS  /tmp/cc7Oi1VE.s 			page 246


DEFINED SYMBOLS
                            *ABS*:0000000000000000 tasks.c
     /tmp/cc7Oi1VE.s:18     .text.prvTaskIsTaskSuspended:0000000000000000 $t
     /tmp/cc7Oi1VE.s:25     .text.prvTaskIsTaskSuspended:0000000000000000 prvTaskIsTaskSuspended
     /tmp/cc7Oi1VE.s:115    .text.prvTaskIsTaskSuspended:0000000000000038 $d
     /tmp/cc7Oi1VE.s:121    .text.prvResetNextTaskUnblockTime:0000000000000000 $t
     /tmp/cc7Oi1VE.s:127    .text.prvResetNextTaskUnblockTime:0000000000000000 prvResetNextTaskUnblockTime
     /tmp/cc7Oi1VE.s:170    .text.prvResetNextTaskUnblockTime:0000000000000024 $d
     /tmp/cc7Oi1VE.s:176    .text.prvInitialiseNewTask:0000000000000000 $t
     /tmp/cc7Oi1VE.s:182    .text.prvInitialiseNewTask:0000000000000000 prvInitialiseNewTask
     /tmp/cc7Oi1VE.s:341    .text.prvInitialiseTaskLists:0000000000000000 $t
     /tmp/cc7Oi1VE.s:347    .text.prvInitialiseTaskLists:0000000000000000 prvInitialiseTaskLists
     /tmp/cc7Oi1VE.s:421    .text.prvInitialiseTaskLists:0000000000000048 $d
     /tmp/cc7Oi1VE.s:433    .text.prvAddNewTaskToReadyList:0000000000000000 $t
     /tmp/cc7Oi1VE.s:439    .text.prvAddNewTaskToReadyList:0000000000000000 prvAddNewTaskToReadyList
     /tmp/cc7Oi1VE.s:574    .text.prvAddNewTaskToReadyList:0000000000000090 $d
     /tmp/cc7Oi1VE.s:584    .text.prvDeleteTCB:0000000000000000 $t
     /tmp/cc7Oi1VE.s:590    .text.prvDeleteTCB:0000000000000000 prvDeleteTCB
     /tmp/cc7Oi1VE.s:667    .text.prvCheckTasksWaitingTermination:0000000000000000 $t
     /tmp/cc7Oi1VE.s:673    .text.prvCheckTasksWaitingTermination:0000000000000000 prvCheckTasksWaitingTermination
     /tmp/cc7Oi1VE.s:748    .text.prvCheckTasksWaitingTermination:0000000000000040 $d
     /tmp/cc7Oi1VE.s:755    .text.prvIdleTask:0000000000000000 $t
     /tmp/cc7Oi1VE.s:761    .text.prvIdleTask:0000000000000000 prvIdleTask
     /tmp/cc7Oi1VE.s:809    .text.prvIdleTask:0000000000000024 $d
     /tmp/cc7Oi1VE.s:814    .text.prvAddCurrentTaskToDelayedList:0000000000000000 $t
     /tmp/cc7Oi1VE.s:820    .text.prvAddCurrentTaskToDelayedList:0000000000000000 prvAddCurrentTaskToDelayedList
     /tmp/cc7Oi1VE.s:939    .text.prvAddCurrentTaskToDelayedList:000000000000007c $d
     /tmp/cc7Oi1VE.s:950    .text.xTaskCreateStatic:0000000000000000 $t
     /tmp/cc7Oi1VE.s:957    .text.xTaskCreateStatic:0000000000000000 xTaskCreateStatic
     /tmp/cc7Oi1VE.s:1119   .text.xTaskCreate:0000000000000000 $t
     /tmp/cc7Oi1VE.s:1126   .text.xTaskCreate:0000000000000000 xTaskCreate
     /tmp/cc7Oi1VE.s:1247   .text.vTaskDelete:0000000000000000 $t
     /tmp/cc7Oi1VE.s:1254   .text.vTaskDelete:0000000000000000 vTaskDelete
     /tmp/cc7Oi1VE.s:1439   .text.vTaskDelete:00000000000000bc $d
     /tmp/cc7Oi1VE.s:1452   .text.uxTaskPriorityGet:0000000000000000 $t
     /tmp/cc7Oi1VE.s:1459   .text.uxTaskPriorityGet:0000000000000000 uxTaskPriorityGet
     /tmp/cc7Oi1VE.s:1504   .text.uxTaskPriorityGet:000000000000001c $d
     /tmp/cc7Oi1VE.s:1509   .text.uxTaskPriorityGetFromISR:0000000000000000 $t
     /tmp/cc7Oi1VE.s:1516   .text.uxTaskPriorityGetFromISR:0000000000000000 uxTaskPriorityGetFromISR
     /tmp/cc7Oi1VE.s:1596   .text.uxTaskPriorityGetFromISR:000000000000002c $d
     /tmp/cc7Oi1VE.s:1601   .text.vTaskPrioritySet:0000000000000000 $t
     /tmp/cc7Oi1VE.s:1608   .text.vTaskPrioritySet:0000000000000000 vTaskPrioritySet
     /tmp/cc7Oi1VE.s:1852   .text.vTaskPrioritySet:00000000000000dc $d
     /tmp/cc7Oi1VE.s:1859   .text.vTaskResume:0000000000000000 $t
     /tmp/cc7Oi1VE.s:1866   .text.vTaskResume:0000000000000000 vTaskResume
     /tmp/cc7Oi1VE.s:1996   .text.vTaskResume:000000000000007c $d
     /tmp/cc7Oi1VE.s:2003   .text.xTaskResumeFromISR:0000000000000000 $t
     /tmp/cc7Oi1VE.s:2010   .text.xTaskResumeFromISR:0000000000000000 xTaskResumeFromISR
     /tmp/cc7Oi1VE.s:2180   .text.xTaskResumeFromISR:0000000000000090 $d
     /tmp/cc7Oi1VE.s:2189   .rodata.vTaskStartScheduler.str1.4:0000000000000000 $d
     /tmp/cc7Oi1VE.s:2193   .text.vTaskStartScheduler:0000000000000000 $t
     /tmp/cc7Oi1VE.s:2200   .text.vTaskStartScheduler:0000000000000000 vTaskStartScheduler
     /tmp/cc7Oi1VE.s:2299   .text.vTaskStartScheduler:000000000000005c $d
     /tmp/cc7Oi1VE.s:2309   .text.vTaskEndScheduler:0000000000000000 $t
     /tmp/cc7Oi1VE.s:2316   .text.vTaskEndScheduler:0000000000000000 vTaskEndScheduler
     /tmp/cc7Oi1VE.s:2358   .text.vTaskEndScheduler:0000000000000020 $d
     /tmp/cc7Oi1VE.s:2363   .text.vTaskSuspendAll:0000000000000000 $t
ARM GAS  /tmp/cc7Oi1VE.s 			page 247


     /tmp/cc7Oi1VE.s:2370   .text.vTaskSuspendAll:0000000000000000 vTaskSuspendAll
     /tmp/cc7Oi1VE.s:2389   .text.vTaskSuspendAll:000000000000000c $d
     /tmp/cc7Oi1VE.s:2394   .text.xTaskGetTickCount:0000000000000000 $t
     /tmp/cc7Oi1VE.s:2401   .text.xTaskGetTickCount:0000000000000000 xTaskGetTickCount
     /tmp/cc7Oi1VE.s:2422   .text.xTaskGetTickCount:0000000000000008 $d
     /tmp/cc7Oi1VE.s:2427   .text.xTaskGetTickCountFromISR:0000000000000000 $t
     /tmp/cc7Oi1VE.s:2434   .text.xTaskGetTickCountFromISR:0000000000000000 xTaskGetTickCountFromISR
     /tmp/cc7Oi1VE.s:2462   .text.xTaskGetTickCountFromISR:000000000000000c $d
     /tmp/cc7Oi1VE.s:2467   .text.uxTaskGetNumberOfTasks:0000000000000000 $t
     /tmp/cc7Oi1VE.s:2474   .text.uxTaskGetNumberOfTasks:0000000000000000 uxTaskGetNumberOfTasks
     /tmp/cc7Oi1VE.s:2490   .text.uxTaskGetNumberOfTasks:0000000000000008 $d
     /tmp/cc7Oi1VE.s:2495   .text.pcTaskGetName:0000000000000000 $t
     /tmp/cc7Oi1VE.s:2502   .text.pcTaskGetName:0000000000000000 pcTaskGetName
     /tmp/cc7Oi1VE.s:2563   .text.pcTaskGetName:0000000000000024 $d
     /tmp/cc7Oi1VE.s:2568   .text.xTaskIncrementTick:0000000000000000 $t
     /tmp/cc7Oi1VE.s:2575   .text.xTaskIncrementTick:0000000000000000 xTaskIncrementTick
     /tmp/cc7Oi1VE.s:2841   .text.xTaskIncrementTick:00000000000000ec $d
     /tmp/cc7Oi1VE.s:2856   .text.xTaskResumeAll:0000000000000000 $t
     /tmp/cc7Oi1VE.s:2863   .text.xTaskResumeAll:0000000000000000 xTaskResumeAll
     /tmp/cc7Oi1VE.s:3098   .text.xTaskResumeAll:00000000000000d8 $d
     /tmp/cc7Oi1VE.s:3110   .text.vTaskDelay:0000000000000000 $t
     /tmp/cc7Oi1VE.s:3117   .text.vTaskDelay:0000000000000000 vTaskDelay
     /tmp/cc7Oi1VE.s:3209   .text.vTaskDelay:0000000000000048 $d
     /tmp/cc7Oi1VE.s:3214   .text.xTaskCatchUpTicks:0000000000000000 $t
     /tmp/cc7Oi1VE.s:3221   .text.xTaskCatchUpTicks:0000000000000000 xTaskCatchUpTicks
     /tmp/cc7Oi1VE.s:3288   .text.xTaskCatchUpTicks:0000000000000030 $d
     /tmp/cc7Oi1VE.s:3294   .text.vTaskSwitchContext:0000000000000000 $t
     /tmp/cc7Oi1VE.s:3301   .text.vTaskSwitchContext:0000000000000000 vTaskSwitchContext
     /tmp/cc7Oi1VE.s:3443   .text.vTaskSwitchContext:0000000000000084 $d
     /tmp/cc7Oi1VE.s:3454   .text.vTaskSuspend:0000000000000000 $t
     /tmp/cc7Oi1VE.s:3461   .text.vTaskSuspend:0000000000000000 vTaskSuspend
     /tmp/cc7Oi1VE.s:3665   .text.vTaskSuspend:00000000000000cc $d
     /tmp/cc7Oi1VE.s:3676   .text.vTaskPlaceOnEventList:0000000000000000 $t
     /tmp/cc7Oi1VE.s:3683   .text.vTaskPlaceOnEventList:0000000000000000 vTaskPlaceOnEventList
     /tmp/cc7Oi1VE.s:3749   .text.vTaskPlaceOnEventList:000000000000002c $d
     /tmp/cc7Oi1VE.s:3754   .text.vTaskPlaceOnUnorderedEventList:0000000000000000 $t
     /tmp/cc7Oi1VE.s:3761   .text.vTaskPlaceOnUnorderedEventList:0000000000000000 vTaskPlaceOnUnorderedEventList
     /tmp/cc7Oi1VE.s:3875   .text.vTaskPlaceOnUnorderedEventList:0000000000000050 $d
     /tmp/cc7Oi1VE.s:3881   .text.xTaskRemoveFromEventList:0000000000000000 $t
     /tmp/cc7Oi1VE.s:3888   .text.xTaskRemoveFromEventList:0000000000000000 xTaskRemoveFromEventList
     /tmp/cc7Oi1VE.s:4018   .text.xTaskRemoveFromEventList:0000000000000074 $d
     /tmp/cc7Oi1VE.s:4028   .text.vTaskRemoveFromUnorderedEventList:0000000000000000 $t
     /tmp/cc7Oi1VE.s:4035   .text.vTaskRemoveFromUnorderedEventList:0000000000000000 vTaskRemoveFromUnorderedEventList
     /tmp/cc7Oi1VE.s:4170   .text.vTaskRemoveFromUnorderedEventList:0000000000000074 $d
     /tmp/cc7Oi1VE.s:4179   .text.vTaskSetTimeOutState:0000000000000000 $t
     /tmp/cc7Oi1VE.s:4186   .text.vTaskSetTimeOutState:0000000000000000 vTaskSetTimeOutState
     /tmp/cc7Oi1VE.s:4254   .text.vTaskSetTimeOutState:0000000000000030 $d
     /tmp/cc7Oi1VE.s:4260   .text.vTaskInternalSetTimeOutState:0000000000000000 $t
     /tmp/cc7Oi1VE.s:4267   .text.vTaskInternalSetTimeOutState:0000000000000000 vTaskInternalSetTimeOutState
     /tmp/cc7Oi1VE.s:4290   .text.vTaskInternalSetTimeOutState:0000000000000010 $d
     /tmp/cc7Oi1VE.s:4296   .text.xTaskCheckForTimeOut:0000000000000000 $t
     /tmp/cc7Oi1VE.s:4303   .text.xTaskCheckForTimeOut:0000000000000000 xTaskCheckForTimeOut
     /tmp/cc7Oi1VE.s:4479   .text.xTaskCheckForTimeOut:000000000000007c $d
     /tmp/cc7Oi1VE.s:4486   .text.vTaskMissedYield:0000000000000000 $t
     /tmp/cc7Oi1VE.s:4493   .text.vTaskMissedYield:0000000000000000 vTaskMissedYield
     /tmp/cc7Oi1VE.s:4510   .text.vTaskMissedYield:0000000000000008 $d
     /tmp/cc7Oi1VE.s:4515   .text.xTaskGetCurrentTaskHandle:0000000000000000 $t
ARM GAS  /tmp/cc7Oi1VE.s 			page 248


     /tmp/cc7Oi1VE.s:4522   .text.xTaskGetCurrentTaskHandle:0000000000000000 xTaskGetCurrentTaskHandle
     /tmp/cc7Oi1VE.s:4541   .text.xTaskGetCurrentTaskHandle:0000000000000008 $d
     /tmp/cc7Oi1VE.s:4546   .text.xTaskGetSchedulerState:0000000000000000 $t
     /tmp/cc7Oi1VE.s:4553   .text.xTaskGetSchedulerState:0000000000000000 xTaskGetSchedulerState
     /tmp/cc7Oi1VE.s:4591   .text.xTaskGetSchedulerState:0000000000000018 $d
     /tmp/cc7Oi1VE.s:4597   .text.xTaskPriorityInherit:0000000000000000 $t
     /tmp/cc7Oi1VE.s:4604   .text.xTaskPriorityInherit:0000000000000000 xTaskPriorityInherit
     /tmp/cc7Oi1VE.s:4767   .text.xTaskPriorityInherit:00000000000000a0 $d
     /tmp/cc7Oi1VE.s:4774   .text.xTaskPriorityDisinherit:0000000000000000 $t
     /tmp/cc7Oi1VE.s:4781   .text.xTaskPriorityDisinherit:0000000000000000 xTaskPriorityDisinherit
     /tmp/cc7Oi1VE.s:4975   .text.xTaskPriorityDisinherit:00000000000000a8 $d
     /tmp/cc7Oi1VE.s:4982   .text.vTaskPriorityDisinheritAfterTimeout:0000000000000000 $t
     /tmp/cc7Oi1VE.s:4989   .text.vTaskPriorityDisinheritAfterTimeout:0000000000000000 vTaskPriorityDisinheritAfterTimeout
     /tmp/cc7Oi1VE.s:5185   .text.vTaskPriorityDisinheritAfterTimeout:00000000000000a8 $d
     /tmp/cc7Oi1VE.s:5192   .text.uxTaskResetEventItemValue:0000000000000000 $t
     /tmp/cc7Oi1VE.s:5199   .text.uxTaskResetEventItemValue:0000000000000000 uxTaskResetEventItemValue
     /tmp/cc7Oi1VE.s:5226   .text.uxTaskResetEventItemValue:0000000000000014 $d
     /tmp/cc7Oi1VE.s:5231   .text.pvTaskIncrementMutexHeldCount:0000000000000000 $t
     /tmp/cc7Oi1VE.s:5238   .text.pvTaskIncrementMutexHeldCount:0000000000000000 pvTaskIncrementMutexHeldCount
     /tmp/cc7Oi1VE.s:5269   .text.pvTaskIncrementMutexHeldCount:0000000000000018 $d
     /tmp/cc7Oi1VE.s:5274   .text.ulTaskNotifyTake:0000000000000000 $t
     /tmp/cc7Oi1VE.s:5281   .text.ulTaskNotifyTake:0000000000000000 ulTaskNotifyTake
     /tmp/cc7Oi1VE.s:5402   .text.ulTaskNotifyTake:0000000000000074 $d
     /tmp/cc7Oi1VE.s:5407   .text.xTaskNotifyWait:0000000000000000 $t
     /tmp/cc7Oi1VE.s:5414   .text.xTaskNotifyWait:0000000000000000 xTaskNotifyWait
     /tmp/cc7Oi1VE.s:5557   .text.xTaskNotifyWait:0000000000000094 $d
     /tmp/cc7Oi1VE.s:5562   .text.xTaskGenericNotify:0000000000000000 $t
     /tmp/cc7Oi1VE.s:5569   .text.xTaskGenericNotify:0000000000000000 xTaskGenericNotify
     /tmp/cc7Oi1VE.s:5624   .text.xTaskGenericNotify:000000000000002a $d
     /tmp/cc7Oi1VE.s:5854   .text.xTaskGenericNotify:00000000000000f4 $d
     /tmp/cc7Oi1VE.s:5861   .text.xTaskGenericNotifyFromISR:0000000000000000 $t
     /tmp/cc7Oi1VE.s:5868   .text.xTaskGenericNotifyFromISR:0000000000000000 xTaskGenericNotifyFromISR
     /tmp/cc7Oi1VE.s:5945   .text.xTaskGenericNotifyFromISR:0000000000000040 $d
     /tmp/cc7Oi1VE.s:6218   .text.xTaskGenericNotifyFromISR:000000000000011c $d
     /tmp/cc7Oi1VE.s:6228   .text.vTaskNotifyGiveFromISR:0000000000000000 $t
     /tmp/cc7Oi1VE.s:6235   .text.vTaskNotifyGiveFromISR:0000000000000000 vTaskNotifyGiveFromISR
     /tmp/cc7Oi1VE.s:6454   .text.vTaskNotifyGiveFromISR:00000000000000b8 $d
     /tmp/cc7Oi1VE.s:6464   .text.xTaskNotifyStateClear:0000000000000000 $t
     /tmp/cc7Oi1VE.s:6471   .text.xTaskNotifyStateClear:0000000000000000 xTaskNotifyStateClear
     /tmp/cc7Oi1VE.s:6536   .text.xTaskNotifyStateClear:0000000000000030 $d
     /tmp/cc7Oi1VE.s:6541   .text.ulTaskNotifyValueClear:0000000000000000 $t
     /tmp/cc7Oi1VE.s:6548   .text.ulTaskNotifyValueClear:0000000000000000 ulTaskNotifyValueClear
     /tmp/cc7Oi1VE.s:6604   .text.ulTaskNotifyValueClear:0000000000000028 $d
     /tmp/cc7Oi1VE.s:6614   .bss.pxCurrentTCB:0000000000000000 pxCurrentTCB
     /tmp/cc7Oi1VE.s:6610   .bss.pxCurrentTCB:0000000000000000 $d
     /tmp/cc7Oi1VE.s:6617   .bss.pxDelayedTaskList:0000000000000000 $d
     /tmp/cc7Oi1VE.s:6621   .bss.pxDelayedTaskList:0000000000000000 pxDelayedTaskList
     /tmp/cc7Oi1VE.s:6624   .bss.pxOverflowDelayedTaskList:0000000000000000 $d
     /tmp/cc7Oi1VE.s:6628   .bss.pxOverflowDelayedTaskList:0000000000000000 pxOverflowDelayedTaskList
     /tmp/cc7Oi1VE.s:6631   .bss.pxReadyTasksLists:0000000000000000 $d
     /tmp/cc7Oi1VE.s:6635   .bss.pxReadyTasksLists:0000000000000000 pxReadyTasksLists
     /tmp/cc7Oi1VE.s:6638   .bss.uxCurrentNumberOfTasks:0000000000000000 $d
     /tmp/cc7Oi1VE.s:6642   .bss.uxCurrentNumberOfTasks:0000000000000000 uxCurrentNumberOfTasks
     /tmp/cc7Oi1VE.s:6645   .bss.uxDeletedTasksWaitingCleanUp:0000000000000000 $d
     /tmp/cc7Oi1VE.s:6649   .bss.uxDeletedTasksWaitingCleanUp:0000000000000000 uxDeletedTasksWaitingCleanUp
     /tmp/cc7Oi1VE.s:6652   .bss.uxSchedulerSuspended:0000000000000000 $d
     /tmp/cc7Oi1VE.s:6656   .bss.uxSchedulerSuspended:0000000000000000 uxSchedulerSuspended
ARM GAS  /tmp/cc7Oi1VE.s 			page 249


     /tmp/cc7Oi1VE.s:6659   .bss.uxTaskNumber:0000000000000000 $d
     /tmp/cc7Oi1VE.s:6663   .bss.uxTaskNumber:0000000000000000 uxTaskNumber
     /tmp/cc7Oi1VE.s:6666   .bss.uxTopReadyPriority:0000000000000000 $d
     /tmp/cc7Oi1VE.s:6670   .bss.uxTopReadyPriority:0000000000000000 uxTopReadyPriority
     /tmp/cc7Oi1VE.s:6673   .bss.xDelayedTaskList1:0000000000000000 $d
     /tmp/cc7Oi1VE.s:6677   .bss.xDelayedTaskList1:0000000000000000 xDelayedTaskList1
     /tmp/cc7Oi1VE.s:6680   .bss.xDelayedTaskList2:0000000000000000 $d
     /tmp/cc7Oi1VE.s:6684   .bss.xDelayedTaskList2:0000000000000000 xDelayedTaskList2
     /tmp/cc7Oi1VE.s:6687   .bss.xIdleTaskHandle:0000000000000000 $d
     /tmp/cc7Oi1VE.s:6691   .bss.xIdleTaskHandle:0000000000000000 xIdleTaskHandle
     /tmp/cc7Oi1VE.s:6694   .bss.xNextTaskUnblockTime:0000000000000000 $d
     /tmp/cc7Oi1VE.s:6698   .bss.xNextTaskUnblockTime:0000000000000000 xNextTaskUnblockTime
     /tmp/cc7Oi1VE.s:6701   .bss.xNumOfOverflows:0000000000000000 $d
     /tmp/cc7Oi1VE.s:6705   .bss.xNumOfOverflows:0000000000000000 xNumOfOverflows
     /tmp/cc7Oi1VE.s:6708   .bss.xPendedTicks:0000000000000000 $d
     /tmp/cc7Oi1VE.s:6712   .bss.xPendedTicks:0000000000000000 xPendedTicks
     /tmp/cc7Oi1VE.s:6715   .bss.xPendingReadyList:0000000000000000 $d
     /tmp/cc7Oi1VE.s:6719   .bss.xPendingReadyList:0000000000000000 xPendingReadyList
     /tmp/cc7Oi1VE.s:6722   .bss.xSchedulerRunning:0000000000000000 $d
     /tmp/cc7Oi1VE.s:6726   .bss.xSchedulerRunning:0000000000000000 xSchedulerRunning
     /tmp/cc7Oi1VE.s:6729   .bss.xSuspendedTaskList:0000000000000000 $d
     /tmp/cc7Oi1VE.s:6733   .bss.xSuspendedTaskList:0000000000000000 xSuspendedTaskList
     /tmp/cc7Oi1VE.s:6736   .bss.xTasksWaitingTermination:0000000000000000 $d
     /tmp/cc7Oi1VE.s:6740   .bss.xTasksWaitingTermination:0000000000000000 xTasksWaitingTermination
     /tmp/cc7Oi1VE.s:6743   .bss.xTickCount:0000000000000000 $d
     /tmp/cc7Oi1VE.s:6747   .bss.xTickCount:0000000000000000 xTickCount
     /tmp/cc7Oi1VE.s:6750   .bss.xYieldPending:0000000000000000 $d
     /tmp/cc7Oi1VE.s:6754   .bss.xYieldPending:0000000000000000 xYieldPending
     /tmp/cc7Oi1VE.s:5630   .text.xTaskGenericNotify:000000000000002f $d
     /tmp/cc7Oi1VE.s:5630   .text.xTaskGenericNotify:0000000000000030 $t
     /tmp/cc7Oi1VE.s:5951   .text.xTaskGenericNotifyFromISR:0000000000000045 $d
     /tmp/cc7Oi1VE.s:5951   .text.xTaskGenericNotifyFromISR:0000000000000046 $t

UNDEFINED SYMBOLS
vListInitialiseItem
pxPortInitialiseStack
vListInitialise
vPortEnterCritical
vListInsertEnd
vPortExitCritical
vPortFree
uxListRemove
vListInsert
pvPortMalloc
vPortValidateInterruptPriority
vApplicationGetIdleTaskMemory
xPortStartScheduler
vPortEndScheduler
